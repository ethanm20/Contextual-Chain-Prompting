,Unnamed: 0.2,Unnamed: 0.1,Unnamed: 0,Access Gained,Attack Origin,Authentication Required,Availability,CVE ID,CVE Page,CWE ID,Complexity,Confidentiality,Integrity,Known Exploits,Publish Date,Score,Summary,Update Date,Vulnerability Classification,add_lines,codeLink,commit_id,commit_message,del_lines,file_name,files_changed,func_after,func_before,lang,lines_after,lines_before,parentID,patch,project,project_after,project_before,vul,vul_func_with_fix,idx,primevul_func_before_fix,primevul_func_after_fix,C1_Description_of_Functionality_In_Context,C2_Description_of_Functionality_Generic,C3_Explanation_of_Vulnerability_In_Context,C4_Explanation_of_Vulnerability_Generic,C5_Explanation_Vulnerability_Fixed_In_Context,C6_Explanation_Vulnerability_Fixed_Generic,G1_Clarity_C3_C5,G2_Relevance_C3_C5,G3_Completeness_C3_C5,G4_Actionability_C3_C5
0,0,182200,182200,,Remote,Not required,,CVE-2018-17082,https://www.cvedetails.com/cve/CVE-2018-17082/,CWE-79,Medium,,Partial,,2018-09-16,4.3,"The Apache2 component in PHP before 5.6.38, 7.0.x before 7.0.32, 7.1.x before 7.1.22, and 7.2.x before 7.2.10 allows XSS via the body of a *Transfer-Encoding: chunked* request, because the bucket brigade is mishandled in the php_handler function in sapi/apache2handler/sapi_apache2.c.",2019-08-19,XSS ,1,https://github.com/php/php-src/commit/23b057742e3cf199612fa8050ae86cae675e214e,23b057742e3cf199612fa8050ae86cae675e214e,"Fix for bug #76582

The brigade seems to end up in a messed up state if something fails
in shutdown, so we clean it up.",0,sapi/apache2handler/sapi_apache2.c,"{""sha"": ""0ebca9bca863909aef3fd3417bb3baad1605df34"", ""filename"": ""sapi/apache2handler/sapi_apache2.c"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 0, ""changes"": 1, ""blob_url"": ""https://github.com/php/php-src/blob/23b057742e3cf199612fa8050ae86cae675e214e/sapi/apache2handler/sapi_apache2.c"", ""raw_url"": ""https://github.com/php/php-src/raw/23b057742e3cf199612fa8050ae86cae675e214e/sapi/apache2handler/sapi_apache2.c"", ""contents_url"": ""https://api.github.com/repos/php/php-src/contents/sapi/apache2handler/sapi_apache2.c?ref=23b057742e3cf199612fa8050ae86cae675e214e"", ""patch"": ""@@ -678,6 +678,7 @@ zend_first_try {\n \tif (!parent_req) {\n \t\tphp_apache_request_dtor(r TSRMLS_CC);\n \t\tctx->request_processed = 1;\n+\t\tapr_brigade_cleanup(brigade);\n \t\tbucket = apr_bucket_eos_create(r->connection->bucket_alloc);\n \t\tAPR_BRIGADE_INSERT_TAIL(brigade, bucket);\n ""}","static int php_handler(request_rec *r)
{
	php_struct * volatile ctx;
	void *conf;
	apr_bucket_brigade * volatile brigade;
	apr_bucket *bucket;
	apr_status_t rv;
	request_rec * volatile parent_req = NULL;
	TSRMLS_FETCH();

#define PHPAP_INI_OFF php_apache_ini_dtor(r, parent_req TSRMLS_CC);

	conf = ap_get_module_config(r->per_dir_config, &php5_module);

	/* apply_config() needs r in some cases, so allocate server_context early */
	ctx = SG(server_context);
	if (ctx == NULL || (ctx && ctx->request_processed && !strcmp(r->protocol, ""INCLUDED""))) {
normal:
		ctx = SG(server_context) = apr_pcalloc(r->pool, sizeof(*ctx));
		/* register a cleanup so we clear out the SG(server_context)
		 * after each request. Note: We pass in the pointer to the
		 * server_context in case this is handled by a different thread.
		 */
		apr_pool_cleanup_register(r->pool, (void *)&SG(server_context), php_server_context_cleanup, apr_pool_cleanup_null);
		ctx->r = r;
		ctx = NULL; /* May look weird to null it here, but it is to catch the right case in the first_try later on */
	} else {
		parent_req = ctx->r;
		ctx->r = r;
	}
	apply_config(conf);

	if (strcmp(r->handler, PHP_MAGIC_TYPE) && strcmp(r->handler, PHP_SOURCE_MAGIC_TYPE) && strcmp(r->handler, PHP_SCRIPT)) {
		/* Check for xbithack in this case. */
		if (!AP2(xbithack) || strcmp(r->handler, ""text/html"") || !(r->finfo.protection & APR_UEXECUTE)) {
			PHPAP_INI_OFF;
			return DECLINED;
		}
	}

	/* Give a 404 if PATH_INFO is used but is explicitly disabled in
	 * the configuration; default behaviour is to accept. */
	if (r->used_path_info == AP_REQ_REJECT_PATH_INFO
		&& r->path_info && r->path_info[0]) {
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}

	/* handle situations where user turns the engine off */
	if (!AP2(engine)) {
		PHPAP_INI_OFF;
		return DECLINED;
	}

	if (r->finfo.filetype == 0) {
		php_apache_sapi_log_message_ex(""script '%s' not found or unable to stat"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}
	if (r->finfo.filetype == APR_DIR) {
		php_apache_sapi_log_message_ex(""attempt to invoke directory '%s' as script"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_FORBIDDEN;
	}

	/* Setup the CGI variables if this is the main request */
	if (r->main == NULL ||
		/* .. or if the sub-request environment differs from the main-request. */
		r->subprocess_env != r->main->subprocess_env
	) {
		/* setup standard CGI variables */
		ap_add_common_vars(r);
		ap_add_cgi_vars(r);
	}

zend_first_try {

	if (ctx == NULL) {
		brigade = apr_brigade_create(r->pool, r->connection->bucket_alloc);
		ctx = SG(server_context);
		ctx->brigade = brigade;

		if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
			zend_bailout();
		}
	} else {
		if (!parent_req) {
			parent_req = ctx->r;
		}
		if (parent_req && parent_req->handler &&
				strcmp(parent_req->handler, PHP_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SOURCE_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SCRIPT)) {
			if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
				zend_bailout();
			}
		}

		/*
		 * check if coming due to ErrorDocument
		 * We make a special exception of 413 (Invalid POST request) as the invalidity of the request occurs
		 * during processing of the request by PHP during POST processing. Therefor we need to re-use the exiting
		 * PHP instance to handle the request rather then creating a new one.
		*/
		if (parent_req && parent_req->status != HTTP_OK && parent_req->status != 413 && strcmp(r->protocol, ""INCLUDED"")) {
			parent_req = NULL;
			goto normal;
		}
		ctx->r = r;
		brigade = ctx->brigade;
	}

	if (AP2(last_modified)) {
		ap_update_mtime(r, r->finfo.mtime);
		ap_set_last_modified(r);
	}

	/* Determine if we need to parse the file or show the source */
	if (strncmp(r->handler, PHP_SOURCE_MAGIC_TYPE, sizeof(PHP_SOURCE_MAGIC_TYPE) - 1) == 0) {
		zend_syntax_highlighter_ini syntax_highlighter_ini;
		php_get_highlight_struct(&syntax_highlighter_ini);
		highlight_file((char *)r->filename, &syntax_highlighter_ini TSRMLS_CC);
	} else {
		zend_file_handle zfd;

		zfd.type = ZEND_HANDLE_FILENAME;
		zfd.filename = (char *) r->filename;
		zfd.free_filename = 0;
		zfd.opened_path = NULL;

		if (!parent_req) {
			php_execute_script(&zfd TSRMLS_CC);
		} else {
			zend_execute_scripts(ZEND_INCLUDE TSRMLS_CC, NULL, 1, &zfd);
		}

		apr_table_set(r->notes, ""mod_php_memory_usage"",
			apr_psprintf(ctx->r->pool, ""%"" APR_SIZE_T_FMT, zend_memory_peak_usage(1 TSRMLS_CC)));
	}

} zend_end_try();

 	if (!parent_req) {
 		php_apache_request_dtor(r TSRMLS_CC);
 		ctx->request_processed = 1;
		apr_brigade_cleanup(brigade);
 		bucket = apr_bucket_eos_create(r->connection->bucket_alloc);
 		APR_BRIGADE_INSERT_TAIL(brigade, bucket);
 
		rv = ap_pass_brigade(r->output_filters, brigade);
		if (rv != APR_SUCCESS || r->connection->aborted) {
zend_first_try {
			php_handle_aborted_connection();
} zend_end_try();
		}
		apr_brigade_cleanup(brigade);
		apr_pool_cleanup_run(r->pool, (void *)&SG(server_context), php_server_context_cleanup);
	} else {
		ctx->r = parent_req;
	}

	return OK;
}
","static int php_handler(request_rec *r)
{
	php_struct * volatile ctx;
	void *conf;
	apr_bucket_brigade * volatile brigade;
	apr_bucket *bucket;
	apr_status_t rv;
	request_rec * volatile parent_req = NULL;
	TSRMLS_FETCH();

#define PHPAP_INI_OFF php_apache_ini_dtor(r, parent_req TSRMLS_CC);

	conf = ap_get_module_config(r->per_dir_config, &php5_module);

	/* apply_config() needs r in some cases, so allocate server_context early */
	ctx = SG(server_context);
	if (ctx == NULL || (ctx && ctx->request_processed && !strcmp(r->protocol, ""INCLUDED""))) {
normal:
		ctx = SG(server_context) = apr_pcalloc(r->pool, sizeof(*ctx));
		/* register a cleanup so we clear out the SG(server_context)
		 * after each request. Note: We pass in the pointer to the
		 * server_context in case this is handled by a different thread.
		 */
		apr_pool_cleanup_register(r->pool, (void *)&SG(server_context), php_server_context_cleanup, apr_pool_cleanup_null);
		ctx->r = r;
		ctx = NULL; /* May look weird to null it here, but it is to catch the right case in the first_try later on */
	} else {
		parent_req = ctx->r;
		ctx->r = r;
	}
	apply_config(conf);

	if (strcmp(r->handler, PHP_MAGIC_TYPE) && strcmp(r->handler, PHP_SOURCE_MAGIC_TYPE) && strcmp(r->handler, PHP_SCRIPT)) {
		/* Check for xbithack in this case. */
		if (!AP2(xbithack) || strcmp(r->handler, ""text/html"") || !(r->finfo.protection & APR_UEXECUTE)) {
			PHPAP_INI_OFF;
			return DECLINED;
		}
	}

	/* Give a 404 if PATH_INFO is used but is explicitly disabled in
	 * the configuration; default behaviour is to accept. */
	if (r->used_path_info == AP_REQ_REJECT_PATH_INFO
		&& r->path_info && r->path_info[0]) {
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}

	/* handle situations where user turns the engine off */
	if (!AP2(engine)) {
		PHPAP_INI_OFF;
		return DECLINED;
	}

	if (r->finfo.filetype == 0) {
		php_apache_sapi_log_message_ex(""script '%s' not found or unable to stat"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}
	if (r->finfo.filetype == APR_DIR) {
		php_apache_sapi_log_message_ex(""attempt to invoke directory '%s' as script"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_FORBIDDEN;
	}

	/* Setup the CGI variables if this is the main request */
	if (r->main == NULL ||
		/* .. or if the sub-request environment differs from the main-request. */
		r->subprocess_env != r->main->subprocess_env
	) {
		/* setup standard CGI variables */
		ap_add_common_vars(r);
		ap_add_cgi_vars(r);
	}

zend_first_try {

	if (ctx == NULL) {
		brigade = apr_brigade_create(r->pool, r->connection->bucket_alloc);
		ctx = SG(server_context);
		ctx->brigade = brigade;

		if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
			zend_bailout();
		}
	} else {
		if (!parent_req) {
			parent_req = ctx->r;
		}
		if (parent_req && parent_req->handler &&
				strcmp(parent_req->handler, PHP_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SOURCE_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SCRIPT)) {
			if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
				zend_bailout();
			}
		}

		/*
		 * check if coming due to ErrorDocument
		 * We make a special exception of 413 (Invalid POST request) as the invalidity of the request occurs
		 * during processing of the request by PHP during POST processing. Therefor we need to re-use the exiting
		 * PHP instance to handle the request rather then creating a new one.
		*/
		if (parent_req && parent_req->status != HTTP_OK && parent_req->status != 413 && strcmp(r->protocol, ""INCLUDED"")) {
			parent_req = NULL;
			goto normal;
		}
		ctx->r = r;
		brigade = ctx->brigade;
	}

	if (AP2(last_modified)) {
		ap_update_mtime(r, r->finfo.mtime);
		ap_set_last_modified(r);
	}

	/* Determine if we need to parse the file or show the source */
	if (strncmp(r->handler, PHP_SOURCE_MAGIC_TYPE, sizeof(PHP_SOURCE_MAGIC_TYPE) - 1) == 0) {
		zend_syntax_highlighter_ini syntax_highlighter_ini;
		php_get_highlight_struct(&syntax_highlighter_ini);
		highlight_file((char *)r->filename, &syntax_highlighter_ini TSRMLS_CC);
	} else {
		zend_file_handle zfd;

		zfd.type = ZEND_HANDLE_FILENAME;
		zfd.filename = (char *) r->filename;
		zfd.free_filename = 0;
		zfd.opened_path = NULL;

		if (!parent_req) {
			php_execute_script(&zfd TSRMLS_CC);
		} else {
			zend_execute_scripts(ZEND_INCLUDE TSRMLS_CC, NULL, 1, &zfd);
		}

		apr_table_set(r->notes, ""mod_php_memory_usage"",
			apr_psprintf(ctx->r->pool, ""%"" APR_SIZE_T_FMT, zend_memory_peak_usage(1 TSRMLS_CC)));
	}

} zend_end_try();

 	if (!parent_req) {
 		php_apache_request_dtor(r TSRMLS_CC);
 		ctx->request_processed = 1;
 		bucket = apr_bucket_eos_create(r->connection->bucket_alloc);
 		APR_BRIGADE_INSERT_TAIL(brigade, bucket);
 
		rv = ap_pass_brigade(r->output_filters, brigade);
		if (rv != APR_SUCCESS || r->connection->aborted) {
zend_first_try {
			php_handle_aborted_connection();
} zend_end_try();
		}
		apr_brigade_cleanup(brigade);
		apr_pool_cleanup_run(r->pool, (void *)&SG(server_context), php_server_context_cleanup);
	} else {
		ctx->r = parent_req;
	}

	return OK;
}
",C,"		apr_brigade_cleanup(brigade);
",,,"@@ -678,6 +678,7 @@ zend_first_try {
 	if (!parent_req) {
 		php_apache_request_dtor(r TSRMLS_CC);
 		ctx->request_processed = 1;
+		apr_brigade_cleanup(brigade);
 		bucket = apr_bucket_eos_create(r->connection->bucket_alloc);
 		APR_BRIGADE_INSERT_TAIL(brigade, bucket);
 ",php-src,23b057742e3cf199612fa8050ae86cae675e214e,1ba3314335b8bb7c86c24443588d5ef9c55d4a44,1,"static int php_handler(request_rec *r)
{
	php_struct * volatile ctx;
	void *conf;
	apr_bucket_brigade * volatile brigade;
	apr_bucket *bucket;
	apr_status_t rv;
	request_rec * volatile parent_req = NULL;
	TSRMLS_FETCH();

#define PHPAP_INI_OFF php_apache_ini_dtor(r, parent_req TSRMLS_CC);

	conf = ap_get_module_config(r->per_dir_config, &php5_module);

	/* apply_config() needs r in some cases, so allocate server_context early */
	ctx = SG(server_context);
	if (ctx == NULL || (ctx && ctx->request_processed && !strcmp(r->protocol, ""INCLUDED""))) {
normal:
		ctx = SG(server_context) = apr_pcalloc(r->pool, sizeof(*ctx));
		/* register a cleanup so we clear out the SG(server_context)
		 * after each request. Note: We pass in the pointer to the
		 * server_context in case this is handled by a different thread.
		 */
		apr_pool_cleanup_register(r->pool, (void *)&SG(server_context), php_server_context_cleanup, apr_pool_cleanup_null);
		ctx->r = r;
		ctx = NULL; /* May look weird to null it here, but it is to catch the right case in the first_try later on */
	} else {
		parent_req = ctx->r;
		ctx->r = r;
	}
	apply_config(conf);

	if (strcmp(r->handler, PHP_MAGIC_TYPE) && strcmp(r->handler, PHP_SOURCE_MAGIC_TYPE) && strcmp(r->handler, PHP_SCRIPT)) {
		/* Check for xbithack in this case. */
		if (!AP2(xbithack) || strcmp(r->handler, ""text/html"") || !(r->finfo.protection & APR_UEXECUTE)) {
			PHPAP_INI_OFF;
			return DECLINED;
		}
	}

	/* Give a 404 if PATH_INFO is used but is explicitly disabled in
	 * the configuration; default behaviour is to accept. */
	if (r->used_path_info == AP_REQ_REJECT_PATH_INFO
		&& r->path_info && r->path_info[0]) {
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}

	/* handle situations where user turns the engine off */
	if (!AP2(engine)) {
		PHPAP_INI_OFF;
		return DECLINED;
	}

	if (r->finfo.filetype == 0) {
		php_apache_sapi_log_message_ex(""script '%s' not found or unable to stat"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}
	if (r->finfo.filetype == APR_DIR) {
		php_apache_sapi_log_message_ex(""attempt to invoke directory '%s' as script"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_FORBIDDEN;
	}

	/* Setup the CGI variables if this is the main request */
	if (r->main == NULL ||
		/* .. or if the sub-request environment differs from the main-request. */
		r->subprocess_env != r->main->subprocess_env
	) {
		/* setup standard CGI variables */
		ap_add_common_vars(r);
		ap_add_cgi_vars(r);
	}

zend_first_try {

	if (ctx == NULL) {
		brigade = apr_brigade_create(r->pool, r->connection->bucket_alloc);
		ctx = SG(server_context);
		ctx->brigade = brigade;

		if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
			zend_bailout();
		}
	} else {
		if (!parent_req) {
			parent_req = ctx->r;
		}
		if (parent_req && parent_req->handler &&
				strcmp(parent_req->handler, PHP_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SOURCE_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SCRIPT)) {
			if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
				zend_bailout();
			}
		}

		/*
		 * check if coming due to ErrorDocument
		 * We make a special exception of 413 (Invalid POST request) as the invalidity of the request occurs
		 * during processing of the request by PHP during POST processing. Therefor we need to re-use the exiting
		 * PHP instance to handle the request rather then creating a new one.
		*/
		if (parent_req && parent_req->status != HTTP_OK && parent_req->status != 413 && strcmp(r->protocol, ""INCLUDED"")) {
			parent_req = NULL;
			goto normal;
		}
		ctx->r = r;
		brigade = ctx->brigade;
	}

	if (AP2(last_modified)) {
		ap_update_mtime(r, r->finfo.mtime);
		ap_set_last_modified(r);
	}

	/* Determine if we need to parse the file or show the source */
	if (strncmp(r->handler, PHP_SOURCE_MAGIC_TYPE, sizeof(PHP_SOURCE_MAGIC_TYPE) - 1) == 0) {
		zend_syntax_highlighter_ini syntax_highlighter_ini;
		php_get_highlight_struct(&syntax_highlighter_ini);
		highlight_file((char *)r->filename, &syntax_highlighter_ini TSRMLS_CC);
	} else {
		zend_file_handle zfd;

		zfd.type = ZEND_HANDLE_FILENAME;
		zfd.filename = (char *) r->filename;
		zfd.free_filename = 0;
		zfd.opened_path = NULL;

		if (!parent_req) {
			php_execute_script(&zfd TSRMLS_CC);
		} else {
			zend_execute_scripts(ZEND_INCLUDE TSRMLS_CC, NULL, 1, &zfd);
		}

		apr_table_set(r->notes, ""mod_php_memory_usage"",
			apr_psprintf(ctx->r->pool, ""%"" APR_SIZE_T_FMT, zend_memory_peak_usage(1 TSRMLS_CC)));
	}

} zend_end_try();

 	if (!parent_req) {
 		php_apache_request_dtor(r TSRMLS_CC);
 		ctx->request_processed = 1;
//fix_flaw_line_below:
//		apr_brigade_cleanup(brigade);
 		bucket = apr_bucket_eos_create(r->connection->bucket_alloc);
 		APR_BRIGADE_INSERT_TAIL(brigade, bucket);
 
		rv = ap_pass_brigade(r->output_filters, brigade);
		if (rv != APR_SUCCESS || r->connection->aborted) {
zend_first_try {
			php_handle_aborted_connection();
} zend_end_try();
		}
		apr_brigade_cleanup(brigade);
		apr_pool_cleanup_run(r->pool, (void *)&SG(server_context), php_server_context_cleanup);
	} else {
		ctx->r = parent_req;
	}

	return OK;
}
",182200,"static int php_handler(request_rec *r)
{
	php_struct * volatile ctx;
	void *conf;
	apr_bucket_brigade * volatile brigade;
	apr_bucket *bucket;
	apr_status_t rv;
	request_rec * volatile parent_req = NULL;
	TSRMLS_FETCH();

#define PHPAP_INI_OFF php_apache_ini_dtor(r, parent_req TSRMLS_CC);

	conf = ap_get_module_config(r->per_dir_config, &php5_module);

	/* apply_config() needs r in some cases, so allocate server_context early */
	ctx = SG(server_context);
	if (ctx == NULL || (ctx && ctx->request_processed && !strcmp(r->protocol, ""INCLUDED""))) {
normal:
		ctx = SG(server_context) = apr_pcalloc(r->pool, sizeof(*ctx));
		/* register a cleanup so we clear out the SG(server_context)
		 * after each request. Note: We pass in the pointer to the
		 * server_context in case this is handled by a different thread.
		 */
		apr_pool_cleanup_register(r->pool, (void *)&SG(server_context), php_server_context_cleanup, apr_pool_cleanup_null);
		ctx->r = r;
		ctx = NULL; /* May look weird to null it here, but it is to catch the right case in the first_try later on */
	} else {
		parent_req = ctx->r;
		ctx->r = r;
	}
	apply_config(conf);

	if (strcmp(r->handler, PHP_MAGIC_TYPE) && strcmp(r->handler, PHP_SOURCE_MAGIC_TYPE) && strcmp(r->handler, PHP_SCRIPT)) {
		/* Check for xbithack in this case. */
		if (!AP2(xbithack) || strcmp(r->handler, ""text/html"") || !(r->finfo.protection & APR_UEXECUTE)) {
			PHPAP_INI_OFF;
			return DECLINED;
		}
	}

	/* Give a 404 if PATH_INFO is used but is explicitly disabled in
	 * the configuration; default behaviour is to accept. */
	if (r->used_path_info == AP_REQ_REJECT_PATH_INFO
		&& r->path_info && r->path_info[0]) {
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}

	/* handle situations where user turns the engine off */
	if (!AP2(engine)) {
		PHPAP_INI_OFF;
		return DECLINED;
	}

	if (r->finfo.filetype == 0) {
		php_apache_sapi_log_message_ex(""script '%s' not found or unable to stat"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}
	if (r->finfo.filetype == APR_DIR) {
		php_apache_sapi_log_message_ex(""attempt to invoke directory '%s' as script"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_FORBIDDEN;
	}

	/* Setup the CGI variables if this is the main request */
	if (r->main == NULL ||
		/* .. or if the sub-request environment differs from the main-request. */
		r->subprocess_env != r->main->subprocess_env
	) {
		/* setup standard CGI variables */
		ap_add_common_vars(r);
		ap_add_cgi_vars(r);
	}

zend_first_try {

	if (ctx == NULL) {
		brigade = apr_brigade_create(r->pool, r->connection->bucket_alloc);
		ctx = SG(server_context);
		ctx->brigade = brigade;

		if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
			zend_bailout();
		}
	} else {
		if (!parent_req) {
			parent_req = ctx->r;
		}
		if (parent_req && parent_req->handler &&
				strcmp(parent_req->handler, PHP_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SOURCE_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SCRIPT)) {
			if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
				zend_bailout();
			}
		}

		/*
		 * check if coming due to ErrorDocument
		 * We make a special exception of 413 (Invalid POST request) as the invalidity of the request occurs
		 * during processing of the request by PHP during POST processing. Therefor we need to re-use the exiting
		 * PHP instance to handle the request rather then creating a new one.
		*/
		if (parent_req && parent_req->status != HTTP_OK && parent_req->status != 413 && strcmp(r->protocol, ""INCLUDED"")) {
			parent_req = NULL;
			goto normal;
		}
		ctx->r = r;
		brigade = ctx->brigade;
	}

	if (AP2(last_modified)) {
		ap_update_mtime(r, r->finfo.mtime);
		ap_set_last_modified(r);
	}

	/* Determine if we need to parse the file or show the source */
	if (strncmp(r->handler, PHP_SOURCE_MAGIC_TYPE, sizeof(PHP_SOURCE_MAGIC_TYPE) - 1) == 0) {
		zend_syntax_highlighter_ini syntax_highlighter_ini;
		php_get_highlight_struct(&syntax_highlighter_ini);
		highlight_file((char *)r->filename, &syntax_highlighter_ini TSRMLS_CC);
	} else {
		zend_file_handle zfd;

		zfd.type = ZEND_HANDLE_FILENAME;
		zfd.filename = (char *) r->filename;
		zfd.free_filename = 0;
		zfd.opened_path = NULL;

		if (!parent_req) {
			php_execute_script(&zfd TSRMLS_CC);
		} else {
			zend_execute_scripts(ZEND_INCLUDE TSRMLS_CC, NULL, 1, &zfd);
		}

		apr_table_set(r->notes, ""mod_php_memory_usage"",
			apr_psprintf(ctx->r->pool, ""%"" APR_SIZE_T_FMT, zend_memory_peak_usage(1 TSRMLS_CC)));
	}

} zend_end_try();

 	if (!parent_req) {
 		php_apache_request_dtor(r TSRMLS_CC);
 		ctx->request_processed = 1;
 		bucket = apr_bucket_eos_create(r->connection->bucket_alloc);
 		APR_BRIGADE_INSERT_TAIL(brigade, bucket);
 
		rv = ap_pass_brigade(r->output_filters, brigade);
		if (rv != APR_SUCCESS || r->connection->aborted) {
zend_first_try {
			php_handle_aborted_connection();
} zend_end_try();
		}
		apr_brigade_cleanup(brigade);
		apr_pool_cleanup_run(r->pool, (void *)&SG(server_context), php_server_context_cleanup);
	} else {
		ctx->r = parent_req;
	}

	return OK;
}
","static int php_handler(request_rec *r)
{
	php_struct * volatile ctx;
	void *conf;
	apr_bucket_brigade * volatile brigade;
	apr_bucket *bucket;
	apr_status_t rv;
	request_rec * volatile parent_req = NULL;
	TSRMLS_FETCH();

#define PHPAP_INI_OFF php_apache_ini_dtor(r, parent_req TSRMLS_CC);

	conf = ap_get_module_config(r->per_dir_config, &php5_module);

	/* apply_config() needs r in some cases, so allocate server_context early */
	ctx = SG(server_context);
	if (ctx == NULL || (ctx && ctx->request_processed && !strcmp(r->protocol, ""INCLUDED""))) {
normal:
		ctx = SG(server_context) = apr_pcalloc(r->pool, sizeof(*ctx));
		/* register a cleanup so we clear out the SG(server_context)
		 * after each request. Note: We pass in the pointer to the
		 * server_context in case this is handled by a different thread.
		 */
		apr_pool_cleanup_register(r->pool, (void *)&SG(server_context), php_server_context_cleanup, apr_pool_cleanup_null);
		ctx->r = r;
		ctx = NULL; /* May look weird to null it here, but it is to catch the right case in the first_try later on */
	} else {
		parent_req = ctx->r;
		ctx->r = r;
	}
	apply_config(conf);

	if (strcmp(r->handler, PHP_MAGIC_TYPE) && strcmp(r->handler, PHP_SOURCE_MAGIC_TYPE) && strcmp(r->handler, PHP_SCRIPT)) {
		/* Check for xbithack in this case. */
		if (!AP2(xbithack) || strcmp(r->handler, ""text/html"") || !(r->finfo.protection & APR_UEXECUTE)) {
			PHPAP_INI_OFF;
			return DECLINED;
		}
	}

	/* Give a 404 if PATH_INFO is used but is explicitly disabled in
	 * the configuration; default behaviour is to accept. */
	if (r->used_path_info == AP_REQ_REJECT_PATH_INFO
		&& r->path_info && r->path_info[0]) {
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}

	/* handle situations where user turns the engine off */
	if (!AP2(engine)) {
		PHPAP_INI_OFF;
		return DECLINED;
	}

	if (r->finfo.filetype == 0) {
		php_apache_sapi_log_message_ex(""script '%s' not found or unable to stat"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_NOT_FOUND;
	}
	if (r->finfo.filetype == APR_DIR) {
		php_apache_sapi_log_message_ex(""attempt to invoke directory '%s' as script"", r TSRMLS_CC);
		PHPAP_INI_OFF;
		return HTTP_FORBIDDEN;
	}

	/* Setup the CGI variables if this is the main request */
	if (r->main == NULL ||
		/* .. or if the sub-request environment differs from the main-request. */
		r->subprocess_env != r->main->subprocess_env
	) {
		/* setup standard CGI variables */
		ap_add_common_vars(r);
		ap_add_cgi_vars(r);
	}

zend_first_try {

	if (ctx == NULL) {
		brigade = apr_brigade_create(r->pool, r->connection->bucket_alloc);
		ctx = SG(server_context);
		ctx->brigade = brigade;

		if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
			zend_bailout();
		}
	} else {
		if (!parent_req) {
			parent_req = ctx->r;
		}
		if (parent_req && parent_req->handler &&
				strcmp(parent_req->handler, PHP_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SOURCE_MAGIC_TYPE) &&
				strcmp(parent_req->handler, PHP_SCRIPT)) {
			if (php_apache_request_ctor(r, ctx TSRMLS_CC)!=SUCCESS) {
				zend_bailout();
			}
		}

		/*
		 * check if coming due to ErrorDocument
		 * We make a special exception of 413 (Invalid POST request) as the invalidity of the request occurs
		 * during processing of the request by PHP during POST processing. Therefor we need to re-use the exiting
		 * PHP instance to handle the request rather then creating a new one.
		*/
		if (parent_req && parent_req->status != HTTP_OK && parent_req->status != 413 && strcmp(r->protocol, ""INCLUDED"")) {
			parent_req = NULL;
			goto normal;
		}
		ctx->r = r;
		brigade = ctx->brigade;
	}

	if (AP2(last_modified)) {
		ap_update_mtime(r, r->finfo.mtime);
		ap_set_last_modified(r);
	}

	/* Determine if we need to parse the file or show the source */
	if (strncmp(r->handler, PHP_SOURCE_MAGIC_TYPE, sizeof(PHP_SOURCE_MAGIC_TYPE) - 1) == 0) {
		zend_syntax_highlighter_ini syntax_highlighter_ini;
		php_get_highlight_struct(&syntax_highlighter_ini);
		highlight_file((char *)r->filename, &syntax_highlighter_ini TSRMLS_CC);
	} else {
		zend_file_handle zfd;

		zfd.type = ZEND_HANDLE_FILENAME;
		zfd.filename = (char *) r->filename;
		zfd.free_filename = 0;
		zfd.opened_path = NULL;

		if (!parent_req) {
			php_execute_script(&zfd TSRMLS_CC);
		} else {
			zend_execute_scripts(ZEND_INCLUDE TSRMLS_CC, NULL, 1, &zfd);
		}

		apr_table_set(r->notes, ""mod_php_memory_usage"",
			apr_psprintf(ctx->r->pool, ""%"" APR_SIZE_T_FMT, zend_memory_peak_usage(1 TSRMLS_CC)));
	}

} zend_end_try();

 	if (!parent_req) {
 		php_apache_request_dtor(r TSRMLS_CC);
 		ctx->request_processed = 1;
		apr_brigade_cleanup(brigade);
 		bucket = apr_bucket_eos_create(r->connection->bucket_alloc);
 		APR_BRIGADE_INSERT_TAIL(brigade, bucket);
 
		rv = ap_pass_brigade(r->output_filters, brigade);
		if (rv != APR_SUCCESS || r->connection->aborted) {
zend_first_try {
			php_handle_aborted_connection();
} zend_end_try();
		}
		apr_brigade_cleanup(brigade);
		apr_pool_cleanup_run(r->pool, (void *)&SG(server_context), php_server_context_cleanup);
	} else {
		ctx->r = parent_req;
	}

	return OK;
}
","The provided code defines a function `php_handler` that processes incoming HTTP requests for PHP scripts in an Apache server environment. It initializes a context for the PHP request, checks various conditions such as the request handler type and file existence, and sets up CGI variables. The function handles different scenarios, including executing PHP scripts or highlighting source code, while managing memory and cleanup operations. It also logs errors for missing scripts or directory access attempts. Finally, it passes the output to the next filter in the Apache processing chain and ensures proper cleanup of resources after the request is processed.","The code defines a function that handles HTTP requests for PHP scripts within an Apache server. It initializes a context for the request, checks the validity of the request type and file existence, and sets up necessary environment variables. The function processes the request by either executing the PHP script or displaying its source code, while managing memory and logging errors for issues like missing scripts or unauthorized directory access. After processing, it passes the output to the next stage in the server's filter chain and ensures proper cleanup of resources used during the request.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, arises from the potential for unvalidated user input to be executed as code. In the vulnerable code, the function processes requests without adequately checking the request handler type, which could allow an attacker to manipulate the request to execute arbitrary PHP code. The fix introduces checks to ensure that the request handler matches expected types, such as PHP scripts, and explicitly handles cases where the request is not valid, thereby preventing the execution of unintended code and enhancing overall security.","The vulnerability identified as CWE-79, which involves improper neutralization of input during web page generation, allows attackers to inject and execute arbitrary code through unvalidated user input. In the vulnerable code, insufficient checks on the request handler type could permit unauthorized execution of scripts. The fix addresses this by implementing strict validation of the request handler, ensuring that only legitimate script types are processed. Additionally, it includes conditions to handle invalid requests appropriately, thereby mitigating the risk of code injection and enhancing the overall security of the application against such attacks.","The vulnerability was fixed by adding explicit checks for the request handler type using conditions that compare the handler against expected values, such as PHP magic types and scripts. Specifically, the code now verifies that the handler is not equal to certain types before proceeding with execution. Additionally, the fix includes a check for the `used_path_info` variable to return a 404 error if path information is used but not allowed. These enhancements ensure that only valid requests are processed, thereby preventing unauthorized code execution and improving the overall security of the application.","The vulnerability was fixed by implementing strict validation of the request handler type to ensure that only legitimate script types are processed. The code now includes conditions that check the handler against predefined acceptable values, preventing the execution of unauthorized scripts. Additionally, it introduces checks to handle specific scenarios, such as rejecting requests that use path information when it is not permitted. These measures collectively enhance the security of the application by ensuring that only valid and intended requests are executed, thereby mitigating the risk of code injection attacks.","4, 4","4, 4","4,4","4,4"
1,1,184492,184492,,Remote,Not required,,CVE-2012-2872,https://www.cvedetails.com/cve/CVE-2012-2872/,CWE-79,Medium,,Partial,,2012-08-31,4.3,Cross-site scripting (XSS) vulnerability in an SSL interstitial page in Google Chrome before 21.0.1180.89 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.,2018-10-30,XSS ,3,https://github.com/chromium/chromium/commit/68b6502084af7e2021f7321633f5fbb5f997a58b,68b6502084af7e2021f7321633f5fbb5f997a58b,"Properly EscapeForHTML potentially malicious input from X.509 certificates.

BUG=142956

TEST=Create an X.509 certificate with a CN field that contains JavaScript.
When you get the SSL error screen, check that the HTML + JavaScript is
escape instead of being treated as HTML and/or script.

Review URL: https://chromiumcodereview.appspot.com/10827364

git-svn-id: svn://svn.chromium.org/chrome/trunk/src@152210 0039d316-1c4b-4281-b951-d872f2087c98",2,chrome/browser/ssl/ssl_error_info.cc,"{""sha"": ""d33960e55ff85b6899415bd0be1f0f9e14daca04"", ""filename"": ""chrome/browser/ssl/ssl_error_info.cc"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 2, ""changes"": 6, ""blob_url"": ""https://github.com/chromium/chromium/blob/68b6502084af7e2021f7321633f5fbb5f997a58b/chrome/browser/ssl/ssl_error_info.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/68b6502084af7e2021f7321633f5fbb5f997a58b/chrome/browser/ssl/ssl_error_info.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/ssl/ssl_error_info.cc?ref=68b6502084af7e2021f7321633f5fbb5f997a58b"", ""patch"": ""@@ -12,6 +12,7 @@\n #include \""grit/chromium_strings.h\""\n #include \""grit/generated_resources.h\""\n #include \""net/base/cert_status_flags.h\""\n+#include \""net/base/escape.h\""\n #include \""net/base/net_errors.h\""\n #include \""net/base/ssl_info.h\""\n #include \""ui/base/l10n/l10n_util.h\""\n@@ -55,7 +56,8 @@ SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,\n       details =\n           l10n_util::GetStringFUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_DETAILS,\n                                      UTF8ToUTF16(request_url.host()),\n-                                     UTF8ToUTF16(dns_names[i]),\n+                                     net::EscapeForHTML(\n+                                         UTF8ToUTF16(dns_names[i])),\n                                      UTF8ToUTF16(request_url.host()));\n       short_description = l10n_util::GetStringUTF16(\n           IDS_CERT_ERROR_COMMON_NAME_INVALID_DESCRIPTION);\n@@ -64,7 +66,7 @@ SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,\n       extra_info.push_back(\n           l10n_util::GetStringFUTF16(\n               IDS_CERT_ERROR_COMMON_NAME_INVALID_EXTRA_INFO_2,\n-              UTF8ToUTF16(cert->subject().common_name),\n+              net::EscapeForHTML(UTF8ToUTF16(cert->subject().common_name)),\n               UTF8ToUTF16(request_url.host())));\n       break;\n     }""}","SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,
                                       net::X509Certificate* cert,
                                       const GURL& request_url) {
  string16 title, details, short_description;
  std::vector<string16> extra_info;
  switch (error_type) {
    case CERT_COMMON_NAME_INVALID: {
      title =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_TITLE);
      std::vector<std::string> dns_names;
      cert->GetDNSNames(&dns_names);
      DCHECK(!dns_names.empty());
      size_t i = 0;
      for (; i < dns_names.size(); ++i) {
        if (dns_names[i] == cert->subject().common_name)
          break;
      }
      if (i == dns_names.size())
        i = 0;
       details =
           l10n_util::GetStringFUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_DETAILS,
                                      UTF8ToUTF16(request_url.host()),
                                     net::EscapeForHTML(
                                         UTF8ToUTF16(dns_names[i])),
                                      UTF8ToUTF16(request_url.host()));
       short_description = l10n_util::GetStringUTF16(
           IDS_CERT_ERROR_COMMON_NAME_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
       extra_info.push_back(
           l10n_util::GetStringFUTF16(
               IDS_CERT_ERROR_COMMON_NAME_INVALID_EXTRA_INFO_2,
              net::EscapeForHTML(UTF8ToUTF16(cert->subject().common_name)),
               UTF8ToUTF16(request_url.host())));
       break;
     }
    case CERT_DATE_INVALID:
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      if (cert->HasExpired()) {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_DESCRIPTION);
        extra_info.push_back(l10n_util::GetStringUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS_EXTRA_INFO_2));
      } else {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_NOT_YET_VALID_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_DESCRIPTION);
        extra_info.push_back(
            l10n_util::GetStringUTF16(
                IDS_CERT_ERROR_NOT_YET_VALID_DETAILS_EXTRA_INFO_2));
      }
      break;
    case CERT_AUTHORITY_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_AUTHORITY_INVALID_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_2,
          UTF8ToUTF16(request_url.host()),
          UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_3));
      break;
    case CERT_CONTAINS_ERRORS:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringFUTF16(IDS_CERT_ERROR_EXTRA_INFO_1,
                                     UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_EXTRA_INFO_2));
      break;
    case CERT_NO_REVOCATION_MECHANISM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DESCRIPTION);
      break;
    case CERT_UNABLE_TO_CHECK_REVOCATION:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DESCRIPTION);
      break;
    case CERT_REVOKED:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(IDS_CERT_ERROR_REVOKED_CERT_DETAILS,
                                           UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_EXTRA_INFO_2));
      break;
    case CERT_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_INVALID_CERT_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_INVALID_CERT_EXTRA_INFO_2));
      break;
    case CERT_WEAK_SIGNATURE_ALGORITHM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_EXTRA_INFO_2));
      break;
    case CERT_WEAK_KEY:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_WEAK_KEY_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DETAILS, UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_KEY_EXTRA_INFO_2));
      break;
    case UNKNOWN:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_TITLE);
      details = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DETAILS);
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DESCRIPTION);
      break;
    default:
      NOTREACHED();
  }
  return SSLErrorInfo(title, details, short_description, extra_info);
}
","SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,
                                       net::X509Certificate* cert,
                                       const GURL& request_url) {
  string16 title, details, short_description;
  std::vector<string16> extra_info;
  switch (error_type) {
    case CERT_COMMON_NAME_INVALID: {
      title =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_TITLE);
      std::vector<std::string> dns_names;
      cert->GetDNSNames(&dns_names);
      DCHECK(!dns_names.empty());
      size_t i = 0;
      for (; i < dns_names.size(); ++i) {
        if (dns_names[i] == cert->subject().common_name)
          break;
      }
      if (i == dns_names.size())
        i = 0;
       details =
           l10n_util::GetStringFUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_DETAILS,
                                      UTF8ToUTF16(request_url.host()),
                                     UTF8ToUTF16(dns_names[i]),
                                      UTF8ToUTF16(request_url.host()));
       short_description = l10n_util::GetStringUTF16(
           IDS_CERT_ERROR_COMMON_NAME_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
       extra_info.push_back(
           l10n_util::GetStringFUTF16(
               IDS_CERT_ERROR_COMMON_NAME_INVALID_EXTRA_INFO_2,
              UTF8ToUTF16(cert->subject().common_name),
               UTF8ToUTF16(request_url.host())));
       break;
     }
    case CERT_DATE_INVALID:
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      if (cert->HasExpired()) {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_DESCRIPTION);
        extra_info.push_back(l10n_util::GetStringUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS_EXTRA_INFO_2));
      } else {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_NOT_YET_VALID_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_DESCRIPTION);
        extra_info.push_back(
            l10n_util::GetStringUTF16(
                IDS_CERT_ERROR_NOT_YET_VALID_DETAILS_EXTRA_INFO_2));
      }
      break;
    case CERT_AUTHORITY_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_AUTHORITY_INVALID_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_2,
          UTF8ToUTF16(request_url.host()),
          UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_3));
      break;
    case CERT_CONTAINS_ERRORS:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringFUTF16(IDS_CERT_ERROR_EXTRA_INFO_1,
                                     UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_EXTRA_INFO_2));
      break;
    case CERT_NO_REVOCATION_MECHANISM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DESCRIPTION);
      break;
    case CERT_UNABLE_TO_CHECK_REVOCATION:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DESCRIPTION);
      break;
    case CERT_REVOKED:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(IDS_CERT_ERROR_REVOKED_CERT_DETAILS,
                                           UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_EXTRA_INFO_2));
      break;
    case CERT_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_INVALID_CERT_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_INVALID_CERT_EXTRA_INFO_2));
      break;
    case CERT_WEAK_SIGNATURE_ALGORITHM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_EXTRA_INFO_2));
      break;
    case CERT_WEAK_KEY:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_WEAK_KEY_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DETAILS, UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_KEY_EXTRA_INFO_2));
      break;
    case UNKNOWN:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_TITLE);
      details = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DETAILS);
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DESCRIPTION);
      break;
    default:
      NOTREACHED();
  }
  return SSLErrorInfo(title, details, short_description, extra_info);
}
",C,"                                     net::EscapeForHTML(
                                         UTF8ToUTF16(dns_names[i])),
              net::EscapeForHTML(UTF8ToUTF16(cert->subject().common_name)),
","                                     UTF8ToUTF16(dns_names[i]),
              UTF8ToUTF16(cert->subject().common_name),
",,"@@ -12,6 +12,7 @@
 #include ""grit/chromium_strings.h""
 #include ""grit/generated_resources.h""
 #include ""net/base/cert_status_flags.h""
+#include ""net/base/escape.h""
 #include ""net/base/net_errors.h""
 #include ""net/base/ssl_info.h""
 #include ""ui/base/l10n/l10n_util.h""
@@ -55,7 +56,8 @@ SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,
       details =
           l10n_util::GetStringFUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_DETAILS,
                                      UTF8ToUTF16(request_url.host()),
-                                     UTF8ToUTF16(dns_names[i]),
+                                     net::EscapeForHTML(
+                                         UTF8ToUTF16(dns_names[i])),
                                      UTF8ToUTF16(request_url.host()));
       short_description = l10n_util::GetStringUTF16(
           IDS_CERT_ERROR_COMMON_NAME_INVALID_DESCRIPTION);
@@ -64,7 +66,7 @@ SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,
       extra_info.push_back(
           l10n_util::GetStringFUTF16(
               IDS_CERT_ERROR_COMMON_NAME_INVALID_EXTRA_INFO_2,
-              UTF8ToUTF16(cert->subject().common_name),
+              net::EscapeForHTML(UTF8ToUTF16(cert->subject().common_name)),
               UTF8ToUTF16(request_url.host())));
       break;
     }",Chrome,68b6502084af7e2021f7321633f5fbb5f997a58b,4150ecc30d10d0f211033346f10611e3c6083160,1,"SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,
                                       net::X509Certificate* cert,
                                       const GURL& request_url) {
  string16 title, details, short_description;
  std::vector<string16> extra_info;
  switch (error_type) {
    case CERT_COMMON_NAME_INVALID: {
      title =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_TITLE);
      // If the certificate contains multiple DNS names, we choose the most
      // representative one -- either the DNS name that's also in the subject
      // field, or the first one.  If this heuristic turns out to be
      // inadequate, we can consider choosing the DNS name that is the
      // ""closest match"" to the host name in the request URL, or listing all
      // the DNS names with an HTML <ul>.
      std::vector<std::string> dns_names;
      cert->GetDNSNames(&dns_names);
      DCHECK(!dns_names.empty());
      size_t i = 0;
      for (; i < dns_names.size(); ++i) {
        if (dns_names[i] == cert->subject().common_name)
          break;
      }
      if (i == dns_names.size())
        i = 0;
       details =
           l10n_util::GetStringFUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_DETAILS,
                                      UTF8ToUTF16(request_url.host()),
//flaw_line_below:
                                     UTF8ToUTF16(dns_names[i]),
//fix_flaw_line_below:
//                                     net::EscapeForHTML(
//fix_flaw_line_below:
//                                         UTF8ToUTF16(dns_names[i])),
                                      UTF8ToUTF16(request_url.host()));
       short_description = l10n_util::GetStringUTF16(
           IDS_CERT_ERROR_COMMON_NAME_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
       extra_info.push_back(
           l10n_util::GetStringFUTF16(
               IDS_CERT_ERROR_COMMON_NAME_INVALID_EXTRA_INFO_2,
//flaw_line_below:
              UTF8ToUTF16(cert->subject().common_name),
//fix_flaw_line_below:
//              net::EscapeForHTML(UTF8ToUTF16(cert->subject().common_name)),
               UTF8ToUTF16(request_url.host())));
       break;
     }
    case CERT_DATE_INVALID:
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      if (cert->HasExpired()) {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_DESCRIPTION);
        extra_info.push_back(l10n_util::GetStringUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS_EXTRA_INFO_2));
      } else {
        // Then it must be not yet valid.  We don't check that it is not yet
        // valid as there is still a very unlikely chance that the cert might
        // have become valid since the error occurred.
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_NOT_YET_VALID_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_DESCRIPTION);
        extra_info.push_back(
            l10n_util::GetStringUTF16(
                IDS_CERT_ERROR_NOT_YET_VALID_DETAILS_EXTRA_INFO_2));
      }
      break;
    case CERT_AUTHORITY_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_AUTHORITY_INVALID_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_2,
          UTF8ToUTF16(request_url.host()),
          UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_3));
      break;
    case CERT_CONTAINS_ERRORS:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringFUTF16(IDS_CERT_ERROR_EXTRA_INFO_1,
                                     UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_EXTRA_INFO_2));
      break;
    case CERT_NO_REVOCATION_MECHANISM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DESCRIPTION);
      break;
    case CERT_UNABLE_TO_CHECK_REVOCATION:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DESCRIPTION);
      break;
    case CERT_REVOKED:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(IDS_CERT_ERROR_REVOKED_CERT_DETAILS,
                                           UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_EXTRA_INFO_2));
      break;
    case CERT_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_INVALID_CERT_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_INVALID_CERT_EXTRA_INFO_2));
      break;
    case CERT_WEAK_SIGNATURE_ALGORITHM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_EXTRA_INFO_2));
      break;
    case CERT_WEAK_KEY:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_WEAK_KEY_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DETAILS, UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_KEY_EXTRA_INFO_2));
      break;
    case UNKNOWN:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_TITLE);
      details = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DETAILS);
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DESCRIPTION);
      break;
    default:
      NOTREACHED();
  }
  return SSLErrorInfo(title, details, short_description, extra_info);
}
",184492,"SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,
                                       net::X509Certificate* cert,
                                       const GURL& request_url) {
  string16 title, details, short_description;
  std::vector<string16> extra_info;
  switch (error_type) {
    case CERT_COMMON_NAME_INVALID: {
      title =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_TITLE);
      std::vector<std::string> dns_names;
      cert->GetDNSNames(&dns_names);
      DCHECK(!dns_names.empty());
      size_t i = 0;
      for (; i < dns_names.size(); ++i) {
        if (dns_names[i] == cert->subject().common_name)
          break;
      }
      if (i == dns_names.size())
        i = 0;
       details =
           l10n_util::GetStringFUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_DETAILS,
                                      UTF8ToUTF16(request_url.host()),
                                     UTF8ToUTF16(dns_names[i]),
                                      UTF8ToUTF16(request_url.host()));
       short_description = l10n_util::GetStringUTF16(
           IDS_CERT_ERROR_COMMON_NAME_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
       extra_info.push_back(
           l10n_util::GetStringFUTF16(
               IDS_CERT_ERROR_COMMON_NAME_INVALID_EXTRA_INFO_2,
              UTF8ToUTF16(cert->subject().common_name),
               UTF8ToUTF16(request_url.host())));
       break;
     }
    case CERT_DATE_INVALID:
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      if (cert->HasExpired()) {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_DESCRIPTION);
        extra_info.push_back(l10n_util::GetStringUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS_EXTRA_INFO_2));
      } else {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_NOT_YET_VALID_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_DESCRIPTION);
        extra_info.push_back(
            l10n_util::GetStringUTF16(
                IDS_CERT_ERROR_NOT_YET_VALID_DETAILS_EXTRA_INFO_2));
      }
      break;
    case CERT_AUTHORITY_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_AUTHORITY_INVALID_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_2,
          UTF8ToUTF16(request_url.host()),
          UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_3));
      break;
    case CERT_CONTAINS_ERRORS:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringFUTF16(IDS_CERT_ERROR_EXTRA_INFO_1,
                                     UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_EXTRA_INFO_2));
      break;
    case CERT_NO_REVOCATION_MECHANISM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DESCRIPTION);
      break;
    case CERT_UNABLE_TO_CHECK_REVOCATION:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DESCRIPTION);
      break;
    case CERT_REVOKED:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(IDS_CERT_ERROR_REVOKED_CERT_DETAILS,
                                           UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_EXTRA_INFO_2));
      break;
    case CERT_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_INVALID_CERT_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_INVALID_CERT_EXTRA_INFO_2));
      break;
    case CERT_WEAK_SIGNATURE_ALGORITHM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_EXTRA_INFO_2));
      break;
    case CERT_WEAK_KEY:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_WEAK_KEY_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DETAILS, UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_KEY_EXTRA_INFO_2));
      break;
    case UNKNOWN:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_TITLE);
      details = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DETAILS);
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DESCRIPTION);
      break;
    default:
      NOTREACHED();
  }
  return SSLErrorInfo(title, details, short_description, extra_info);
}
","SSLErrorInfo SSLErrorInfo::CreateError(ErrorType error_type,
                                       net::X509Certificate* cert,
                                       const GURL& request_url) {
  string16 title, details, short_description;
  std::vector<string16> extra_info;
  switch (error_type) {
    case CERT_COMMON_NAME_INVALID: {
      title =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_TITLE);
      std::vector<std::string> dns_names;
      cert->GetDNSNames(&dns_names);
      DCHECK(!dns_names.empty());
      size_t i = 0;
      for (; i < dns_names.size(); ++i) {
        if (dns_names[i] == cert->subject().common_name)
          break;
      }
      if (i == dns_names.size())
        i = 0;
       details =
           l10n_util::GetStringFUTF16(IDS_CERT_ERROR_COMMON_NAME_INVALID_DETAILS,
                                      UTF8ToUTF16(request_url.host()),
                                     net::EscapeForHTML(
                                         UTF8ToUTF16(dns_names[i])),
                                      UTF8ToUTF16(request_url.host()));
       short_description = l10n_util::GetStringUTF16(
           IDS_CERT_ERROR_COMMON_NAME_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
       extra_info.push_back(
           l10n_util::GetStringFUTF16(
               IDS_CERT_ERROR_COMMON_NAME_INVALID_EXTRA_INFO_2,
              net::EscapeForHTML(UTF8ToUTF16(cert->subject().common_name)),
               UTF8ToUTF16(request_url.host())));
       break;
     }
    case CERT_DATE_INVALID:
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      if (cert->HasExpired()) {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXPIRED_DESCRIPTION);
        extra_info.push_back(l10n_util::GetStringUTF16(
            IDS_CERT_ERROR_EXPIRED_DETAILS_EXTRA_INFO_2));
      } else {
        title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_TITLE);
        details = l10n_util::GetStringFUTF16(
            IDS_CERT_ERROR_NOT_YET_VALID_DETAILS,
            UTF8ToUTF16(request_url.host()),
            UTF8ToUTF16(request_url.host()),
            base::TimeFormatFriendlyDateAndTime(base::Time::Now()));
        short_description =
            l10n_util::GetStringUTF16(IDS_CERT_ERROR_NOT_YET_VALID_DESCRIPTION);
        extra_info.push_back(
            l10n_util::GetStringUTF16(
                IDS_CERT_ERROR_NOT_YET_VALID_DETAILS_EXTRA_INFO_2));
      }
      break;
    case CERT_AUTHORITY_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_AUTHORITY_INVALID_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_2,
          UTF8ToUTF16(request_url.host()),
          UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_AUTHORITY_INVALID_EXTRA_INFO_3));
      break;
    case CERT_CONTAINS_ERRORS:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_CONTAINS_ERRORS_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringFUTF16(IDS_CERT_ERROR_EXTRA_INFO_1,
                                     UTF8ToUTF16(request_url.host())));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_CONTAINS_ERRORS_EXTRA_INFO_2));
      break;
    case CERT_NO_REVOCATION_MECHANISM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_NO_REVOCATION_MECHANISM_DESCRIPTION);
      break;
    case CERT_UNABLE_TO_CHECK_REVOCATION:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_TITLE);
      details = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DETAILS);
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_DESCRIPTION);
      break;
    case CERT_REVOKED:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(IDS_CERT_ERROR_REVOKED_CERT_DETAILS,
                                           UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_REVOKED_CERT_EXTRA_INFO_2));
      break;
    case CERT_INVALID:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_INVALID_CERT_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_INVALID_CERT_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_INVALID_CERT_EXTRA_INFO_2));
      break;
    case CERT_WEAK_SIGNATURE_ALGORITHM:
      title = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DETAILS,
          UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_SIGNATURE_ALGORITHM_EXTRA_INFO_2));
      break;
    case CERT_WEAK_KEY:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_WEAK_KEY_TITLE);
      details = l10n_util::GetStringFUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DETAILS, UTF8ToUTF16(request_url.host()));
      short_description = l10n_util::GetStringUTF16(
          IDS_CERT_ERROR_WEAK_KEY_DESCRIPTION);
      extra_info.push_back(
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_EXTRA_INFO_1));
      extra_info.push_back(
          l10n_util::GetStringUTF16(
              IDS_CERT_ERROR_WEAK_KEY_EXTRA_INFO_2));
      break;
    case UNKNOWN:
      title = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_TITLE);
      details = l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DETAILS);
      short_description =
          l10n_util::GetStringUTF16(IDS_CERT_ERROR_UNKNOWN_ERROR_DESCRIPTION);
      break;
    default:
      NOTREACHED();
  }
  return SSLErrorInfo(title, details, short_description, extra_info);
}
","The `SSLErrorInfo::CreateError` function generates detailed error information related to SSL certificate issues based on the provided `ErrorType`, `X509Certificate`, and request URL. It constructs a title, detailed message, short description, and additional information based on the specific error type, such as common name invalidity, date validity, authority issues, or revocation problems. The function utilizes localization utilities to retrieve user-friendly strings for each error scenario, ensuring that the output is informative and contextually relevant. Finally, it returns an `SSLErrorInfo` object encapsulating all the generated error details.","The provided code defines a function that creates detailed error information for various SSL certificate issues based on the type of error encountered. It generates a title, detailed explanation, short description, and additional context tailored to specific problems, such as invalid common names, expiration dates, or authority validation. The function retrieves user-friendly messages to ensure clarity and relevance for each error scenario. Ultimately, it compiles this information into a structured object that encapsulates all the necessary details, facilitating user understanding of the SSL certificate issues encountered during a web request.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, arises from the potential for unescaped user input to be included in the output, leading to cross-site scripting (XSS) attacks. In the vulnerable code, the details string could include untrusted data from the certificate's common name or DNS names without proper sanitization. The fixed code addresses this issue by incorporating a function to escape HTML characters in the common name and DNS names before they are included in the details string, thereby preventing malicious scripts from being executed in the user's browser.","The vulnerability identified as CWE-79, which pertains to improper neutralization of input during web page generation, occurs when untrusted data is incorporated into web content without adequate sanitization, potentially allowing for cross-site scripting (XSS) attacks. In the original code, user input from certificate details could be directly included in the output, making it susceptible to exploitation. The fix involved implementing a mechanism to escape HTML characters in the user-provided data before it is rendered, effectively neutralizing any potentially harmful scripts and ensuring that the output is safe for display in a web context.","The vulnerability was fixed by incorporating the `net::EscapeForHTML` function to sanitize user input before it is included in the output. Specifically, this function was applied to the common name and DNS names retrieved from the certificate, ensuring that any potentially harmful characters are escaped. In the updated code, the `details` string for the common name invalid error now uses the escaped version of the DNS name, while the extra information also utilizes the escaped common name. This change effectively prevents the injection of malicious scripts into the rendered output, thereby mitigating the risk of cross-site scripting attacks.","The vulnerability was addressed by implementing a sanitization process for user input before it is included in the output. This involved escaping potentially harmful characters in the data retrieved from the certificate, ensuring that any user-provided content is rendered safely. By applying this sanitization step, the code prevents the inclusion of malicious scripts in the output, effectively mitigating the risk of cross-site scripting attacks. This fix enhances the security of the application by ensuring that all dynamic content is properly neutralized before being displayed to users.","4,5","4,4","4, 4","4,4"
2,2,185960,185960,,Remote,Not required,,CVE-2016-5147,https://www.cvedetails.com/cve/CVE-2016-5147/,CWE-79,Medium,,Partial,,2016-09-11,4.3,"Blink, as used in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux, mishandles deferred page loads, which allows remote attackers to inject arbitrary web script or HTML via a crafted web site, aka *Universal XSS (UXSS).*",2017-08-12,XSS ,3,https://github.com/chromium/chromium/commit/5472db1c7eca35822219d03be5c817d9a9258c11,5472db1c7eca35822219d03be5c817d9a9258c11,"Always call UpdateCompositedScrollOffset, not just for the root layer

Bug: 927560
Change-Id: I1d5522aae4f11dd3f5b8947bb089bac1bf19bdb4
Reviewed-on: https://chromium-review.googlesource.com/c/1452701
Reviewed-by: Chris Harrelson <chrishtr@chromium.org>
Commit-Queue: Mason Freed <masonfreed@chromium.org>
Cr-Commit-Position: refs/heads/master@{#628942}",1,third_party/blink/renderer/core/paint/paint_layer_scrollable_area.cc,"{""sha"": ""7f1f0a4890e03135c6d704b67d0de508ffda6c7d"", ""filename"": ""third_party/blink/renderer/core/paint/paint_layer_scrollable_area.cc"", ""status"": ""modified"", ""additions"": 3, ""deletions"": 1, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/5472db1c7eca35822219d03be5c817d9a9258c11/third_party/blink/renderer/core/paint/paint_layer_scrollable_area.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/5472db1c7eca35822219d03be5c817d9a9258c11/third_party/blink/renderer/core/paint/paint_layer_scrollable_area.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/blink/renderer/core/paint/paint_layer_scrollable_area.cc?ref=5472db1c7eca35822219d03be5c817d9a9258c11"", ""patch"": ""@@ -2159,7 +2159,9 @@ void PaintLayerScrollableArea::UpdateCompositingLayersAfterScroll() {\n     DCHECK(Layer()->HasCompositedLayerMapping());\n     ScrollingCoordinator* scrolling_coordinator = GetScrollingCoordinator();\n     bool handled_scroll =\n-        Layer()->IsRootLayer() && scrolling_coordinator &&\n+        (Layer()->IsRootLayer() ||\n+         RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) &&\n+        scrolling_coordinator &&\n         scrolling_coordinator->UpdateCompositedScrollOffset(this);\n \n     if (!handled_scroll) {""}","void PaintLayerScrollableArea::UpdateCompositingLayersAfterScroll() {
  PaintLayerCompositor* compositor = GetLayoutBox()->View()->Compositor();
  if (!compositor->InCompositingMode())
    return;

  if (UsesCompositedScrolling()) {
     DCHECK(Layer()->HasCompositedLayerMapping());
     ScrollingCoordinator* scrolling_coordinator = GetScrollingCoordinator();
     bool handled_scroll =
        (Layer()->IsRootLayer() ||
         RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) &&
        scrolling_coordinator &&
         scrolling_coordinator->UpdateCompositedScrollOffset(this);
 
     if (!handled_scroll) {
      if (!RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) {
        Layer()->GetCompositedLayerMapping()->SetNeedsGraphicsLayerUpdate(
            kGraphicsLayerUpdateSubtree);
      }
      compositor->SetNeedsCompositingUpdate(
          kCompositingUpdateAfterGeometryChange);
    }

    if (Layer()->IsRootLayer()) {
      LocalFrame* frame = GetLayoutBox()->GetFrame();
      if (frame && frame->View() &&
          frame->View()->HasViewportConstrainedObjects()) {
        Layer()->SetNeedsCompositingInputsUpdate();
      }
    }
  } else {
    Layer()->SetNeedsCompositingInputsUpdate();
  }
}
","void PaintLayerScrollableArea::UpdateCompositingLayersAfterScroll() {
  PaintLayerCompositor* compositor = GetLayoutBox()->View()->Compositor();
  if (!compositor->InCompositingMode())
    return;

  if (UsesCompositedScrolling()) {
     DCHECK(Layer()->HasCompositedLayerMapping());
     ScrollingCoordinator* scrolling_coordinator = GetScrollingCoordinator();
     bool handled_scroll =
        Layer()->IsRootLayer() && scrolling_coordinator &&
         scrolling_coordinator->UpdateCompositedScrollOffset(this);
 
     if (!handled_scroll) {
      if (!RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) {
        Layer()->GetCompositedLayerMapping()->SetNeedsGraphicsLayerUpdate(
            kGraphicsLayerUpdateSubtree);
      }
      compositor->SetNeedsCompositingUpdate(
          kCompositingUpdateAfterGeometryChange);
    }

    if (Layer()->IsRootLayer()) {
      LocalFrame* frame = GetLayoutBox()->GetFrame();
      if (frame && frame->View() &&
          frame->View()->HasViewportConstrainedObjects()) {
        Layer()->SetNeedsCompositingInputsUpdate();
      }
    }
  } else {
    Layer()->SetNeedsCompositingInputsUpdate();
  }
}
",C,"        (Layer()->IsRootLayer() ||
         RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) &&
        scrolling_coordinator &&
","        Layer()->IsRootLayer() && scrolling_coordinator &&
",,"@@ -2159,7 +2159,9 @@ void PaintLayerScrollableArea::UpdateCompositingLayersAfterScroll() {
     DCHECK(Layer()->HasCompositedLayerMapping());
     ScrollingCoordinator* scrolling_coordinator = GetScrollingCoordinator();
     bool handled_scroll =
-        Layer()->IsRootLayer() && scrolling_coordinator &&
+        (Layer()->IsRootLayer() ||
+         RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) &&
+        scrolling_coordinator &&
         scrolling_coordinator->UpdateCompositedScrollOffset(this);
 
     if (!handled_scroll) {",Chrome,5472db1c7eca35822219d03be5c817d9a9258c11,756828f7b127d39fb9863dc0c5db67640a88724f,1,"void PaintLayerScrollableArea::UpdateCompositingLayersAfterScroll() {
  PaintLayerCompositor* compositor = GetLayoutBox()->View()->Compositor();
  if (!compositor->InCompositingMode())
    return;

  if (UsesCompositedScrolling()) {
     DCHECK(Layer()->HasCompositedLayerMapping());
     ScrollingCoordinator* scrolling_coordinator = GetScrollingCoordinator();
     bool handled_scroll =
//flaw_line_below:
        Layer()->IsRootLayer() && scrolling_coordinator &&
//fix_flaw_line_below:
//        (Layer()->IsRootLayer() ||
//fix_flaw_line_below:
//         RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) &&
//fix_flaw_line_below:
//        scrolling_coordinator &&
         scrolling_coordinator->UpdateCompositedScrollOffset(this);
 
     if (!handled_scroll) {
      if (!RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) {
        // In non-BGPT mode, we need to do a full sub-tree update here, because
        // we need to update the position property to compute
        // offset_to_transform_parent. For more context, see the comment from
        // chrishtr@ here:
        // https://chromium-review.googlesource.com/c/chromium/src/+/1403639/6/third_party/blink/renderer/core/paint/paint_layer_scrollable_area.cc
        Layer()->GetCompositedLayerMapping()->SetNeedsGraphicsLayerUpdate(
            kGraphicsLayerUpdateSubtree);
      }
      compositor->SetNeedsCompositingUpdate(
          kCompositingUpdateAfterGeometryChange);
    }

    // If we have fixed elements and we scroll the root layer we might
    // change compositing since the fixed elements might now overlap a
    // composited layer.
    if (Layer()->IsRootLayer()) {
      LocalFrame* frame = GetLayoutBox()->GetFrame();
      if (frame && frame->View() &&
          frame->View()->HasViewportConstrainedObjects()) {
        Layer()->SetNeedsCompositingInputsUpdate();
      }
    }
  } else {
    Layer()->SetNeedsCompositingInputsUpdate();
  }
}
",185960,"void PaintLayerScrollableArea::UpdateCompositingLayersAfterScroll() {
  PaintLayerCompositor* compositor = GetLayoutBox()->View()->Compositor();
  if (!compositor->InCompositingMode())
    return;

  if (UsesCompositedScrolling()) {
     DCHECK(Layer()->HasCompositedLayerMapping());
     ScrollingCoordinator* scrolling_coordinator = GetScrollingCoordinator();
     bool handled_scroll =
        Layer()->IsRootLayer() && scrolling_coordinator &&
         scrolling_coordinator->UpdateCompositedScrollOffset(this);
 
     if (!handled_scroll) {
      if (!RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) {
        Layer()->GetCompositedLayerMapping()->SetNeedsGraphicsLayerUpdate(
            kGraphicsLayerUpdateSubtree);
      }
      compositor->SetNeedsCompositingUpdate(
          kCompositingUpdateAfterGeometryChange);
    }

    if (Layer()->IsRootLayer()) {
      LocalFrame* frame = GetLayoutBox()->GetFrame();
      if (frame && frame->View() &&
          frame->View()->HasViewportConstrainedObjects()) {
        Layer()->SetNeedsCompositingInputsUpdate();
      }
    }
  } else {
    Layer()->SetNeedsCompositingInputsUpdate();
  }
}
","void PaintLayerScrollableArea::UpdateCompositingLayersAfterScroll() {
  PaintLayerCompositor* compositor = GetLayoutBox()->View()->Compositor();
  if (!compositor->InCompositingMode())
    return;

  if (UsesCompositedScrolling()) {
     DCHECK(Layer()->HasCompositedLayerMapping());
     ScrollingCoordinator* scrolling_coordinator = GetScrollingCoordinator();
     bool handled_scroll =
        (Layer()->IsRootLayer() ||
         RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) &&
        scrolling_coordinator &&
         scrolling_coordinator->UpdateCompositedScrollOffset(this);
 
     if (!handled_scroll) {
      if (!RuntimeEnabledFeatures::BlinkGenPropertyTreesEnabled()) {
        Layer()->GetCompositedLayerMapping()->SetNeedsGraphicsLayerUpdate(
            kGraphicsLayerUpdateSubtree);
      }
      compositor->SetNeedsCompositingUpdate(
          kCompositingUpdateAfterGeometryChange);
    }

    if (Layer()->IsRootLayer()) {
      LocalFrame* frame = GetLayoutBox()->GetFrame();
      if (frame && frame->View() &&
          frame->View()->HasViewportConstrainedObjects()) {
        Layer()->SetNeedsCompositingInputsUpdate();
      }
    }
  } else {
    Layer()->SetNeedsCompositingInputsUpdate();
  }
}
","The `UpdateCompositingLayersAfterScroll` function is responsible for managing the update of compositing layers in a scrollable area after a scroll event occurs. It first checks if the compositor is in compositing mode and whether composited scrolling is being used. If so, it attempts to update the scroll offset for the root layer through the scrolling coordinator. If the scroll is not handled, it marks the layer for a graphics update unless certain runtime features are enabled. Additionally, if the layer is the root layer and the associated frame has viewport-constrained objects, it requests an update for compositing inputs, ensuring that the visual representation remains accurate after scrolling.","The function manages updates to compositing layers following a scroll event within a scrollable area. It first verifies if the compositor is active and whether composited scrolling is in use. If these conditions are met, it attempts to adjust the scroll offset for the primary layer. If the adjustment is unsuccessful, it marks the layer for a graphics update unless specific features are enabled. Additionally, if the primary layer is involved and the associated frame contains constrained objects, it requests an update for compositing inputs, ensuring the visual output accurately reflects the new scroll position.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, can arise when user input is not adequately sanitized, leading to potential cross-site scripting (XSS) attacks. In the vulnerable code, the handling of scroll events could allow untrusted data to influence the compositing layers without proper validation. The fix introduced a condition that checks if the layer is the root layer or if specific runtime features are enabled before updating the scroll offset. This additional validation ensures that only trusted inputs are processed, mitigating the risk of injecting malicious content through the scrolling mechanism.","The vulnerability classified as CWE-79, which pertains to improper neutralization of input during web page generation, can lead to cross-site scripting (XSS) attacks when user input is not properly sanitized. In the original code, the handling of scroll events allowed potentially untrusted data to affect the rendering process without sufficient validation, creating an opportunity for malicious content injection. The fix introduced additional checks to ensure that only trusted inputs are processed, specifically by validating the context in which the scroll offset is updated. This enhancement effectively mitigates the risk of XSS by ensuring that user input is appropriately controlled before being utilized.","The vulnerability was fixed by introducing a condition that checks whether the layer is the root layer or if specific runtime features are enabled before proceeding with the scroll offset update. In the updated code, the expression that determines if the scroll was handled now includes a logical check involving the root layer and the state of runtime features. This ensures that the `UpdateCompositedScrollOffset` function is only called under controlled circumstances, thereby preventing untrusted input from being processed without validation. This additional layer of validation effectively mitigates the risk of cross-site scripting attacks.","The vulnerability was addressed by implementing additional checks to ensure that only trusted inputs are processed during the scroll event handling. The updated code introduces a condition that verifies the context in which the scroll offset is updated, specifically focusing on whether the layer is the primary one or if certain runtime features are active. This added validation restricts the execution of critical functions to scenarios where the input can be considered safe, thereby preventing the potential injection of malicious content. As a result, the risk of cross-site scripting attacks is significantly reduced.","4,4","2,2","4,4","4,4"
3,3,186016,186016,,Remote,Not required,,CVE-2016-5191,https://www.cvedetails.com/cve/CVE-2016-5191/,CWE-79,Medium,,Partial,,2016-12-17,4.3,"Bookmark handling in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux; 54.0.2840.85 for Android had insufficient validation of supplied data, which allowed a remote attacker to inject arbitrary scripts or HTML (UXSS) via crafted HTML pages, as demonstrated by an interpretation conflict between userinfo and scheme in an http://javascript:",2018-01-04,XSS ,12,https://github.com/chromium/chromium/commit/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4,fa34e547d6ee25ea0692436ba7462ed0a0ef45f4,"Prevent interpretating userinfo as url scheme when editing bookmarks

Chrome's Edit Bookmark dialog formats urls for display such that a
url of http://javascript:scripttext@host.com is later converted to a
javascript url scheme, allowing persistence of a script injection
attack within the user's bookmarks.

This fix prevents such misinterpretations by always showing the
scheme when a userinfo component is present within the url.

BUG=639126

Review-Url: https://codereview.chromium.org/2368593002
Cr-Commit-Position: refs/heads/master@{#422467}",4,chrome/browser/ui/bookmarks/bookmark_utils.cc,"{""sha"": ""ffebacaa0f6864fd57e0d0cda9b2dbb08552a13c"", ""filename"": ""chrome/browser/ui/bookmarks/bookmark_utils.cc"", ""status"": ""modified"", ""additions"": 12, ""deletions"": 5, ""changes"": 17, ""blob_url"": ""https://github.com/chromium/chromium/blob/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/bookmarks/bookmark_utils.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/bookmarks/bookmark_utils.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/ui/bookmarks/bookmark_utils.cc?ref=fa34e547d6ee25ea0692436ba7462ed0a0ef45f4"", ""patch"": ""@@ -126,13 +126,20 @@ void ToggleBookmarkBarWhenVisible(content::BrowserContext* browser_context) {\n \n base::string16 FormatBookmarkURLForDisplay(const GURL& url) {\n   // Because this gets re-parsed by FixupURL(), it's safe to omit the scheme\n-  // and trailing slash, and unescape most characters.  However, it's\n+  // and trailing slash, and unescape most characters. However, it's\n   // important not to drop any username/password, or unescape anything that\n   // changes the URL's meaning.\n-  return url_formatter::FormatUrl(\n-      url, url_formatter::kFormatUrlOmitAll &\n-               ~url_formatter::kFormatUrlOmitUsernamePassword,\n-      net::UnescapeRule::SPACES, nullptr, nullptr, nullptr);\n+  url_formatter::FormatUrlTypes format_types =\n+      url_formatter::kFormatUrlOmitAll &\n+      ~url_formatter::kFormatUrlOmitUsernamePassword;\n+\n+  // If username is present, we must not omit the scheme because FixupURL() will\n+  // subsequently interpret the username as a scheme. crbug.com/639126\n+  if (url.has_username())\n+    format_types &= ~url_formatter::kFormatUrlOmitHTTP;\n+\n+  return url_formatter::FormatUrl(url, format_types, net::UnescapeRule::SPACES,\n+                                  nullptr, nullptr, nullptr);\n }\n \n bool IsAppsShortcutEnabled(Profile* profile) {""}<_**next**_>{""sha"": ""1a5bf29d3599fce20c987c7c997a9c80aa331c7a"", ""filename"": ""chrome/browser/ui/bookmarks/bookmark_utils.h"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 3, ""changes"": 5, ""blob_url"": ""https://github.com/chromium/chromium/blob/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/bookmarks/bookmark_utils.h"", ""raw_url"": ""https://github.com/chromium/chromium/raw/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/bookmarks/bookmark_utils.h"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/ui/bookmarks/bookmark_utils.h?ref=fa34e547d6ee25ea0692436ba7462ed0a0ef45f4"", ""patch"": ""@@ -53,9 +53,8 @@ void GetURLAndTitleToBookmark(content::WebContents* web_contents,\n // all tabs. This is a preference modifier, not a visual modifier.\n void ToggleBookmarkBarWhenVisible(content::BrowserContext* browser_context);\n \n-// Returns a formatted version of |url| appropriate to display to a user with\n-// the given |prefs|, which may be NULL.  When re-parsing this URL, clients\n-// should call url_formatter::FixupURL().\n+// Returns a formatted version of |url| appropriate to display to a user.\n+// When re-parsing this URL, clients should call url_formatter::FixupURL().\n base::string16 FormatBookmarkURLForDisplay(const GURL& url);\n \n // Returns whether the Apps shortcut is enabled. If true, then the visibility""}<_**next**_>{""sha"": ""4098467fc081af1263246bbe49d32fbea47d7ae9"", ""filename"": ""chrome/browser/ui/cocoa/bookmarks/bookmark_editor_controller_unittest.mm"", ""status"": ""modified"", ""additions"": 39, ""deletions"": 0, ""changes"": 39, ""blob_url"": ""https://github.com/chromium/chromium/blob/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/cocoa/bookmarks/bookmark_editor_controller_unittest.mm"", ""raw_url"": ""https://github.com/chromium/chromium/raw/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/cocoa/bookmarks/bookmark_editor_controller_unittest.mm"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/ui/cocoa/bookmarks/bookmark_editor_controller_unittest.mm?ref=fa34e547d6ee25ea0692436ba7462ed0a0ef45f4"", ""patch"": ""@@ -259,6 +259,45 @@ void TearDown() override {\n   [controller_ cancel:nil];\n }\n \n+using BookmarkEditorControllerEditKeepsSchemeTest = CocoaProfileTest;\n+TEST_F(BookmarkEditorControllerEditKeepsSchemeTest, EditKeepsScheme) {\n+  // Edits the bookmark and ensures resulting URL keeps the same scheme, even\n+  // when userinfo is present in the URL\n+  ASSERT_TRUE(profile());\n+\n+  BookmarkModel* model = BookmarkModelFactory::GetForBrowserContext(profile());\n+  const BookmarkNode* kParent = model->bookmark_bar_node();\n+  const base::string16 kTitle = ASCIIToUTF16(\""EditingKeepsScheme\"");\n+\n+  const GURL kUrl = GURL(\""http://javascript:scripttext@example.com/\"");\n+  const BookmarkNode* kNode = model->AddURL(kParent, 0, base::string16(), kUrl);\n+\n+  BookmarkEditorController* controller = [[BookmarkEditorController alloc]\n+      initWithParentWindow:test_window()\n+                   profile:profile()\n+                    parent:kParent\n+                      node:kNode\n+                       url:GURL()\n+                     title:base::string16()\n+             configuration:BookmarkEditor::SHOW_TREE];\n+\n+  [controller runAsModalSheet];\n+\n+  // We expect only the trailing / to be trimmed when userinfo is present\n+  EXPECT_NSEQ(base::SysUTF8ToNSString(kUrl.spec()),\n+              [[controller displayURL] stringByAppendingString:@\""/\""]);\n+\n+  [controller setDisplayName:base::SysUTF16ToNSString(kTitle)];\n+\n+  EXPECT_TRUE([controller okButtonEnabled]);\n+  [controller ok:nil];\n+\n+  ASSERT_EQ(1, kParent->child_count());\n+  const BookmarkNode* kChild = kParent->GetChild(0);\n+  EXPECT_EQ(kTitle, kChild->GetTitle());\n+  EXPECT_EQ(kUrl, kChild->url());\n+}\n+\n class BookmarkEditorControllerTreeTest : public CocoaProfileTest {\n \n  public:""}<_**next**_>{""sha"": ""2abe3d77823e2f144ab3c2c62b5117ac182d68d0"", ""filename"": ""chrome/browser/ui/views/bookmarks/bookmark_editor_view_unittest.cc"", ""status"": ""modified"", ""additions"": 35, ""deletions"": 0, ""changes"": 35, ""blob_url"": ""https://github.com/chromium/chromium/blob/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/views/bookmarks/bookmark_editor_view_unittest.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/fa34e547d6ee25ea0692436ba7462ed0a0ef45f4/chrome/browser/ui/views/bookmarks/bookmark_editor_view_unittest.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/ui/views/bookmarks/bookmark_editor_view_unittest.cc?ref=fa34e547d6ee25ea0692436ba7462ed0a0ef45f4"", ""patch"": ""@@ -73,6 +73,13 @@ class BookmarkEditorViewTest : public testing::Test {\n       editor_->url_tf_->SetText(text);\n   }\n \n+  base::string16 GetURLText() const {\n+    if (editor_->details_.type != BookmarkEditor::EditDetails::NEW_FOLDER)\n+      return editor_->url_tf_->text();\n+\n+    return base::string16();\n+  }\n+\n   void ApplyEdits() {\n     editor_->ApplyEdits();\n   }\n@@ -332,6 +339,34 @@ TEST_F(BookmarkEditorViewTest, ChangeTitleNoTree) {\n   EXPECT_EQ(ASCIIToUTF16(\""new_a\""), new_node->GetTitle());\n }\n \n+// Edits the bookmark and ensures resulting URL keeps the same scheme, even\n+// when userinfo is present in the URL\n+TEST_F(BookmarkEditorViewTest, EditKeepsScheme) {\n+  const BookmarkNode* kBBNode = model_->bookmark_bar_node();\n+\n+  const GURL kUrl = GURL(\""http://javascript:scripttext@example.com/\"");\n+\n+  CreateEditor(profile_.get(), kBBNode,\n+               BookmarkEditor::EditDetails::AddNodeInFolder(kBBNode, 1, kUrl,\n+                                                            base::string16()),\n+               BookmarkEditorView::SHOW_TREE);\n+\n+  // We expect only the trailing / to be trimmed when userinfo is present\n+  EXPECT_EQ(ASCIIToUTF16(kUrl.spec()), GetURLText() + ASCIIToUTF16(\""/\""));\n+\n+  const base::string16& kTitle = ASCIIToUTF16(\""EditingKeepsScheme\"");\n+  SetTitleText(kTitle);\n+\n+  ApplyEdits(editor_tree_model()->GetRoot()->GetChild(0));\n+\n+  ASSERT_EQ(4, kBBNode->child_count());\n+\n+  const BookmarkNode* kNewNode = kBBNode->GetChild(1);\n+\n+  EXPECT_EQ(kTitle, kNewNode->GetTitle());\n+  EXPECT_EQ(kUrl, kNewNode->url());\n+}\n+\n // Creates a new folder.\n TEST_F(BookmarkEditorViewTest, NewFolder) {\n   const BookmarkNode* bb_node = model_->bookmark_bar_node();""}"," base::string16 FormatBookmarkURLForDisplay(const GURL& url) {
  // and trailing slash, and unescape most characters. However, it's
  url_formatter::FormatUrlTypes format_types =
      url_formatter::kFormatUrlOmitAll &
      ~url_formatter::kFormatUrlOmitUsernamePassword;

  // If username is present, we must not omit the scheme because FixupURL() will
  // subsequently interpret the username as a scheme. crbug.com/639126
  if (url.has_username())
    format_types &= ~url_formatter::kFormatUrlOmitHTTP;

  return url_formatter::FormatUrl(url, format_types, net::UnescapeRule::SPACES,
                                  nullptr, nullptr, nullptr);
 }
"," base::string16 FormatBookmarkURLForDisplay(const GURL& url) {
  return url_formatter::FormatUrl(
      url, url_formatter::kFormatUrlOmitAll &
               ~url_formatter::kFormatUrlOmitUsernamePassword,
      net::UnescapeRule::SPACES, nullptr, nullptr, nullptr);
 }
",C,"  // and trailing slash, and unescape most characters. However, it's
  url_formatter::FormatUrlTypes format_types =
      url_formatter::kFormatUrlOmitAll &
      ~url_formatter::kFormatUrlOmitUsernamePassword;

  // If username is present, we must not omit the scheme because FixupURL() will
  // subsequently interpret the username as a scheme. crbug.com/639126
  if (url.has_username())
    format_types &= ~url_formatter::kFormatUrlOmitHTTP;

  return url_formatter::FormatUrl(url, format_types, net::UnescapeRule::SPACES,
                                  nullptr, nullptr, nullptr);
","  return url_formatter::FormatUrl(
      url, url_formatter::kFormatUrlOmitAll &
               ~url_formatter::kFormatUrlOmitUsernamePassword,
      net::UnescapeRule::SPACES, nullptr, nullptr, nullptr);
",,"@@ -126,13 +126,20 @@ void ToggleBookmarkBarWhenVisible(content::BrowserContext* browser_context) {
 
 base::string16 FormatBookmarkURLForDisplay(const GURL& url) {
   // Because this gets re-parsed by FixupURL(), it's safe to omit the scheme
-  // and trailing slash, and unescape most characters.  However, it's
+  // and trailing slash, and unescape most characters. However, it's
   // important not to drop any username/password, or unescape anything that
   // changes the URL's meaning.
-  return url_formatter::FormatUrl(
-      url, url_formatter::kFormatUrlOmitAll &
-               ~url_formatter::kFormatUrlOmitUsernamePassword,
-      net::UnescapeRule::SPACES, nullptr, nullptr, nullptr);
+  url_formatter::FormatUrlTypes format_types =
+      url_formatter::kFormatUrlOmitAll &
+      ~url_formatter::kFormatUrlOmitUsernamePassword;
+
+  // If username is present, we must not omit the scheme because FixupURL() will
+  // subsequently interpret the username as a scheme. crbug.com/639126
+  if (url.has_username())
+    format_types &= ~url_formatter::kFormatUrlOmitHTTP;
+
+  return url_formatter::FormatUrl(url, format_types, net::UnescapeRule::SPACES,
+                                  nullptr, nullptr, nullptr);
 }
 
 bool IsAppsShortcutEnabled(Profile* profile) {",Chrome,fa34e547d6ee25ea0692436ba7462ed0a0ef45f4,60cf29f2af9a364c215f71c9ac8fdd92c16b82b4,1," base::string16 FormatBookmarkURLForDisplay(const GURL& url) {
   // Because this gets re-parsed by FixupURL(), it's safe to omit the scheme
//flaw_line_below:
  // and trailing slash, and unescape most characters.  However, it's
//fix_flaw_line_below:
//  // and trailing slash, and unescape most characters. However, it's
   // important not to drop any username/password, or unescape anything that
   // changes the URL's meaning.
//flaw_line_below:
  return url_formatter::FormatUrl(
//flaw_line_below:
      url, url_formatter::kFormatUrlOmitAll &
//flaw_line_below:
               ~url_formatter::kFormatUrlOmitUsernamePassword,
//flaw_line_below:
      net::UnescapeRule::SPACES, nullptr, nullptr, nullptr);
//fix_flaw_line_below:
//  url_formatter::FormatUrlTypes format_types =
//fix_flaw_line_below:
//      url_formatter::kFormatUrlOmitAll &
//fix_flaw_line_below:
//      ~url_formatter::kFormatUrlOmitUsernamePassword;
//fix_flaw_line_below:
//
//fix_flaw_line_below:
//  // If username is present, we must not omit the scheme because FixupURL() will
//fix_flaw_line_below:
//  // subsequently interpret the username as a scheme. crbug.com/639126
//fix_flaw_line_below:
//  if (url.has_username())
//fix_flaw_line_below:
//    format_types &= ~url_formatter::kFormatUrlOmitHTTP;
//fix_flaw_line_below:
//
//fix_flaw_line_below:
//  return url_formatter::FormatUrl(url, format_types, net::UnescapeRule::SPACES,
//fix_flaw_line_below:
//                                  nullptr, nullptr, nullptr);
 }
",186016," base::string16 FormatBookmarkURLForDisplay(const GURL& url) {
  return url_formatter::FormatUrl(
      url, url_formatter::kFormatUrlOmitAll &
               ~url_formatter::kFormatUrlOmitUsernamePassword,
      net::UnescapeRule::SPACES, nullptr, nullptr, nullptr);
 }
"," base::string16 FormatBookmarkURLForDisplay(const GURL& url) {
  // and trailing slash, and unescape most characters. However, it's
  url_formatter::FormatUrlTypes format_types =
      url_formatter::kFormatUrlOmitAll &
      ~url_formatter::kFormatUrlOmitUsernamePassword;

  // If username is present, we must not omit the scheme because FixupURL() will
  // subsequently interpret the username as a scheme. crbug.com/639126
  if (url.has_username())
    format_types &= ~url_formatter::kFormatUrlOmitHTTP;

  return url_formatter::FormatUrl(url, format_types, net::UnescapeRule::SPACES,
                                  nullptr, nullptr, nullptr);
 }
","The provided code defines a function, `FormatBookmarkURLForDisplay`, which takes a `GURL` object representing a URL as input and formats it for display purposes. It utilizes the `url_formatter::FormatUrl` function to format the URL while omitting certain components, specifically the username and password, as indicated by the bitwise operations on formatting flags. Additionally, it applies unescaping rules to handle spaces in the URL. The function returns a `string16` type, which is a string representation suitable for displaying the formatted URL, ensuring a clean and user-friendly output.","The code defines a function that formats a given URL for display by processing it to enhance readability. It specifically omits sensitive information, such as usernames and passwords, to ensure privacy and security. The function also handles any spaces in the URL by applying appropriate unescaping rules, which convert encoded characters back to their original form. The result is a clean, user-friendly string representation of the URL, suitable for presentation in bookmarks or other user interfaces, while maintaining the essential structure of the original link.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, arises from the potential mishandling of URLs that contain usernames. In the vulnerable code, the omission of the scheme when a username is present could lead to misinterpretation, allowing an attacker to inject malicious content. The fixed code addresses this by ensuring that if a username exists in the URL, the scheme is retained by modifying the formatting types. This change prevents the exploitation of the URL structure, thereby enhancing security and mitigating the risk of cross-site scripting attacks.","The vulnerability identified as CWE-79, which involves improper neutralization of input during web page generation, stems from the handling of URLs that may contain sensitive information, such as usernames. In the original code, omitting the scheme when a username is present could lead to misinterpretation of the URL, potentially allowing attackers to inject malicious content. The fix implemented ensures that the scheme is preserved when a username is detected, thereby preventing the exploitation of the URL structure. This enhancement significantly reduces the risk of cross-site scripting attacks and improves overall security by properly managing user input.","The vulnerability was fixed by modifying the formatting types used in the URL processing. In the updated code, a conditional check was added to determine if the URL contains a username. If a username is present, the code ensures that the scheme is not omitted by adjusting the formatting types to retain the HTTP scheme. This is achieved by using a bitwise operation to remove the omission flag for the scheme from the formatting types. As a result, the function now correctly handles URLs with usernames, preventing potential misinterpretation and reducing the risk of cross-site scripting attacks.","The vulnerability was addressed by implementing a conditional check that ensures the scheme of a URL is preserved when a username is present. Previously, omitting the scheme could lead to misinterpretation of the URL structure, increasing the risk of injection attacks. The fix involves adjusting the formatting settings to retain the scheme in such cases, thereby preventing any potential exploitation. This change enhances the security of the URL processing by ensuring that sensitive information is handled correctly, ultimately reducing the likelihood of cross-site scripting vulnerabilities and improving overall input validation.","4,4","4, 5","4,4","4, 4"
4,4,186246,186246,,Remote,Not required,,CVE-2016-1652,https://www.cvedetails.com/cve/CVE-2016-1652/,CWE-79,Medium,,Partial,,2016-04-18,4.3,"Cross-site scripting (XSS) vulnerability in the ModuleSystem::RequireForJsInner function in extensions/renderer/module_system.cc in the Extensions subsystem in Google Chrome before 50.0.2661.75 allows remote attackers to inject arbitrary web script or HTML via a crafted web site, aka *Universal XSS (UXSS).*",2018-10-30,XSS ,5,https://github.com/chromium/chromium/commit/7c5aa07be11cd63d953fbe66370c5869a52170bf,7c5aa07be11cd63d953fbe66370c5869a52170bf,"Use install_static::GetAppGuid instead of the hardcoded string in BrandcodeConfigFetcher.

Bug: 769756
Change-Id: Ifdcb0a5145ffad1d563562e2b2ea2390ff074cdc
Reviewed-on: https://chromium-review.googlesource.com/1213178
Reviewed-by: Dominic Battré <battre@chromium.org>
Commit-Queue: Vasilii Sukhanov <vasilii@chromium.org>
Cr-Commit-Position: refs/heads/master@{#590275}",6,chrome/browser/profile_resetter/brandcode_config_fetcher.cc,"{""sha"": ""c15c60c3ac2815695cc024d1e7891827c18383c5"", ""filename"": ""chrome/browser/profile_resetter/brandcode_config_fetcher.cc"", ""status"": ""modified"", ""additions"": 16, ""deletions"": 10, ""changes"": 26, ""blob_url"": ""https://github.com/chromium/chromium/blob/7c5aa07be11cd63d953fbe66370c5869a52170bf/chrome/browser/profile_resetter/brandcode_config_fetcher.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/7c5aa07be11cd63d953fbe66370c5869a52170bf/chrome/browser/profile_resetter/brandcode_config_fetcher.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/profile_resetter/brandcode_config_fetcher.cc?ref=7c5aa07be11cd63d953fbe66370c5869a52170bf"", ""patch"": ""@@ -9,7 +9,9 @@\n \n #include \""base/callback_helpers.h\""\n #include \""base/macros.h\""\n+#include \""base/strings/stringprintf.h\""\n #include \""base/strings/utf_string_conversions.h\""\n+#include \""build/build_config.h\""\n #include \""chrome/browser/browser_process.h\""\n #include \""chrome/browser/profile_resetter/brandcoded_default_settings.h\""\n #include \""libxml/parser.h\""\n@@ -20,30 +22,34 @@\n #include \""services/network/public/cpp/simple_url_loader.h\""\n #include \""services/network/public/mojom/url_loader_factory.mojom.h\""\n \n+#if defined(OS_WIN)\n+#include \""chrome/install_static/install_util.h\""\n+#endif  // defined(OS_WIN)\n+\n namespace {\n \n-const int kDownloadTimeoutSec = 10;\n-const char kPostXml[] =\n+constexpr char kDefaultAppID[] = \""{8A69D345-D564-463C-AFF1-A69D9E530F96}\"";\n+constexpr int kDownloadTimeoutSec = 10;\n+constexpr char kPostXml[] =\n     \""<?xml version=\\\""1.0\\\"" encoding=\\\""UTF-8\\\""?>\""\n     \""<request\""\n     \""    version=\\\""chromeprofilereset-1.1\\\""\""\n     \""    protocol=\\\""3.0\\\""\""\n     \""    installsource=\\\""profilereset\\\"">\""\n-    \""  <app appid=\\\""{8A69D345-D564-463C-AFF1-A69D9E530F96}\\\"">\""\n-    \""    <data name=\\\""install\\\"" index=\\\""__BRANDCODE_PLACEHOLDER__\\\""/>\""\n+    \""  <app appid=\\\""%s\\\"">\""\n+    \""    <data name=\\\""install\\\"" index=\\\""%s\\\""/>\""\n     \""  </app>\""\n     \""</request>\"";\n \n // Returns the query to the server which can be used to retrieve the config.\n // |brand| is a brand code, it mustn't be empty.\n std::string GetUploadData(const std::string& brand) {\n+  std::string app_id(kDefaultAppID);\n+#if defined(OS_WIN)\n+  app_id = install_static::UTF16ToUTF8(install_static::GetAppGuid());\n+#endif  // defined(OS_WIN)\n   DCHECK(!brand.empty());\n-  std::string data(kPostXml);\n-  const std::string placeholder(\""__BRANDCODE_PLACEHOLDER__\"");\n-  size_t placeholder_pos = data.find(placeholder);\n-  DCHECK(placeholder_pos != std::string::npos);\n-  data.replace(placeholder_pos, placeholder.size(), brand);\n-  return data;\n+  return base::StringPrintf(kPostXml, app_id.c_str(), brand.c_str());\n }\n \n // Extracts json master prefs from xml.""}"," std::string GetUploadData(const std::string& brand) {
  std::string app_id(kDefaultAppID);
#if defined(OS_WIN)
  app_id = install_static::UTF16ToUTF8(install_static::GetAppGuid());
#endif  // defined(OS_WIN)
   DCHECK(!brand.empty());
  return base::StringPrintf(kPostXml, app_id.c_str(), brand.c_str());
 }
"," std::string GetUploadData(const std::string& brand) {
   DCHECK(!brand.empty());
  std::string data(kPostXml);
  const std::string placeholder(""__BRANDCODE_PLACEHOLDER__"");
  size_t placeholder_pos = data.find(placeholder);
  DCHECK(placeholder_pos != std::string::npos);
  data.replace(placeholder_pos, placeholder.size(), brand);
  return data;
 }
",C,"  std::string app_id(kDefaultAppID);
#if defined(OS_WIN)
  app_id = install_static::UTF16ToUTF8(install_static::GetAppGuid());
#endif  // defined(OS_WIN)
  return base::StringPrintf(kPostXml, app_id.c_str(), brand.c_str());
","  std::string data(kPostXml);
  const std::string placeholder(""__BRANDCODE_PLACEHOLDER__"");
  size_t placeholder_pos = data.find(placeholder);
  DCHECK(placeholder_pos != std::string::npos);
  data.replace(placeholder_pos, placeholder.size(), brand);
  return data;
",,"@@ -9,7 +9,9 @@
 
 #include ""base/callback_helpers.h""
 #include ""base/macros.h""
+#include ""base/strings/stringprintf.h""
 #include ""base/strings/utf_string_conversions.h""
+#include ""build/build_config.h""
 #include ""chrome/browser/browser_process.h""
 #include ""chrome/browser/profile_resetter/brandcoded_default_settings.h""
 #include ""libxml/parser.h""
@@ -20,30 +22,34 @@
 #include ""services/network/public/cpp/simple_url_loader.h""
 #include ""services/network/public/mojom/url_loader_factory.mojom.h""
 
+#if defined(OS_WIN)
+#include ""chrome/install_static/install_util.h""
+#endif  // defined(OS_WIN)
+
 namespace {
 
-const int kDownloadTimeoutSec = 10;
-const char kPostXml[] =
+constexpr char kDefaultAppID[] = ""{8A69D345-D564-463C-AFF1-A69D9E530F96}"";
+constexpr int kDownloadTimeoutSec = 10;
+constexpr char kPostXml[] =
     ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>""
     ""<request""
     ""    version=\""chromeprofilereset-1.1\""""
     ""    protocol=\""3.0\""""
     ""    installsource=\""profilereset\"">""
-    ""  <app appid=\""{8A69D345-D564-463C-AFF1-A69D9E530F96}\"">""
-    ""    <data name=\""install\"" index=\""__BRANDCODE_PLACEHOLDER__\""/>""
+    ""  <app appid=\""%s\"">""
+    ""    <data name=\""install\"" index=\""%s\""/>""
     ""  </app>""
     ""</request>"";
 
 // Returns the query to the server which can be used to retrieve the config.
 // |brand| is a brand code, it mustn't be empty.
 std::string GetUploadData(const std::string& brand) {
+  std::string app_id(kDefaultAppID);
+#if defined(OS_WIN)
+  app_id = install_static::UTF16ToUTF8(install_static::GetAppGuid());
+#endif  // defined(OS_WIN)
   DCHECK(!brand.empty());
-  std::string data(kPostXml);
-  const std::string placeholder(""__BRANDCODE_PLACEHOLDER__"");
-  size_t placeholder_pos = data.find(placeholder);
-  DCHECK(placeholder_pos != std::string::npos);
-  data.replace(placeholder_pos, placeholder.size(), brand);
-  return data;
+  return base::StringPrintf(kPostXml, app_id.c_str(), brand.c_str());
 }
 
 // Extracts json master prefs from xml.",Chrome,7c5aa07be11cd63d953fbe66370c5869a52170bf,32582f5489e1e45821e4583886ba5c19845bb2ac,1," std::string GetUploadData(const std::string& brand) {
//fix_flaw_line_below:
//  std::string app_id(kDefaultAppID);
//fix_flaw_line_below:
//#if defined(OS_WIN)
//fix_flaw_line_below:
//  app_id = install_static::UTF16ToUTF8(install_static::GetAppGuid());
//fix_flaw_line_below:
//#endif  // defined(OS_WIN)
   DCHECK(!brand.empty());
//flaw_line_below:
  std::string data(kPostXml);
//flaw_line_below:
  const std::string placeholder(""__BRANDCODE_PLACEHOLDER__"");
//flaw_line_below:
  size_t placeholder_pos = data.find(placeholder);
//flaw_line_below:
  DCHECK(placeholder_pos != std::string::npos);
//flaw_line_below:
  data.replace(placeholder_pos, placeholder.size(), brand);
//flaw_line_below:
  return data;
//fix_flaw_line_below:
//  return base::StringPrintf(kPostXml, app_id.c_str(), brand.c_str());
 }
",186246," std::string GetUploadData(const std::string& brand) {
   DCHECK(!brand.empty());
  std::string data(kPostXml);
  const std::string placeholder(""__BRANDCODE_PLACEHOLDER__"");
  size_t placeholder_pos = data.find(placeholder);
  DCHECK(placeholder_pos != std::string::npos);
  data.replace(placeholder_pos, placeholder.size(), brand);
  return data;
 }
"," std::string GetUploadData(const std::string& brand) {
  std::string app_id(kDefaultAppID);
#if defined(OS_WIN)
  app_id = install_static::UTF16ToUTF8(install_static::GetAppGuid());
#endif  // defined(OS_WIN)
   DCHECK(!brand.empty());
  return base::StringPrintf(kPostXml, app_id.c_str(), brand.c_str());
 }
","The `GetUploadData` function generates a string containing XML data for uploading, where it replaces a specific placeholder with a provided brand code. It first checks that the input `brand` is not empty using a debug assertion. The function initializes a string `data` with a predefined XML template (`kPostXml`) and searches for the placeholder `__BRANDCODE_PLACEHOLDER__` within this template. Upon finding the placeholder, it replaces it with the actual `brand` value. Finally, the modified XML string is returned, ready for use in an upload operation.","The code defines a function that generates a string formatted as XML for uploading, incorporating a specific brand code. It begins by ensuring that the input for the brand is not empty, which is crucial for the function's operation. The function then initializes a string with a predefined XML template and searches for a designated placeholder within this template. Once the placeholder is located, it is replaced with the provided brand code. The final output is the modified XML string, which is prepared for subsequent upload processes.","The vulnerability in the original code, identified as CWE-79 (Improper Neutralization of Input During Web Page Generation), arises from the direct insertion of user-supplied data (the `brand` variable) into an XML template without proper sanitization. This could allow an attacker to inject malicious content, leading to cross-site scripting (XSS) attacks. In the fixed code, the use of `base::StringPrintf` to format the XML string with `app_id` and `brand` ensures that the input is handled more safely, as it likely includes mechanisms to escape or neutralize potentially harmful characters, thus mitigating the risk of XSS vulnerabilities.","The vulnerability in the original code, classified as CWE-79 (Improper Neutralization of Input During Web Page Generation), stems from the direct insertion of user input into an XML template without adequate sanitization. This oversight allows for the possibility of an attacker injecting malicious scripts, which could lead to cross-site scripting (XSS) attacks. The fixed code addresses this issue by utilizing a safer method for formatting the XML string, which likely incorporates mechanisms to escape or neutralize harmful characters in the user input. This change significantly reduces the risk of XSS vulnerabilities by ensuring that user data is handled securely.","The vulnerability was fixed by replacing the direct insertion of user input into the XML template with a safer formatting approach using `base::StringPrintf`. In the original code, the `brand` variable was directly included in the XML string, which posed a risk for injection attacks. The updated implementation ensures that both `app_id` and `brand` are passed to `base::StringPrintf`, which likely includes built-in mechanisms to escape special characters and neutralize potentially harmful input. This change effectively mitigates the risk of cross-site scripting (XSS) by ensuring that user-supplied data is properly sanitized before being included in the output.","The vulnerability was fixed by changing the method of incorporating user input into the XML template. Instead of directly inserting the user-supplied data, which could lead to injection attacks, the updated code employs a safer formatting technique that ensures proper handling of the input. This new approach likely includes mechanisms to escape special characters and neutralize potentially harmful content, thereby preventing malicious scripts from being executed. By sanitizing the user input before it is included in the output, the risk of cross-site scripting (XSS) attacks is significantly reduced, enhancing the overall security of the application.","5,4","5, 5","4, 4","4, 4"
5,5,186366,186366,,Remote,Not required,,CVE-2017-5069,https://www.cvedetails.com/cve/CVE-2017-5069/,CWE-79,Medium,,Partial,,2017-10-27,4.3,"Incorrect MIME type of XSS-Protection reports in Blink in Google Chrome prior to 58.0.3029.81 for Linux, Windows, and Mac, and 58.0.3029.83 for Android, allowed a remote attacker to circumvent Cross-Origin Resource Sharing checks via a crafted HTML page.",2019-10-02,XSS ,1,https://github.com/chromium/chromium/commit/7a0dee9d17d0ee7fd1b40b017442f4952384a7c2,7a0dee9d17d0ee7fd1b40b017442f4952384a7c2,"Prevent regular mode session startup pref type turning to default.

When user loses past session tabs of regular mode after
invoking a new window from the incognito mode.

This was happening because the SessionStartUpPref type was being set
to default, from last, for regular user mode. This was happening in
the RestoreIfNecessary method where the restoration was taking place
for users whose SessionStartUpPref type was set to last.

The fix was to make the protocol of changing the pref type to
default more explicit to incognito users and not regular users
of pref type last.

Bug: 481373
Change-Id: I96efb4cf196949312181c83c6dcd45986ddded13
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1774441
Reviewed-by: Tommy Martino <tmartino@chromium.org>
Reviewed-by: Ramin Halavati <rhalavati@chromium.org>
Commit-Queue: Rohit Agarwal <roagarwal@chromium.org>
Cr-Commit-Position: refs/heads/master@{#691726}",2,chrome/browser/ui/startup/startup_browser_creator.cc,"{""sha"": ""f118e6d27ecca45fecfc48580608159a47d2de24"", ""filename"": ""chrome/browser/ui/startup/startup_browser_creator.cc"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 2, ""changes"": 3, ""blob_url"": ""https://github.com/chromium/chromium/blob/7a0dee9d17d0ee7fd1b40b017442f4952384a7c2/chrome/browser/ui/startup/startup_browser_creator.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/7a0dee9d17d0ee7fd1b40b017442f4952384a7c2/chrome/browser/ui/startup/startup_browser_creator.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/ui/startup/startup_browser_creator.cc?ref=7a0dee9d17d0ee7fd1b40b017442f4952384a7c2"", ""patch"": ""@@ -468,8 +468,7 @@ SessionStartupPref StartupBrowserCreator::GetSessionStartupPref(\n       pref.type = SessionStartupPref::LAST;\n   }\n \n-  if (pref.type == SessionStartupPref::LAST &&\n-      IncognitoModePrefs::ShouldLaunchIncognito(command_line, prefs)) {\n+  if (pref.type == SessionStartupPref::LAST && profile->IsOffTheRecord()) {\n     // We don't store session information when incognito. If the user has\n     // chosen to restore last session and launched incognito, fallback to\n     // default launch behavior.""}","SessionStartupPref StartupBrowserCreator::GetSessionStartupPref(
    const base::CommandLine& command_line,
    Profile* profile) {
  DCHECK(profile);
  PrefService* prefs = profile->GetPrefs();
  SessionStartupPref pref = SessionStartupPref::GetStartupPref(prefs);

#if defined(OS_CHROMEOS)
  const bool is_first_run =
      user_manager::UserManager::Get()->IsCurrentUserNew();
  const bool did_restart = false;
  StartupBrowserCreator::WasRestarted();
#else
  const bool is_first_run = first_run::IsChromeFirstRun();
  const bool did_restart = StartupBrowserCreator::WasRestarted();
#endif

  if (is_first_run && SessionStartupPref::TypeIsDefault(prefs))
    pref.type = SessionStartupPref::DEFAULT;

  if ((command_line.HasSwitch(switches::kRestoreLastSession) || did_restart) &&
      !profile->IsNewProfile()) {
    pref.type = SessionStartupPref::LAST;
  }

  if (!profile->IsGuestSession()) {
    ProfileAttributesEntry* entry = nullptr;
    bool has_entry =
        g_browser_process->profile_manager()
            ->GetProfileAttributesStorage()
            .GetProfileAttributesWithPath(profile->GetPath(), &entry);

    if (has_entry && entry->IsSigninRequired())
       pref.type = SessionStartupPref::LAST;
   }
 
  if (pref.type == SessionStartupPref::LAST && profile->IsOffTheRecord()) {
    pref.type = SessionStartupPref::DEFAULT;
  }

  return pref;
}
","SessionStartupPref StartupBrowserCreator::GetSessionStartupPref(
    const base::CommandLine& command_line,
    Profile* profile) {
  DCHECK(profile);
  PrefService* prefs = profile->GetPrefs();
  SessionStartupPref pref = SessionStartupPref::GetStartupPref(prefs);

#if defined(OS_CHROMEOS)
  const bool is_first_run =
      user_manager::UserManager::Get()->IsCurrentUserNew();
  const bool did_restart = false;
  StartupBrowserCreator::WasRestarted();
#else
  const bool is_first_run = first_run::IsChromeFirstRun();
  const bool did_restart = StartupBrowserCreator::WasRestarted();
#endif

  if (is_first_run && SessionStartupPref::TypeIsDefault(prefs))
    pref.type = SessionStartupPref::DEFAULT;

  if ((command_line.HasSwitch(switches::kRestoreLastSession) || did_restart) &&
      !profile->IsNewProfile()) {
    pref.type = SessionStartupPref::LAST;
  }

  if (!profile->IsGuestSession()) {
    ProfileAttributesEntry* entry = nullptr;
    bool has_entry =
        g_browser_process->profile_manager()
            ->GetProfileAttributesStorage()
            .GetProfileAttributesWithPath(profile->GetPath(), &entry);

    if (has_entry && entry->IsSigninRequired())
       pref.type = SessionStartupPref::LAST;
   }
 
  if (pref.type == SessionStartupPref::LAST &&
      IncognitoModePrefs::ShouldLaunchIncognito(command_line, prefs)) {
    pref.type = SessionStartupPref::DEFAULT;
  }

  return pref;
}
",C,"  if (pref.type == SessionStartupPref::LAST && profile->IsOffTheRecord()) {
","  if (pref.type == SessionStartupPref::LAST &&
      IncognitoModePrefs::ShouldLaunchIncognito(command_line, prefs)) {
",,"@@ -468,8 +468,7 @@ SessionStartupPref StartupBrowserCreator::GetSessionStartupPref(
       pref.type = SessionStartupPref::LAST;
   }
 
-  if (pref.type == SessionStartupPref::LAST &&
-      IncognitoModePrefs::ShouldLaunchIncognito(command_line, prefs)) {
+  if (pref.type == SessionStartupPref::LAST && profile->IsOffTheRecord()) {
     // We don't store session information when incognito. If the user has
     // chosen to restore last session and launched incognito, fallback to
     // default launch behavior.",Chrome,7a0dee9d17d0ee7fd1b40b017442f4952384a7c2,278e05fafb1fc77c5d23425c3c1c5ee5a4082f17,1,"SessionStartupPref StartupBrowserCreator::GetSessionStartupPref(
    const base::CommandLine& command_line,
    Profile* profile) {
  DCHECK(profile);
  PrefService* prefs = profile->GetPrefs();
  SessionStartupPref pref = SessionStartupPref::GetStartupPref(prefs);

  // IsChromeFirstRun() looks for a sentinel file to determine whether the user
  // is starting Chrome for the first time. On Chrome OS, the sentinel is stored
  // in a location shared by all users and the check is meaningless. Query the
  // UserManager instead to determine whether the user is new.
#if defined(OS_CHROMEOS)
  const bool is_first_run =
      user_manager::UserManager::Get()->IsCurrentUserNew();
  // On ChromeOS restarts force the user to login again. The expectation is that
  // after a login the user gets clean state. For this reason we ignore
  // StartupBrowserCreator::WasRestarted(). However
  // StartupBrowserCreator::WasRestarted has to be called in order to correctly
  // update pref values.
  const bool did_restart = false;
  StartupBrowserCreator::WasRestarted();
#else
  const bool is_first_run = first_run::IsChromeFirstRun();
  const bool did_restart = StartupBrowserCreator::WasRestarted();
#endif

  // The pref has an OS-dependent default value. For the first run only, this
  // default is overridden with SessionStartupPref::DEFAULT so that first run
  // behavior (sync promo, welcome page) is consistently invoked.
  // This applies only if the pref is still at its default and has not been
  // set by the user, managed prefs or policy.
  if (is_first_run && SessionStartupPref::TypeIsDefault(prefs))
    pref.type = SessionStartupPref::DEFAULT;

  // The switches::kRestoreLastSession command line switch is used to restore
  // sessions after a browser self restart (e.g. after a Chrome upgrade).
  // However, new profiles can be created from a browser process that has this
  // switch so do not set the session pref to SessionStartupPref::LAST for
  // those as there is nothing to restore.
  if ((command_line.HasSwitch(switches::kRestoreLastSession) || did_restart) &&
      !profile->IsNewProfile()) {
    pref.type = SessionStartupPref::LAST;
  }

  // A browser starting for a profile being unlocked should always restore.
  if (!profile->IsGuestSession()) {
    ProfileAttributesEntry* entry = nullptr;
    bool has_entry =
        g_browser_process->profile_manager()
            ->GetProfileAttributesStorage()
            .GetProfileAttributesWithPath(profile->GetPath(), &entry);

    if (has_entry && entry->IsSigninRequired())
       pref.type = SessionStartupPref::LAST;
   }
 
//flaw_line_below:
  if (pref.type == SessionStartupPref::LAST &&
//flaw_line_below:
      IncognitoModePrefs::ShouldLaunchIncognito(command_line, prefs)) {
//fix_flaw_line_below:
//  if (pref.type == SessionStartupPref::LAST && profile->IsOffTheRecord()) {
     // We don't store session information when incognito. If the user has
     // chosen to restore last session and launched incognito, fallback to
     // default launch behavior.
    pref.type = SessionStartupPref::DEFAULT;
  }

  return pref;
}
",186366,"SessionStartupPref StartupBrowserCreator::GetSessionStartupPref(
    const base::CommandLine& command_line,
    Profile* profile) {
  DCHECK(profile);
  PrefService* prefs = profile->GetPrefs();
  SessionStartupPref pref = SessionStartupPref::GetStartupPref(prefs);

#if defined(OS_CHROMEOS)
  const bool is_first_run =
      user_manager::UserManager::Get()->IsCurrentUserNew();
  const bool did_restart = false;
  StartupBrowserCreator::WasRestarted();
#else
  const bool is_first_run = first_run::IsChromeFirstRun();
  const bool did_restart = StartupBrowserCreator::WasRestarted();
#endif

  if (is_first_run && SessionStartupPref::TypeIsDefault(prefs))
    pref.type = SessionStartupPref::DEFAULT;

  if ((command_line.HasSwitch(switches::kRestoreLastSession) || did_restart) &&
      !profile->IsNewProfile()) {
    pref.type = SessionStartupPref::LAST;
  }

  if (!profile->IsGuestSession()) {
    ProfileAttributesEntry* entry = nullptr;
    bool has_entry =
        g_browser_process->profile_manager()
            ->GetProfileAttributesStorage()
            .GetProfileAttributesWithPath(profile->GetPath(), &entry);

    if (has_entry && entry->IsSigninRequired())
       pref.type = SessionStartupPref::LAST;
   }
 
  if (pref.type == SessionStartupPref::LAST &&
      IncognitoModePrefs::ShouldLaunchIncognito(command_line, prefs)) {
    pref.type = SessionStartupPref::DEFAULT;
  }

  return pref;
}
","SessionStartupPref StartupBrowserCreator::GetSessionStartupPref(
    const base::CommandLine& command_line,
    Profile* profile) {
  DCHECK(profile);
  PrefService* prefs = profile->GetPrefs();
  SessionStartupPref pref = SessionStartupPref::GetStartupPref(prefs);

#if defined(OS_CHROMEOS)
  const bool is_first_run =
      user_manager::UserManager::Get()->IsCurrentUserNew();
  const bool did_restart = false;
  StartupBrowserCreator::WasRestarted();
#else
  const bool is_first_run = first_run::IsChromeFirstRun();
  const bool did_restart = StartupBrowserCreator::WasRestarted();
#endif

  if (is_first_run && SessionStartupPref::TypeIsDefault(prefs))
    pref.type = SessionStartupPref::DEFAULT;

  if ((command_line.HasSwitch(switches::kRestoreLastSession) || did_restart) &&
      !profile->IsNewProfile()) {
    pref.type = SessionStartupPref::LAST;
  }

  if (!profile->IsGuestSession()) {
    ProfileAttributesEntry* entry = nullptr;
    bool has_entry =
        g_browser_process->profile_manager()
            ->GetProfileAttributesStorage()
            .GetProfileAttributesWithPath(profile->GetPath(), &entry);

    if (has_entry && entry->IsSigninRequired())
       pref.type = SessionStartupPref::LAST;
   }
 
  if (pref.type == SessionStartupPref::LAST && profile->IsOffTheRecord()) {
    pref.type = SessionStartupPref::DEFAULT;
  }

  return pref;
}
","The provided code defines a function that determines the session startup preferences for a browser based on various conditions, such as whether it's the first run, if the browser was restarted, and the profile type. It retrieves the user's preferences and checks command-line switches to decide if the last session should be restored. Additionally, it considers whether the profile requires sign-in and whether incognito mode should be launched. The function ultimately returns a `SessionStartupPref` object that indicates how the browser should start, ensuring a tailored experience based on user context and settings.","The code defines a function that determines how a browser session should start based on user preferences and specific conditions. It checks if the current user is new or if the browser has been restarted, which influences the startup behavior. The function assesses whether to restore the last session or use default settings, taking into account the profile type and whether sign-in is required. Additionally, it evaluates if incognito mode should be launched based on user preferences. Ultimately, the function returns a configuration that dictates the browser's startup state, ensuring a personalized user experience.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, can arise when user input is not adequately sanitized, leading to potential cross-site scripting (XSS) attacks. In the vulnerable code, the handling of session preferences could allow untrusted input from the command line or profile attributes to influence the browser's behavior without proper validation. The fixed code introduces a check for whether the profile is off-the-record, ensuring that sensitive session types are not inadvertently restored in insecure contexts. This additional validation helps mitigate the risk of executing malicious scripts through improper session handling.","The vulnerability identified as CWE-79, which pertains to improper neutralization of input during web page generation, can occur when user input is not properly sanitized, potentially allowing for cross-site scripting (XSS) attacks. In the vulnerable code, the handling of session preferences could permit untrusted input to influence browser behavior without adequate validation, exposing the application to risks. The fixed code addresses this issue by introducing additional checks to ensure that sensitive session types are not restored in insecure contexts, thereby enhancing input validation and reducing the likelihood of executing malicious scripts through improper session management.","The vulnerability was fixed by adding a specific check for whether the profile is off-the-record, which is indicated by the `profile->IsOffTheRecord()` function. In the original code, the session type could be set to restore the last session without sufficient validation, potentially allowing untrusted input to influence browser behavior. The updated code ensures that if the session type is determined to be the last, it is reset to default if the profile is off-the-record. This additional validation step helps prevent the execution of potentially malicious scripts by ensuring that sensitive session types are not restored in insecure contexts.","The vulnerability was addressed by implementing a validation check that ensures sensitive session types are not restored in insecure contexts. The updated code introduces a condition that evaluates the profile's status, specifically whether it is operating in an off-the-record mode. If the session type is set to restore the last session, it is reverted to a default state when the profile is deemed insecure. This additional layer of validation effectively mitigates the risk of executing untrusted input, thereby enhancing the overall security of the session management process and reducing the potential for cross-site scripting attacks.","4,4","3, 4","4,4","4, 4"
6,6,186418,186418,,Remote,Not required,,CVE-2017-5008,https://www.cvedetails.com/cve/CVE-2017-5008/,CWE-79,Medium,,Partial,,2017-02-17,4.3,"Blink in Google Chrome prior to 56.0.2924.76 for Linux, Windows and Mac, and 56.0.2924.87 for Android, allowed attacker controlled JavaScript to be run during the invocation of a private script method, which allowed a remote attacker to inject arbitrary scripts or HTML (UXSS) via a crafted HTML page.",2018-01-04,XSS ,6,https://github.com/chromium/chromium/commit/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9,c093b7a74ddce32dd3b0e0be60f31becc6ce32f9,"Don't touch the prototype chain to get the private script controller.

Prior to this patch, private scripts attempted to get the
""privateScriptController"" property off the global object without verifying if
the property actually exists on the global. If the property hasn't been set yet,
this operation could descend into the prototype chain and potentially return
a named property from the WindowProperties object, leading to release asserts
and general confusion.

BUG=668552

Review-Url: https://codereview.chromium.org/2529163002
Cr-Commit-Position: refs/heads/master@{#434627}",6,third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.cpp,"{""sha"": ""1560d1019cd74abcf6c6d6d16fc0ed9e83f91c1b"", ""filename"": ""third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash-expected.txt"", ""status"": ""added"", ""additions"": 2, ""deletions"": 0, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash-expected.txt?ref=c093b7a74ddce32dd3b0e0be60f31becc6ce32f9"", ""patch"": ""@@ -0,0 +1,2 @@\n+ \n+Test that a named property doesn't interfere with a private script (https://crbug.com/668552). If the test is successful, it should not crash.""}<_**next**_>{""sha"": ""1e410c0447a83fab2da5eb9fb6693d754719d9e8"", ""filename"": ""third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash.html"", ""status"": ""added"", ""additions"": 15, ""deletions"": 0, ""changes"": 15, ""blob_url"": ""https://github.com/chromium/chromium/blob/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash.html"", ""raw_url"": ""https://github.com/chromium/chromium/raw/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash.html"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/dom/marquee-named-property-crash.html?ref=c093b7a74ddce32dd3b0e0be60f31becc6ce32f9"", ""patch"": ""@@ -0,0 +1,15 @@\n+<!DOCTYPE html>\n+<html>\n+<body>\n+<script>\n+if (window.testRunner)\n+    testRunner.dumpAsText();\n+</script>\n+<img name=\""privateScriptController\"">\n+<marquee></marquee>\n+<div>\n+Test that a named property doesn't interfere with a private script (https://crbug.com/668552).\n+If the test is successful, it should not crash.\n+</div>\n+</body>\n+</html>""}<_**next**_>{""sha"": ""eb4974e91d06882361bb7a1470c0d82fbb358bd7"", ""filename"": ""third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.cpp"", ""status"": ""modified"", ""additions"": 6, ""deletions"": 6, ""changes"": 12, ""blob_url"": ""https://github.com/chromium/chromium/blob/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.cpp"", ""raw_url"": ""https://github.com/chromium/chromium/raw/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.cpp"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.cpp?ref=c093b7a74ddce32dd3b0e0be60f31becc6ce32f9"", ""patch"": ""@@ -57,12 +57,12 @@ static v8::Local<v8::Value> compileAndRunPrivateScript(ScriptState* scriptState,\n \n   v8::Local<v8::Context> context = scriptState->context();\n   v8::Local<v8::Object> global = context->Global();\n-  v8::Local<v8::Value> privateScriptController =\n-      global->Get(context, v8String(isolate, \""privateScriptController\""))\n-          .ToLocalChecked();\n-  RELEASE_ASSERT(privateScriptController->IsUndefined() ||\n-                 privateScriptController->IsObject());\n-  if (privateScriptController->IsObject()) {\n+  v8::Local<v8::String> key = v8String(isolate, \""privateScriptController\"");\n+\n+  if (global->HasOwnProperty(context, key).ToChecked()) {\n+    v8::Local<v8::Value> privateScriptController =\n+        global->Get(context, key).ToLocalChecked();\n+    CHECK(privateScriptController->IsObject());\n     v8::Local<v8::Object> privateScriptControllerObject =\n         privateScriptController.As<v8::Object>();\n     v8::Local<v8::Value> importFunctionValue =""}<_**next**_>{""sha"": ""e2571f43f7722dbf99cb78d37b6c9948ff06e6aa"", ""filename"": ""third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.js"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.js"", ""raw_url"": ""https://github.com/chromium/chromium/raw/c093b7a74ddce32dd3b0e0be60f31becc6ce32f9/third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.js"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/Source/bindings/core/v8/PrivateScriptRunner.js?ref=c093b7a74ddce32dd3b0e0be60f31becc6ce32f9"", ""patch"": ""@@ -139,7 +139,7 @@ PrivateScriptController.prototype = {\n     },\n }\n \n-if (typeof window.privateScriptController === 'undefined')\n+if (!window.hasOwnProperty(\""privateScriptController\""))\n     window.privateScriptController = new PrivateScriptController();\n \n // This line must be the last statement of this JS file.""}","static v8::Local<v8::Value> compileAndRunPrivateScript(ScriptState* scriptState,
                                                       String scriptClassName,
                                                       const char* source,
                                                       size_t size) {
  v8::Isolate* isolate = scriptState->isolate();
  v8::TryCatch block(isolate);
  String sourceString(source, size);
  String fileName = scriptClassName + "".js"";
 
   v8::Local<v8::Context> context = scriptState->context();
   v8::Local<v8::Object> global = context->Global();
  v8::Local<v8::String> key = v8String(isolate, ""privateScriptController"");

  if (global->HasOwnProperty(context, key).ToChecked()) {
    v8::Local<v8::Value> privateScriptController =
        global->Get(context, key).ToLocalChecked();
    CHECK(privateScriptController->IsObject());
     v8::Local<v8::Object> privateScriptControllerObject =
         privateScriptController.As<v8::Object>();
     v8::Local<v8::Value> importFunctionValue =
        privateScriptControllerObject->Get(context, v8String(isolate, ""import""))
            .ToLocalChecked();
    if (importFunctionValue->IsUndefined()) {
      v8::Local<v8::Function> function;
      if (!v8::FunctionTemplate::New(isolate, importFunction)
               ->GetFunction(context)
               .ToLocal(&function) ||
          !v8CallBoolean(privateScriptControllerObject->Set(
              context, v8String(isolate, ""import""), function))) {
        dumpV8Message(context, block.Message());
        LOG(FATAL)
            << ""Private script error: Setting import function failed. (Class ""
               ""name = ""
            << scriptClassName.utf8().data() << "")"";
      }
    }
  }

  v8::Local<v8::Script> script;
  if (!v8Call(V8ScriptRunner::compileScript(
                  v8String(isolate, sourceString), fileName, String(),
                  TextPosition::minimumPosition(), isolate, nullptr, nullptr,
                  nullptr, NotSharableCrossOrigin),
              script, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: Compile failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }

  v8::Local<v8::Value> result;
  if (!v8Call(V8ScriptRunner::runCompiledInternalScript(isolate, script),
              result, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: installClass() failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }
  return result;
}
","static v8::Local<v8::Value> compileAndRunPrivateScript(ScriptState* scriptState,
                                                       String scriptClassName,
                                                       const char* source,
                                                       size_t size) {
  v8::Isolate* isolate = scriptState->isolate();
  v8::TryCatch block(isolate);
  String sourceString(source, size);
  String fileName = scriptClassName + "".js"";
 
   v8::Local<v8::Context> context = scriptState->context();
   v8::Local<v8::Object> global = context->Global();
  v8::Local<v8::Value> privateScriptController =
      global->Get(context, v8String(isolate, ""privateScriptController""))
          .ToLocalChecked();
  RELEASE_ASSERT(privateScriptController->IsUndefined() ||
                 privateScriptController->IsObject());
  if (privateScriptController->IsObject()) {
     v8::Local<v8::Object> privateScriptControllerObject =
         privateScriptController.As<v8::Object>();
     v8::Local<v8::Value> importFunctionValue =
        privateScriptControllerObject->Get(context, v8String(isolate, ""import""))
            .ToLocalChecked();
    if (importFunctionValue->IsUndefined()) {
      v8::Local<v8::Function> function;
      if (!v8::FunctionTemplate::New(isolate, importFunction)
               ->GetFunction(context)
               .ToLocal(&function) ||
          !v8CallBoolean(privateScriptControllerObject->Set(
              context, v8String(isolate, ""import""), function))) {
        dumpV8Message(context, block.Message());
        LOG(FATAL)
            << ""Private script error: Setting import function failed. (Class ""
               ""name = ""
            << scriptClassName.utf8().data() << "")"";
      }
    }
  }

  v8::Local<v8::Script> script;
  if (!v8Call(V8ScriptRunner::compileScript(
                  v8String(isolate, sourceString), fileName, String(),
                  TextPosition::minimumPosition(), isolate, nullptr, nullptr,
                  nullptr, NotSharableCrossOrigin),
              script, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: Compile failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }

  v8::Local<v8::Value> result;
  if (!v8Call(V8ScriptRunner::runCompiledInternalScript(isolate, script),
              result, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: installClass() failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }
  return result;
}
",C,"  v8::Local<v8::String> key = v8String(isolate, ""privateScriptController"");

  if (global->HasOwnProperty(context, key).ToChecked()) {
    v8::Local<v8::Value> privateScriptController =
        global->Get(context, key).ToLocalChecked();
    CHECK(privateScriptController->IsObject());
","  v8::Local<v8::Value> privateScriptController =
      global->Get(context, v8String(isolate, ""privateScriptController""))
          .ToLocalChecked();
  RELEASE_ASSERT(privateScriptController->IsUndefined() ||
                 privateScriptController->IsObject());
  if (privateScriptController->IsObject()) {
",,"@@ -57,12 +57,12 @@ static v8::Local<v8::Value> compileAndRunPrivateScript(ScriptState* scriptState,
 
   v8::Local<v8::Context> context = scriptState->context();
   v8::Local<v8::Object> global = context->Global();
-  v8::Local<v8::Value> privateScriptController =
-      global->Get(context, v8String(isolate, ""privateScriptController""))
-          .ToLocalChecked();
-  RELEASE_ASSERT(privateScriptController->IsUndefined() ||
-                 privateScriptController->IsObject());
-  if (privateScriptController->IsObject()) {
+  v8::Local<v8::String> key = v8String(isolate, ""privateScriptController"");
+
+  if (global->HasOwnProperty(context, key).ToChecked()) {
+    v8::Local<v8::Value> privateScriptController =
+        global->Get(context, key).ToLocalChecked();
+    CHECK(privateScriptController->IsObject());
     v8::Local<v8::Object> privateScriptControllerObject =
         privateScriptController.As<v8::Object>();
     v8::Local<v8::Value> importFunctionValue =",Chrome,c093b7a74ddce32dd3b0e0be60f31becc6ce32f9,42839ee8c1195b25fbe327057e10c54f592b6693,1,"static v8::Local<v8::Value> compileAndRunPrivateScript(ScriptState* scriptState,
                                                       String scriptClassName,
                                                       const char* source,
                                                       size_t size) {
  v8::Isolate* isolate = scriptState->isolate();
  v8::TryCatch block(isolate);
  String sourceString(source, size);
  String fileName = scriptClassName + "".js"";
 
   v8::Local<v8::Context> context = scriptState->context();
   v8::Local<v8::Object> global = context->Global();
//flaw_line_below:
  v8::Local<v8::Value> privateScriptController =
//flaw_line_below:
      global->Get(context, v8String(isolate, ""privateScriptController""))
//flaw_line_below:
          .ToLocalChecked();
//flaw_line_below:
  RELEASE_ASSERT(privateScriptController->IsUndefined() ||
//flaw_line_below:
                 privateScriptController->IsObject());
//flaw_line_below:
  if (privateScriptController->IsObject()) {
//fix_flaw_line_below:
//  v8::Local<v8::String> key = v8String(isolate, ""privateScriptController"");
//fix_flaw_line_below:
//
//fix_flaw_line_below:
//  if (global->HasOwnProperty(context, key).ToChecked()) {
//fix_flaw_line_below:
//    v8::Local<v8::Value> privateScriptController =
//fix_flaw_line_below:
//        global->Get(context, key).ToLocalChecked();
//fix_flaw_line_below:
//    CHECK(privateScriptController->IsObject());
     v8::Local<v8::Object> privateScriptControllerObject =
         privateScriptController.As<v8::Object>();
     v8::Local<v8::Value> importFunctionValue =
        privateScriptControllerObject->Get(context, v8String(isolate, ""import""))
            .ToLocalChecked();
    if (importFunctionValue->IsUndefined()) {
      v8::Local<v8::Function> function;
      // This is a memory leak, FunctionTemplates are eternal.
      if (!v8::FunctionTemplate::New(isolate, importFunction)
               ->GetFunction(context)
               .ToLocal(&function) ||
          !v8CallBoolean(privateScriptControllerObject->Set(
              context, v8String(isolate, ""import""), function))) {
        dumpV8Message(context, block.Message());
        LOG(FATAL)
            << ""Private script error: Setting import function failed. (Class ""
               ""name = ""
            << scriptClassName.utf8().data() << "")"";
      }
    }
  }

  v8::Local<v8::Script> script;
  if (!v8Call(V8ScriptRunner::compileScript(
                  v8String(isolate, sourceString), fileName, String(),
                  TextPosition::minimumPosition(), isolate, nullptr, nullptr,
                  nullptr, NotSharableCrossOrigin),
              script, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: Compile failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }

  v8::Local<v8::Value> result;
  if (!v8Call(V8ScriptRunner::runCompiledInternalScript(isolate, script),
              result, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: installClass() failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }
  return result;
}
",186418,"static v8::Local<v8::Value> compileAndRunPrivateScript(ScriptState* scriptState,
                                                       String scriptClassName,
                                                       const char* source,
                                                       size_t size) {
  v8::Isolate* isolate = scriptState->isolate();
  v8::TryCatch block(isolate);
  String sourceString(source, size);
  String fileName = scriptClassName + "".js"";
 
   v8::Local<v8::Context> context = scriptState->context();
   v8::Local<v8::Object> global = context->Global();
  v8::Local<v8::Value> privateScriptController =
      global->Get(context, v8String(isolate, ""privateScriptController""))
          .ToLocalChecked();
  RELEASE_ASSERT(privateScriptController->IsUndefined() ||
                 privateScriptController->IsObject());
  if (privateScriptController->IsObject()) {
     v8::Local<v8::Object> privateScriptControllerObject =
         privateScriptController.As<v8::Object>();
     v8::Local<v8::Value> importFunctionValue =
        privateScriptControllerObject->Get(context, v8String(isolate, ""import""))
            .ToLocalChecked();
    if (importFunctionValue->IsUndefined()) {
      v8::Local<v8::Function> function;
      if (!v8::FunctionTemplate::New(isolate, importFunction)
               ->GetFunction(context)
               .ToLocal(&function) ||
          !v8CallBoolean(privateScriptControllerObject->Set(
              context, v8String(isolate, ""import""), function))) {
        dumpV8Message(context, block.Message());
        LOG(FATAL)
            << ""Private script error: Setting import function failed. (Class ""
               ""name = ""
            << scriptClassName.utf8().data() << "")"";
      }
    }
  }

  v8::Local<v8::Script> script;
  if (!v8Call(V8ScriptRunner::compileScript(
                  v8String(isolate, sourceString), fileName, String(),
                  TextPosition::minimumPosition(), isolate, nullptr, nullptr,
                  nullptr, NotSharableCrossOrigin),
              script, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: Compile failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }

  v8::Local<v8::Value> result;
  if (!v8Call(V8ScriptRunner::runCompiledInternalScript(isolate, script),
              result, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: installClass() failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }
  return result;
}
","static v8::Local<v8::Value> compileAndRunPrivateScript(ScriptState* scriptState,
                                                       String scriptClassName,
                                                       const char* source,
                                                       size_t size) {
  v8::Isolate* isolate = scriptState->isolate();
  v8::TryCatch block(isolate);
  String sourceString(source, size);
  String fileName = scriptClassName + "".js"";
 
   v8::Local<v8::Context> context = scriptState->context();
   v8::Local<v8::Object> global = context->Global();
  v8::Local<v8::String> key = v8String(isolate, ""privateScriptController"");

  if (global->HasOwnProperty(context, key).ToChecked()) {
    v8::Local<v8::Value> privateScriptController =
        global->Get(context, key).ToLocalChecked();
    CHECK(privateScriptController->IsObject());
     v8::Local<v8::Object> privateScriptControllerObject =
         privateScriptController.As<v8::Object>();
     v8::Local<v8::Value> importFunctionValue =
        privateScriptControllerObject->Get(context, v8String(isolate, ""import""))
            .ToLocalChecked();
    if (importFunctionValue->IsUndefined()) {
      v8::Local<v8::Function> function;
      if (!v8::FunctionTemplate::New(isolate, importFunction)
               ->GetFunction(context)
               .ToLocal(&function) ||
          !v8CallBoolean(privateScriptControllerObject->Set(
              context, v8String(isolate, ""import""), function))) {
        dumpV8Message(context, block.Message());
        LOG(FATAL)
            << ""Private script error: Setting import function failed. (Class ""
               ""name = ""
            << scriptClassName.utf8().data() << "")"";
      }
    }
  }

  v8::Local<v8::Script> script;
  if (!v8Call(V8ScriptRunner::compileScript(
                  v8String(isolate, sourceString), fileName, String(),
                  TextPosition::minimumPosition(), isolate, nullptr, nullptr,
                  nullptr, NotSharableCrossOrigin),
              script, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: Compile failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }

  v8::Local<v8::Value> result;
  if (!v8Call(V8ScriptRunner::runCompiledInternalScript(isolate, script),
              result, block)) {
    dumpV8Message(context, block.Message());
    LOG(FATAL) << ""Private script error: installClass() failed. (Class name = ""
               << scriptClassName.utf8().data() << "")"";
  }
  return result;
}
","The `compileAndRunPrivateScript` function compiles and executes a JavaScript script within a specified V8 context, utilizing a provided script class name and source code. It first retrieves a global object named `privateScriptController` and checks for an `import` function, setting it if not already defined. The function then compiles the script from the given source and handles any compilation errors by logging them. Finally, it runs the compiled script, capturing the result or logging an error if execution fails. The function returns the result of the script execution, ensuring robust error handling throughout the process.","The function compiles and executes a JavaScript script within a specific execution context, using a provided class name and source code. It first checks for a global controller object and ensures an import function is defined, creating one if necessary. The script is then compiled from the source code, with error handling to log any issues during this process. After successful compilation, the function runs the script and captures the result, while also managing any execution errors by logging them. Ultimately, it returns the result of the script execution, ensuring robust error management throughout.","The vulnerability identified as CWE-79, or ""Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"", arises from the potential for untrusted input to be executed as code. In the vulnerable code, the absence of a check for the existence of the `privateScriptController` object allowed for the possibility of executing arbitrary scripts if the global context was manipulated. The fixed code addresses this by introducing a check using `global->HasOwnProperty(context, key).ToChecked()`, ensuring that the `privateScriptController` is a valid object before proceeding, thus mitigating the risk of executing malicious scripts.","The vulnerability identified as CWE-79, or ""Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"", stems from the lack of validation for a critical object within the execution context. In the vulnerable code, the absence of a check allowed for the possibility of executing untrusted or malicious scripts if the global context was manipulated. The fix introduced a validation step to ensure that the object in question exists and is of the correct type before any further actions are taken. This change effectively mitigates the risk of executing arbitrary code, thereby enhancing the security of the script execution process.","The vulnerability was fixed by adding a validation check for the existence of the `privateScriptController` object before proceeding with its usage. In the updated code, the condition `global->HasOwnProperty(context, key).ToChecked()` ensures that the `privateScriptController` is a valid object within the global context. This prevents the execution of potentially malicious scripts that could occur if the object were undefined or improperly manipulated. Additionally, the code now asserts that `privateScriptController` is indeed an object using `CHECK(privateScriptController->IsObject())`, further reinforcing the security of the script execution process.","The vulnerability was fixed by implementing a validation step to ensure that a critical object exists and is of the correct type before it is accessed. This was achieved by checking for the object's presence in the global context, which prevents the execution of potentially harmful scripts if the object is undefined or manipulated. Additionally, the code now includes an assertion to confirm that the object is indeed valid, thereby reinforcing the security of the script execution process. These changes collectively mitigate the risk of executing untrusted or malicious code, enhancing overall application security.","4,4","4, 4","4,5","4,5"
7,7,186670,186670,,Remote,Not required,,CVE-2018-6051,https://www.cvedetails.com/cve/CVE-2018-6051/,CWE-79,Medium,Partial,,,2018-09-25,4.3,"XSS Auditor in Google Chrome prior to 64.0.3282.119, did not ensure the reporting URL was in the same origin as the page it was on, which allowed a remote attacker to obtain referrer details via a crafted HTML page.",2018-11-15,XSS ,7,https://github.com/chromium/chromium/commit/0da6dcdbe8e34740133773d20cc466b89d399d0a,0da6dcdbe8e34740133773d20cc466b89d399d0a,"Restrict the xss audit report URL to same origin

BUG=441275
R=tsepez@chromium.org,mkwst@chromium.org

Change-Id: I27bc8e251b9ad962c3b4fdebf084a2b9152f915d
Reviewed-on: https://chromium-review.googlesource.com/768367
Reviewed-by: Tom Sepez <tsepez@chromium.org>
Reviewed-by: Mike West <mkwst@chromium.org>
Commit-Queue: Jochen Eisinger <jochen@chromium.org>
Cr-Commit-Position: refs/heads/master@{#516666}",0,third_party/WebKit/Source/core/html/parser/XSSAuditor.cpp,"{""sha"": ""f991b2454bb8761dcd41fdcbfccaba4aab310f42"", ""filename"": ""third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin-expected.txt"", ""status"": ""added"", ""additions"": 11, ""deletions"": 0, ""changes"": 11, ""blob_url"": ""https://github.com/chromium/chromium/blob/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin-expected.txt?ref=0da6dcdbe8e34740133773d20cc466b89d399d0a"", ""patch"": ""@@ -0,0 +1,11 @@\n+CONSOLE ERROR: Error parsing header X-XSS-Protection: 1; report=http://localhost:8080/security/contentSecurityPolicy/resources/save-report.php?test=report-script-tag.html: reporting URL is not same scheme, host, and port as page at character position 10. The default protections will be applied.\n+CONSOLE ERROR: line 4: The XSS Auditor blocked access to 'http://127.0.0.1:8000/security/xssAuditor/resources/echo-intertag.pl?test=report-script-tag.html&echo-report=1&enable-report-cross-origin=1&q=%3Cscript%3Ealert(String.fromCharCode(0x58,0x53,0x53))%3C/script%3E%3Cp%3EIf%20you%20see%20this%20message,%20no%20JavaScript%20alert(),%20and%20not%20dump%20of%20a%20report%20is%20displayed%20below,%20then%20the%20test%20PASSED.%3C/p%3E' because the source code of a script was found within the request. The server sent an 'X-XSS-Protection' header requesting this behavior.\n+This tests that the X-XSS-Protection reports are sent out properly\n+\n+\n+\n+--------\n+Frame: 'frame'\n+--------\n+Could not load the requested resource.\n+Error code: -28 (net::ERR_BLOCKED_BY_XSS_AUDITOR)""}<_**next**_>{""sha"": ""ca8a315df359e6b57849c3d798aa87496719b89f"", ""filename"": ""third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin.html"", ""status"": ""added"", ""additions"": 25, ""deletions"": 0, ""changes"": 25, ""blob_url"": ""https://github.com/chromium/chromium/blob/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin.html"", ""raw_url"": ""https://github.com/chromium/chromium/raw/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin.html"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/report-script-tag-cross-origin.html?ref=0da6dcdbe8e34740133773d20cc466b89d399d0a"", ""patch"": ""@@ -0,0 +1,25 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<script src=\""http://localhost:8000/security/xssAuditor/resources/utilities.js\""></script>\n+<script>\n+if (window.testRunner) {\n+    testRunner.dumpAsText();\n+    testRunner.dumpChildFramesAsText();\n+    testRunner.waitUntilDone();\n+    testRunner.setXSSAuditorEnabled(true);\n+}\n+\n+function notify() {\n+  if (window.testRunner) {\n+    setTimeout(testRunner.notifyDone.bind(testRunner), 0);\n+  }\n+}\n+</script>\n+</head>\n+<body>\n+<p>This tests that the X-XSS-Protection reports are sent out properly</p>\n+<iframe onload=\""notify()\"" name=\""frame\"" src=\""http://127.0.0.1:8000/security/xssAuditor/resources/echo-intertag.pl?test=report-script-tag.html&echo-report=1&enable-report-cross-origin=1&q=<script>alert(String.fromCharCode(0x58,0x53,0x53))</script><p>If you see this message, no JavaScript alert(), and not dump of a report is displayed below, then the test PASSED.</p>\"">\n+</iframe>\n+</body>\n+</html>""}<_**next**_>{""sha"": ""d3cb1524857b6ca8557df334e6feeb380123f922"", ""filename"": ""third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/resources/echo-intertag.pl"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 0, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/resources/echo-intertag.pl"", ""raw_url"": ""https://github.com/chromium/chromium/raw/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/resources/echo-intertag.pl"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/http/tests/security/xssAuditor/resources/echo-intertag.pl?ref=0da6dcdbe8e34740133773d20cc466b89d399d0a"", ""patch"": ""@@ -13,6 +13,8 @@\n     print \""X-XSS-Protection: 1; mode=block\\n\"";\n } elsif ($cgi->param('enable-report')) {\n     print \""X-XSS-Protection: 1; report=/security/contentSecurityPolicy/resources/save-report.php?test=\"" . $cgi->param('test') . \""\\n\"";\n+} elsif ($cgi->param('enable-report-cross-origin')) {\n+    print \""X-XSS-Protection: 1; report=http://localhost:8080/security/contentSecurityPolicy/resources/save-report.php?test=\"" . $cgi->param('test') . \""\\n\"";\n } elsif ($cgi->param('enable-full-block-report')) {\n     print \""X-XSS-Protection: 1; mode=block; report=/security/contentSecurityPolicy/resources/save-report.php?test=\"" . $cgi->param('test') . \""\\n\"";\n } elsif ($cgi->param('valid-header')) {""}<_**next**_>{""sha"": ""4005f3b4c046b0d63dd7c2dfdc71790ee4849bdf"", ""filename"": ""third_party/WebKit/Source/core/html/parser/XSSAuditor.cpp"", ""status"": ""modified"", ""additions"": 7, ""deletions"": 0, ""changes"": 7, ""blob_url"": ""https://github.com/chromium/chromium/blob/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/Source/core/html/parser/XSSAuditor.cpp"", ""raw_url"": ""https://github.com/chromium/chromium/raw/0da6dcdbe8e34740133773d20cc466b89d399d0a/third_party/WebKit/Source/core/html/parser/XSSAuditor.cpp"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/Source/core/html/parser/XSSAuditor.cpp?ref=0da6dcdbe8e34740133773d20cc466b89d399d0a"", ""patch"": ""@@ -425,6 +425,13 @@ void XSSAuditor::Init(Document* document,\n          xss_protection_header == kBlockReflectedXSS) &&\n         !report_url.IsEmpty()) {\n       xss_protection_report_url = document->CompleteURL(report_url);\n+      if (!SecurityOrigin::Create(xss_protection_report_url)\n+               ->IsSameSchemeHostPort(document->GetSecurityOrigin())) {\n+        error_details =\n+            \""reporting URL is not same scheme, host, and port as page\"";\n+        xss_protection_header = kReflectedXSSInvalid;\n+        xss_protection_report_url = KURL();\n+      }\n       if (MixedContentChecker::IsMixedContent(document->GetSecurityOrigin(),\n                                               xss_protection_report_url)) {\n         error_details = \""insecure reporting URL for secure page\"";""}","void XSSAuditor::Init(Document* document,
                      XSSAuditorDelegate* auditor_delegate) {
  DCHECK(IsMainThread());
  if (state_ != kUninitialized)
    return;
  state_ = kFilteringTokens;

  if (Settings* settings = document->GetSettings())
    is_enabled_ = settings->GetXSSAuditorEnabled();

  if (!is_enabled_)
    return;

  document_url_ = document->Url().Copy();

  if (!document->GetFrame()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.IsEmpty()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.ProtocolIsData()) {
    is_enabled_ = false;
    return;
  }

  if (document->Encoding().IsValid())
    encoding_ = document->Encoding();

  if (DocumentLoader* document_loader =
          document->GetFrame()->Loader().GetDocumentLoader()) {
    const AtomicString& header_value =
        document_loader->GetResponse().HttpHeaderField(
            HTTPNames::X_XSS_Protection);
    String error_details;
    unsigned error_position = 0;
    String report_url;
    KURL xss_protection_report_url;

    ReflectedXSSDisposition xss_protection_header = ParseXSSProtectionHeader(
        header_value, error_details, error_position, report_url);

    if (xss_protection_header == kAllowReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorDisabled);
    else if (xss_protection_header == kFilterReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledFilter);
    else if (xss_protection_header == kBlockReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledBlock);
    else if (xss_protection_header == kReflectedXSSInvalid)
      UseCounter::Count(*document, WebFeature::kXSSAuditorInvalid);

    did_send_valid_xss_protection_header_ =
        xss_protection_header != kReflectedXSSUnset &&
        xss_protection_header != kReflectedXSSInvalid;
    if ((xss_protection_header == kFilterReflectedXSS ||
          xss_protection_header == kBlockReflectedXSS) &&
         !report_url.IsEmpty()) {
       xss_protection_report_url = document->CompleteURL(report_url);
      if (!SecurityOrigin::Create(xss_protection_report_url)
               ->IsSameSchemeHostPort(document->GetSecurityOrigin())) {
        error_details =
            ""reporting URL is not same scheme, host, and port as page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
       if (MixedContentChecker::IsMixedContent(document->GetSecurityOrigin(),
                                               xss_protection_report_url)) {
         error_details = ""insecure reporting URL for secure page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
    }
    if (xss_protection_header == kReflectedXSSInvalid) {
      document->AddConsoleMessage(ConsoleMessage::Create(
          kSecurityMessageSource, kErrorMessageLevel,
          ""Error parsing header X-XSS-Protection: "" + header_value + "": "" +
              error_details + "" at character position "" +
              String::Format(""%u"", error_position) +
              "". The default protections will be applied.""));
    }

    xss_protection_ = xss_protection_header;
    if (xss_protection_ == kReflectedXSSInvalid ||
        xss_protection_ == kReflectedXSSUnset) {
      xss_protection_ = kBlockReflectedXSS;
    }

    if (auditor_delegate)
      auditor_delegate->SetReportURL(xss_protection_report_url.Copy());

    EncodedFormData* http_body = document_loader->GetRequest().HttpBody();
    if (http_body && !http_body->IsEmpty())
      http_body_as_string_ = http_body->FlattenToString();
  }

  SetEncoding(encoding_);
}
","void XSSAuditor::Init(Document* document,
                      XSSAuditorDelegate* auditor_delegate) {
  DCHECK(IsMainThread());
  if (state_ != kUninitialized)
    return;
  state_ = kFilteringTokens;

  if (Settings* settings = document->GetSettings())
    is_enabled_ = settings->GetXSSAuditorEnabled();

  if (!is_enabled_)
    return;

  document_url_ = document->Url().Copy();

  if (!document->GetFrame()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.IsEmpty()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.ProtocolIsData()) {
    is_enabled_ = false;
    return;
  }

  if (document->Encoding().IsValid())
    encoding_ = document->Encoding();

  if (DocumentLoader* document_loader =
          document->GetFrame()->Loader().GetDocumentLoader()) {
    const AtomicString& header_value =
        document_loader->GetResponse().HttpHeaderField(
            HTTPNames::X_XSS_Protection);
    String error_details;
    unsigned error_position = 0;
    String report_url;
    KURL xss_protection_report_url;

    ReflectedXSSDisposition xss_protection_header = ParseXSSProtectionHeader(
        header_value, error_details, error_position, report_url);

    if (xss_protection_header == kAllowReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorDisabled);
    else if (xss_protection_header == kFilterReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledFilter);
    else if (xss_protection_header == kBlockReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledBlock);
    else if (xss_protection_header == kReflectedXSSInvalid)
      UseCounter::Count(*document, WebFeature::kXSSAuditorInvalid);

    did_send_valid_xss_protection_header_ =
        xss_protection_header != kReflectedXSSUnset &&
        xss_protection_header != kReflectedXSSInvalid;
    if ((xss_protection_header == kFilterReflectedXSS ||
          xss_protection_header == kBlockReflectedXSS) &&
         !report_url.IsEmpty()) {
       xss_protection_report_url = document->CompleteURL(report_url);
       if (MixedContentChecker::IsMixedContent(document->GetSecurityOrigin(),
                                               xss_protection_report_url)) {
         error_details = ""insecure reporting URL for secure page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
    }
    if (xss_protection_header == kReflectedXSSInvalid) {
      document->AddConsoleMessage(ConsoleMessage::Create(
          kSecurityMessageSource, kErrorMessageLevel,
          ""Error parsing header X-XSS-Protection: "" + header_value + "": "" +
              error_details + "" at character position "" +
              String::Format(""%u"", error_position) +
              "". The default protections will be applied.""));
    }

    xss_protection_ = xss_protection_header;
    if (xss_protection_ == kReflectedXSSInvalid ||
        xss_protection_ == kReflectedXSSUnset) {
      xss_protection_ = kBlockReflectedXSS;
    }

    if (auditor_delegate)
      auditor_delegate->SetReportURL(xss_protection_report_url.Copy());

    EncodedFormData* http_body = document_loader->GetRequest().HttpBody();
    if (http_body && !http_body->IsEmpty())
      http_body_as_string_ = http_body->FlattenToString();
  }

  SetEncoding(encoding_);
}
",C,"      if (!SecurityOrigin::Create(xss_protection_report_url)
               ->IsSameSchemeHostPort(document->GetSecurityOrigin())) {
        error_details =
            ""reporting URL is not same scheme, host, and port as page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
",,,"@@ -425,6 +425,13 @@ void XSSAuditor::Init(Document* document,
          xss_protection_header == kBlockReflectedXSS) &&
         !report_url.IsEmpty()) {
       xss_protection_report_url = document->CompleteURL(report_url);
+      if (!SecurityOrigin::Create(xss_protection_report_url)
+               ->IsSameSchemeHostPort(document->GetSecurityOrigin())) {
+        error_details =
+            ""reporting URL is not same scheme, host, and port as page"";
+        xss_protection_header = kReflectedXSSInvalid;
+        xss_protection_report_url = KURL();
+      }
       if (MixedContentChecker::IsMixedContent(document->GetSecurityOrigin(),
                                               xss_protection_report_url)) {
         error_details = ""insecure reporting URL for secure page"";",Chrome,0da6dcdbe8e34740133773d20cc466b89d399d0a,c99c6fa1c62d04fb36be582fae389b9f34c2c089,1,"void XSSAuditor::Init(Document* document,
                      XSSAuditorDelegate* auditor_delegate) {
  DCHECK(IsMainThread());
  if (state_ != kUninitialized)
    return;
  state_ = kFilteringTokens;

  if (Settings* settings = document->GetSettings())
    is_enabled_ = settings->GetXSSAuditorEnabled();

  if (!is_enabled_)
    return;

  document_url_ = document->Url().Copy();

  // In theory, the Document could have detached from the LocalFrame after the
  // XSSAuditor was constructed.
  if (!document->GetFrame()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.IsEmpty()) {
    // The URL can be empty when opening a new browser window or calling
    // window.open("""").
    is_enabled_ = false;
    return;
  }

  if (document_url_.ProtocolIsData()) {
    is_enabled_ = false;
    return;
  }

  if (document->Encoding().IsValid())
    encoding_ = document->Encoding();

  if (DocumentLoader* document_loader =
          document->GetFrame()->Loader().GetDocumentLoader()) {
    const AtomicString& header_value =
        document_loader->GetResponse().HttpHeaderField(
            HTTPNames::X_XSS_Protection);
    String error_details;
    unsigned error_position = 0;
    String report_url;
    KURL xss_protection_report_url;

    ReflectedXSSDisposition xss_protection_header = ParseXSSProtectionHeader(
        header_value, error_details, error_position, report_url);

    if (xss_protection_header == kAllowReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorDisabled);
    else if (xss_protection_header == kFilterReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledFilter);
    else if (xss_protection_header == kBlockReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledBlock);
    else if (xss_protection_header == kReflectedXSSInvalid)
      UseCounter::Count(*document, WebFeature::kXSSAuditorInvalid);

    did_send_valid_xss_protection_header_ =
        xss_protection_header != kReflectedXSSUnset &&
        xss_protection_header != kReflectedXSSInvalid;
    if ((xss_protection_header == kFilterReflectedXSS ||
          xss_protection_header == kBlockReflectedXSS) &&
         !report_url.IsEmpty()) {
       xss_protection_report_url = document->CompleteURL(report_url);
//fix_flaw_line_below:
//      if (!SecurityOrigin::Create(xss_protection_report_url)
//fix_flaw_line_below:
//               ->IsSameSchemeHostPort(document->GetSecurityOrigin())) {
//fix_flaw_line_below:
//        error_details =
//fix_flaw_line_below:
//            ""reporting URL is not same scheme, host, and port as page"";
//fix_flaw_line_below:
//        xss_protection_header = kReflectedXSSInvalid;
//fix_flaw_line_below:
//        xss_protection_report_url = KURL();
//fix_flaw_line_below:
//      }
       if (MixedContentChecker::IsMixedContent(document->GetSecurityOrigin(),
                                               xss_protection_report_url)) {
         error_details = ""insecure reporting URL for secure page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
    }
    if (xss_protection_header == kReflectedXSSInvalid) {
      document->AddConsoleMessage(ConsoleMessage::Create(
          kSecurityMessageSource, kErrorMessageLevel,
          ""Error parsing header X-XSS-Protection: "" + header_value + "": "" +
              error_details + "" at character position "" +
              String::Format(""%u"", error_position) +
              "". The default protections will be applied.""));
    }

    xss_protection_ = xss_protection_header;
    if (xss_protection_ == kReflectedXSSInvalid ||
        xss_protection_ == kReflectedXSSUnset) {
      xss_protection_ = kBlockReflectedXSS;
    }

    if (auditor_delegate)
      auditor_delegate->SetReportURL(xss_protection_report_url.Copy());

    EncodedFormData* http_body = document_loader->GetRequest().HttpBody();
    if (http_body && !http_body->IsEmpty())
      http_body_as_string_ = http_body->FlattenToString();
  }

  SetEncoding(encoding_);
}
",186670,"void XSSAuditor::Init(Document* document,
                      XSSAuditorDelegate* auditor_delegate) {
  DCHECK(IsMainThread());
  if (state_ != kUninitialized)
    return;
  state_ = kFilteringTokens;

  if (Settings* settings = document->GetSettings())
    is_enabled_ = settings->GetXSSAuditorEnabled();

  if (!is_enabled_)
    return;

  document_url_ = document->Url().Copy();

  if (!document->GetFrame()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.IsEmpty()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.ProtocolIsData()) {
    is_enabled_ = false;
    return;
  }

  if (document->Encoding().IsValid())
    encoding_ = document->Encoding();

  if (DocumentLoader* document_loader =
          document->GetFrame()->Loader().GetDocumentLoader()) {
    const AtomicString& header_value =
        document_loader->GetResponse().HttpHeaderField(
            HTTPNames::X_XSS_Protection);
    String error_details;
    unsigned error_position = 0;
    String report_url;
    KURL xss_protection_report_url;

    ReflectedXSSDisposition xss_protection_header = ParseXSSProtectionHeader(
        header_value, error_details, error_position, report_url);

    if (xss_protection_header == kAllowReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorDisabled);
    else if (xss_protection_header == kFilterReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledFilter);
    else if (xss_protection_header == kBlockReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledBlock);
    else if (xss_protection_header == kReflectedXSSInvalid)
      UseCounter::Count(*document, WebFeature::kXSSAuditorInvalid);

    did_send_valid_xss_protection_header_ =
        xss_protection_header != kReflectedXSSUnset &&
        xss_protection_header != kReflectedXSSInvalid;
    if ((xss_protection_header == kFilterReflectedXSS ||
          xss_protection_header == kBlockReflectedXSS) &&
         !report_url.IsEmpty()) {
       xss_protection_report_url = document->CompleteURL(report_url);
       if (MixedContentChecker::IsMixedContent(document->GetSecurityOrigin(),
                                               xss_protection_report_url)) {
         error_details = ""insecure reporting URL for secure page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
    }
    if (xss_protection_header == kReflectedXSSInvalid) {
      document->AddConsoleMessage(ConsoleMessage::Create(
          kSecurityMessageSource, kErrorMessageLevel,
          ""Error parsing header X-XSS-Protection: "" + header_value + "": "" +
              error_details + "" at character position "" +
              String::Format(""%u"", error_position) +
              "". The default protections will be applied.""));
    }

    xss_protection_ = xss_protection_header;
    if (xss_protection_ == kReflectedXSSInvalid ||
        xss_protection_ == kReflectedXSSUnset) {
      xss_protection_ = kBlockReflectedXSS;
    }

    if (auditor_delegate)
      auditor_delegate->SetReportURL(xss_protection_report_url.Copy());

    EncodedFormData* http_body = document_loader->GetRequest().HttpBody();
    if (http_body && !http_body->IsEmpty())
      http_body_as_string_ = http_body->FlattenToString();
  }

  SetEncoding(encoding_);
}
","void XSSAuditor::Init(Document* document,
                      XSSAuditorDelegate* auditor_delegate) {
  DCHECK(IsMainThread());
  if (state_ != kUninitialized)
    return;
  state_ = kFilteringTokens;

  if (Settings* settings = document->GetSettings())
    is_enabled_ = settings->GetXSSAuditorEnabled();

  if (!is_enabled_)
    return;

  document_url_ = document->Url().Copy();

  if (!document->GetFrame()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.IsEmpty()) {
    is_enabled_ = false;
    return;
  }

  if (document_url_.ProtocolIsData()) {
    is_enabled_ = false;
    return;
  }

  if (document->Encoding().IsValid())
    encoding_ = document->Encoding();

  if (DocumentLoader* document_loader =
          document->GetFrame()->Loader().GetDocumentLoader()) {
    const AtomicString& header_value =
        document_loader->GetResponse().HttpHeaderField(
            HTTPNames::X_XSS_Protection);
    String error_details;
    unsigned error_position = 0;
    String report_url;
    KURL xss_protection_report_url;

    ReflectedXSSDisposition xss_protection_header = ParseXSSProtectionHeader(
        header_value, error_details, error_position, report_url);

    if (xss_protection_header == kAllowReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorDisabled);
    else if (xss_protection_header == kFilterReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledFilter);
    else if (xss_protection_header == kBlockReflectedXSS)
      UseCounter::Count(*document, WebFeature::kXSSAuditorEnabledBlock);
    else if (xss_protection_header == kReflectedXSSInvalid)
      UseCounter::Count(*document, WebFeature::kXSSAuditorInvalid);

    did_send_valid_xss_protection_header_ =
        xss_protection_header != kReflectedXSSUnset &&
        xss_protection_header != kReflectedXSSInvalid;
    if ((xss_protection_header == kFilterReflectedXSS ||
          xss_protection_header == kBlockReflectedXSS) &&
         !report_url.IsEmpty()) {
       xss_protection_report_url = document->CompleteURL(report_url);
      if (!SecurityOrigin::Create(xss_protection_report_url)
               ->IsSameSchemeHostPort(document->GetSecurityOrigin())) {
        error_details =
            ""reporting URL is not same scheme, host, and port as page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
       if (MixedContentChecker::IsMixedContent(document->GetSecurityOrigin(),
                                               xss_protection_report_url)) {
         error_details = ""insecure reporting URL for secure page"";
        xss_protection_header = kReflectedXSSInvalid;
        xss_protection_report_url = KURL();
      }
    }
    if (xss_protection_header == kReflectedXSSInvalid) {
      document->AddConsoleMessage(ConsoleMessage::Create(
          kSecurityMessageSource, kErrorMessageLevel,
          ""Error parsing header X-XSS-Protection: "" + header_value + "": "" +
              error_details + "" at character position "" +
              String::Format(""%u"", error_position) +
              "". The default protections will be applied.""));
    }

    xss_protection_ = xss_protection_header;
    if (xss_protection_ == kReflectedXSSInvalid ||
        xss_protection_ == kReflectedXSSUnset) {
      xss_protection_ = kBlockReflectedXSS;
    }

    if (auditor_delegate)
      auditor_delegate->SetReportURL(xss_protection_report_url.Copy());

    EncodedFormData* http_body = document_loader->GetRequest().HttpBody();
    if (http_body && !http_body->IsEmpty())
      http_body_as_string_ = http_body->FlattenToString();
  }

  SetEncoding(encoding_);
}
","The `XSSAuditor::Init` function initializes the XSS auditor for a given document, ensuring it operates on the main thread and is in an uninitialized state. It checks if the XSS auditor is enabled based on document settings and validates the document's URL and frame. The function parses the `X-XSS-Protection` HTTP header to determine the appropriate XSS protection strategy, counting usage metrics accordingly. It handles potential errors in header parsing, sets a reporting URL if applicable, and processes any HTTP body data. Finally, it sets the document's encoding, preparing the auditor for subsequent operations.","The code initializes an XSS auditor for a document, ensuring it runs on the main thread and is in the correct state. It checks if the auditor is enabled based on document settings and validates the document's URL and frame. The code then analyzes a specific HTTP header to determine the appropriate XSS protection strategy, while also counting usage metrics. It handles any errors in header parsing and sets a reporting URL if necessary. Additionally, it processes any HTTP body data and configures the document's encoding, preparing the auditor for its intended functionality.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, arises from the handling of the `X-XSS-Protection` header. In the vulnerable code, the auditor did not adequately validate the reporting URL, which could allow an attacker to inject malicious scripts if the URL was improperly formatted or pointed to an untrusted source. The fixed code enhances security by ensuring that the reporting URL matches the scheme, host, and port of the document's security origin, thereby preventing potential cross-site scripting attacks by rejecting invalid or mixed content URLs.","The vulnerability identified as CWE-79, which pertains to improper neutralization of input during web page generation, stems from inadequate validation of a reporting URL associated with XSS protection. In the vulnerable code, the lack of checks allowed potentially malicious URLs to be accepted, which could lead to cross-site scripting attacks. The fixed code addresses this issue by implementing strict validation to ensure that the reporting URL matches the security context of the document, thereby preventing the acceptance of untrusted or improperly formatted URLs and enhancing overall security against such injection attacks.","The vulnerability was fixed by adding validation checks for the reporting URL to ensure it aligns with the document's security origin. In the updated code, the `SecurityOrigin::Create` function is used to verify that the reporting URL shares the same scheme, host, and port as the document's security origin. Additionally, the code checks for mixed content using the `MixedContentChecker::IsMixedContent` function to prevent insecure reporting URLs from being used on secure pages. These enhancements ensure that only trusted URLs are accepted, significantly reducing the risk of cross-site scripting attacks.","The vulnerability was fixed by implementing strict validation for the reporting URL associated with XSS protection. The updated code ensures that the reporting URL matches the security context of the document, specifically checking that it shares the same scheme, host, and port as the document's origin. Additionally, it includes checks to prevent the use of insecure URLs on secure pages. These measures effectively restrict the acceptance of potentially malicious or improperly formatted URLs, thereby enhancing the overall security and reducing the risk of cross-site scripting attacks.","4,4","4, 4","4, 5","4,4"
8,8,186873,186873,,Remote,Not required,,CVE-2018-6070,https://www.cvedetails.com/cve/CVE-2018-6070/,CWE-79,Medium,,Partial,,2018-11-14,4.3,Lack of CSP enforcement on WebUI pages in Bink in Google Chrome prior to 65.0.3325.146 allowed an attacker who convinced a user to install a malicious extension to bypass content security policy via a crafted Chrome Extension.,2019-10-02,XSS Bypass ,0,https://github.com/chromium/chromium/commit/f283cdf7c850f3db923a5303c7e01bd929d4117f,f283cdf7c850f3db923a5303c7e01bd929d4117f,"Move Initialize() to VaapiImageDecoder parent class.

This CL moves the implementation of Initialize() to VaapiImageDecoder,
since it is common to all implementing classes.

Bug: 877694
Test: jpeg_decode_accelerator_unittest
Change-Id: Ic99601953ae1c7a572ba8a0b0bf43675b2b0969d
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1654249
Commit-Queue: Gil Dekel <gildekel@chromium.org>
Reviewed-by: Andres Calderon Jaramillo <andrescj@chromium.org>
Reviewed-by: Miguel Casas <mcasas@chromium.org>
Cr-Commit-Position: refs/heads/master@{#668645}",8,media/gpu/vaapi/vaapi_jpeg_decoder.cc,"{""sha"": ""7671f22290878c00f91af2e1d87d9de0140ae980"", ""filename"": ""media/gpu/vaapi/OWNERS"", ""status"": ""modified"", ""additions"": 3, ""deletions"": 0, ""changes"": 3, ""blob_url"": ""https://github.com/chromium/chromium/blob/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/OWNERS"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/OWNERS"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/media/gpu/vaapi/OWNERS?ref=f283cdf7c850f3db923a5303c7e01bd929d4117f"", ""patch"": ""@@ -4,3 +4,6 @@ posciak@chromium.org\n \n # (M)JPEG related stuff\n per-file *jpeg*=andrescj@chromium.org\n+\n+# General VA-API decoding related stuff\n+per-file *image_decoder*=andrescj@chromium.org""}<_**next**_>{""sha"": ""5bafbd695cceeb07b4e15d0812f1e3ecfb60573a"", ""filename"": ""media/gpu/vaapi/vaapi_image_decoder.cc"", ""status"": ""modified"", ""additions"": 24, ""deletions"": 0, ""changes"": 24, ""blob_url"": ""https://github.com/chromium/chromium/blob/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_image_decoder.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_image_decoder.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/media/gpu/vaapi/vaapi_image_decoder.cc?ref=f283cdf7c850f3db923a5303c7e01bd929d4117f"", ""patch"": ""@@ -6,13 +6,37 @@\n \n #include <va/va.h>\n \n+#include \""base/logging.h\""\n #include \""media/gpu/vaapi/vaapi_wrapper.h\""\n \n namespace media {\n \n+namespace {\n+\n+VAProfile ConvertToVAProfile(VaapiImageDecoder::Type type) {\n+  switch (type) {\n+    case VaapiImageDecoder::Type::kJpeg:\n+      return VAProfileJPEGBaseline;\n+    case VaapiImageDecoder::Type::kWebP:\n+      return VAProfileVP8Version0_3;\n+    default:\n+      NOTREACHED() << \""Undefined Type value\"";\n+      return VAProfileNone;\n+  }\n+}\n+\n+}  // namespace\n+\n VaapiImageDecoder::VaapiImageDecoder()\n     : va_surface_id_(VA_INVALID_SURFACE), va_rt_format_(kInvalidVaRtFormat) {}\n \n VaapiImageDecoder::~VaapiImageDecoder() = default;\n \n+bool VaapiImageDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {\n+  const VAProfile va_profile = ConvertToVAProfile(GetType());\n+  vaapi_wrapper_ =\n+      VaapiWrapper::Create(VaapiWrapper::kDecode, va_profile, error_uma_cb);\n+  return !!vaapi_wrapper_;\n+}\n+\n }  // namespace media""}<_**next**_>{""sha"": ""68eaf26e7e53f695f831bf805696d423cb2da451"", ""filename"": ""media/gpu/vaapi/vaapi_image_decoder.h"", ""status"": ""modified"", ""additions"": 12, ""deletions"": 3, ""changes"": 15, ""blob_url"": ""https://github.com/chromium/chromium/blob/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_image_decoder.h"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_image_decoder.h"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/media/gpu/vaapi/vaapi_image_decoder.h?ref=f283cdf7c850f3db923a5303c7e01bd929d4117f"", ""patch"": ""@@ -50,11 +50,17 @@ enum class VaapiImageDecodeStatus : uint32_t {\n // more implementing classes are added (e.g. VaapiWebPDecoder).\n class VaapiImageDecoder {\n  public:\n+  // Type of image decoder.\n+  enum class Type {\n+    kJpeg,\n+    kWebP,\n+  };\n+\n   virtual ~VaapiImageDecoder();\n \n-  // Initializes |vaapi_wrapper_| in kDecode mode with the appropriate VAAPI\n-  // profile and |error_uma_cb| for error reporting.\n-  virtual bool Initialize(const base::RepeatingClosure& error_uma_cb) = 0;\n+  // Uses GetType() to initialize |vaapi_wrapper_| in kDecode mode with the\n+  // appropriate VAAPI profile and |error_uma_cb| for error reporting.\n+  bool Initialize(const base::RepeatingClosure& error_uma_cb);\n \n   // Decodes a picture. It will fill VA-API parameters and call the\n   // corresponding VA-API methods according to the image in |encoded_image|.\n@@ -66,6 +72,9 @@ class VaapiImageDecoder {\n       base::span<const uint8_t> encoded_image,\n       VaapiImageDecodeStatus* status) = 0;\n \n+  // Returns the type of the current decoder.\n+  virtual Type GetType() const = 0;\n+\n  protected:\n   VaapiImageDecoder();\n ""}<_**next**_>{""sha"": ""53b26a84045c8af0fb54071850b5be48e0bad649"", ""filename"": ""media/gpu/vaapi/vaapi_jpeg_decoder.cc"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 10, ""changes"": 14, ""blob_url"": ""https://github.com/chromium/chromium/blob/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_jpeg_decoder.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_jpeg_decoder.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/media/gpu/vaapi/vaapi_jpeg_decoder.cc?ref=f283cdf7c850f3db923a5303c7e01bd929d4117f"", ""patch"": ""@@ -217,16 +217,6 @@ VaapiJpegDecoder::~VaapiJpegDecoder() {\n   }\n }\n \n-bool VaapiJpegDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {\n-  vaapi_wrapper_ = VaapiWrapper::Create(VaapiWrapper::kDecode,\n-                                        VAProfileJPEGBaseline, error_uma_cb);\n-  if (!vaapi_wrapper_) {\n-    VLOGF(1) << \""Failed initializing VAAPI\"";\n-    return false;\n-  }\n-  return true;\n-}\n-\n scoped_refptr<VASurface> VaapiJpegDecoder::Decode(\n     base::span<const uint8_t> encoded_image,\n     VaapiImageDecodeStatus* status) {\n@@ -342,6 +332,10 @@ scoped_refptr<VASurface> VaapiJpegDecoder::Decode(\n                                          base::DoNothing() /* release_cb */);\n }\n \n+VaapiImageDecoder::Type VaapiJpegDecoder::GetType() const {\n+  return VaapiImageDecoder::Type::kJpeg;\n+}\n+\n std::unique_ptr<ScopedVAImage> VaapiJpegDecoder::GetImage(\n     uint32_t preferred_image_fourcc,\n     VaapiImageDecodeStatus* status) {""}<_**next**_>{""sha"": ""270a7481b9e75f7c4ce657b5c84b6a5d059c12e5"", ""filename"": ""media/gpu/vaapi/vaapi_jpeg_decoder.h"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_jpeg_decoder.h"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f283cdf7c850f3db923a5303c7e01bd929d4117f/media/gpu/vaapi/vaapi_jpeg_decoder.h"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/media/gpu/vaapi/vaapi_jpeg_decoder.h?ref=f283cdf7c850f3db923a5303c7e01bd929d4117f"", ""patch"": ""@@ -30,9 +30,9 @@ class VaapiJpegDecoder : public VaapiImageDecoder {\n   ~VaapiJpegDecoder() override;\n \n   // VaapiImageDecoder implementation.\n-  bool Initialize(const base::RepeatingClosure& error_uma_cb) override;\n   scoped_refptr<VASurface> Decode(base::span<const uint8_t> encoded_image,\n                                   VaapiImageDecodeStatus* status) override;\n+  Type GetType() const override;\n \n   // Get the decoded data from the last Decode() call as a ScopedVAImage. The\n   // VAImage's format will be either |preferred_image_fourcc| if the conversion""}","bool VaapiJpegDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {
","bool VaapiJpegDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {
  vaapi_wrapper_ = VaapiWrapper::Create(VaapiWrapper::kDecode,
                                        VAProfileJPEGBaseline, error_uma_cb);
  if (!vaapi_wrapper_) {
    VLOGF(1) << ""Failed initializing VAAPI"";
    return false;
  }
  return true;
}
",C,,"  vaapi_wrapper_ = VaapiWrapper::Create(VaapiWrapper::kDecode,
                                        VAProfileJPEGBaseline, error_uma_cb);
  if (!vaapi_wrapper_) {
    VLOGF(1) << ""Failed initializing VAAPI"";
    return false;
  }
  return true;
}
",,"@@ -217,16 +217,6 @@ VaapiJpegDecoder::~VaapiJpegDecoder() {
   }
 }
 
-bool VaapiJpegDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {
-  vaapi_wrapper_ = VaapiWrapper::Create(VaapiWrapper::kDecode,
-                                        VAProfileJPEGBaseline, error_uma_cb);
-  if (!vaapi_wrapper_) {
-    VLOGF(1) << ""Failed initializing VAAPI"";
-    return false;
-  }
-  return true;
-}
-
 scoped_refptr<VASurface> VaapiJpegDecoder::Decode(
     base::span<const uint8_t> encoded_image,
     VaapiImageDecodeStatus* status) {
@@ -342,6 +332,10 @@ scoped_refptr<VASurface> VaapiJpegDecoder::Decode(
                                          base::DoNothing() /* release_cb */);
 }
 
+VaapiImageDecoder::Type VaapiJpegDecoder::GetType() const {
+  return VaapiImageDecoder::Type::kJpeg;
+}
+
 std::unique_ptr<ScopedVAImage> VaapiJpegDecoder::GetImage(
     uint32_t preferred_image_fourcc,
     VaapiImageDecodeStatus* status) {",Chrome,f283cdf7c850f3db923a5303c7e01bd929d4117f,4f67ec23d9cf3ea7ab718a8dc7cd618674317472,1,"bool VaapiJpegDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {
//flaw_line_below:
  vaapi_wrapper_ = VaapiWrapper::Create(VaapiWrapper::kDecode,
//flaw_line_below:
                                        VAProfileJPEGBaseline, error_uma_cb);
//flaw_line_below:
  if (!vaapi_wrapper_) {
//flaw_line_below:
    VLOGF(1) << ""Failed initializing VAAPI"";
//flaw_line_below:
    return false;
//flaw_line_below:
  }
//flaw_line_below:
  return true;
//flaw_line_below:
}
",186873,"bool VaapiJpegDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {
  vaapi_wrapper_ = VaapiWrapper::Create(VaapiWrapper::kDecode,
                                        VAProfileJPEGBaseline, error_uma_cb);
  if (!vaapi_wrapper_) {
    VLOGF(1) << ""Failed initializing VAAPI"";
    return false;
  }
  return true;
}
","bool VaapiJpegDecoder::Initialize(const base::RepeatingClosure& error_uma_cb) {
","The `Initialize` function in the `VaapiJpegDecoder` class is responsible for setting up a VAAPI (Video Acceleration API) wrapper for JPEG decoding. It attempts to create an instance of `VaapiWrapper` configured for decoding JPEG images using the baseline profile. If the creation of the `vaapi_wrapper_` fails, it logs an error message and returns `false`, indicating unsuccessful initialization. If successful, the function returns `true`, signaling that the decoder is ready for use. Additionally, it accepts a callback function, `error_uma_cb`, which is invoked in case of an error during the initialization process.","The provided code defines a function that initializes a video decoding component specifically for JPEG images. It attempts to create a wrapper that facilitates hardware-accelerated decoding using a specific profile. If the creation of this wrapper is unsuccessful, an error message is logged, and the function indicates failure by returning a boolean value. Conversely, if the initialization is successful, the function confirms readiness by returning a positive boolean value. Additionally, the function accepts a callback that can be triggered in the event of an error during the initialization process, allowing for error handling and reporting.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, often arises from insufficient validation or sanitization of user input, leading to potential cross-site scripting (XSS) attacks. In the context of the provided code, the vulnerability was likely present in how the `error_uma_cb` callback was handled or logged, potentially allowing untrusted input to be executed in a web context. The fixed code emphasizes proper initialization of the decoding component while ensuring that any error handling through the callback is managed securely, thus mitigating the risk of executing malicious input that could compromise the application.","The vulnerability classified as CWE-79, which pertains to improper neutralization of input during web page generation, can occur when user input is not adequately sanitized, allowing for the injection of malicious scripts. In the context of the provided code, the issue likely stemmed from the handling of error callbacks that could process untrusted input, potentially leading to cross-site scripting attacks. The fix involved enhancing the initialization process to ensure that any input or error handling is managed securely, thereby preventing the execution of harmful scripts and safeguarding the application from exploitation through user input.","The vulnerability was fixed by ensuring that the `Initialize` function properly handles the creation of the `vaapi_wrapper_` instance, which is crucial for secure decoding. By implementing a check for the successful creation of the `vaapi_wrapper_`, the code prevents the execution of any subsequent operations that could be influenced by untrusted input. Additionally, the logging of an error message when initialization fails helps to identify potential issues without exposing sensitive information. This approach mitigates the risk of executing malicious input through the `error_uma_cb` callback, thereby enhancing the overall security of the application.","The vulnerability was addressed by implementing a robust validation mechanism during the initialization process, ensuring that any critical components are successfully created before proceeding. This involved adding a check to confirm the successful establishment of the decoding wrapper, which prevents the execution of further operations that could be influenced by untrusted input. Additionally, the logging of error messages upon failure enhances transparency and aids in identifying potential issues without compromising security. Overall, these changes help to mitigate the risk of executing malicious input, thereby strengthening the application's defenses against potential exploitation.","4, 3","3,2","3,4","2, 2"
9,9,186880,186880,,Remote,Not required,,CVE-2018-6076,https://www.cvedetails.com/cve/CVE-2018-6076/,CWE-79,Medium,,Partial,,2018-11-14,4.3,Insufficient encoding of URL fragment identifiers in Blink in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to perform a DOM based XSS attack via a crafted HTML page.,2018-12-19,XSS ,1,https://github.com/chromium/chromium/commit/f8f6ed59949be4451ee2f5443d8a313f102fde60,f8f6ed59949be4451ee2f5443d8a313f102fde60,"Percent-encode UTF8 characters in URL fragment identifiers.

This brings us into line with Firefox, Safari, and the spec.

Bug: 758523
Change-Id: I7e354ab441222d9fd08e45f0e70f91ad4e35fafe
Reviewed-on: https://chromium-review.googlesource.com/668363
Commit-Queue: Mike West <mkwst@chromium.org>
Reviewed-by: Jochen Eisinger <jochen@chromium.org>
Reviewed-by: Andy Paicu <andypaicu@chromium.org>
Cr-Commit-Position: refs/heads/master@{#507481}",3,url/url_canon_etc.cc,"{""sha"": ""fc7148cbdeb0750f0a4a6371d06f512679e0f321"", ""filename"": ""components/url_formatter/elide_url_unittest.cc"", ""status"": ""modified"", ""additions"": 3, ""deletions"": 2, ""changes"": 5, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/components/url_formatter/elide_url_unittest.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/components/url_formatter/elide_url_unittest.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/components/url_formatter/elide_url_unittest.cc?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -338,13 +338,14 @@ TEST(TextEliderTest, TestElisionSpecialCases) {\n \n       // Unescaping.\n       {\""http://www/%E4%BD%A0%E5%A5%BD?q=%E4%BD%A0%E5%A5%BD#\\xe4\\xbd\\xa0\"",\n-       \""www/\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd?q=\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd#\\xe4\\xbd\\xa0\""},\n+       \""www/\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd?q=\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd#\"" +\n+           kEllipsisStr},\n \n       // Invalid unescaping for path. The ref will always be valid UTF-8. We\n       // don't bother to do too many edge cases, since these are handled by the\n       // escaper unittest.\n       {\""http://www/%E4%A0%E5%A5%BD?q=%E4%BD%A0%E5%A5%BD#\\xe4\\xbd\\xa0\"",\n-       \""www/%E4%A0%E5%A5%BD?q=\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd#\\xe4\\xbd\\xa0\""},\n+       \""www/%E4%A0%E5%A5%BD?q=\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd#\"" + kEllipsisStr},\n   };\n \n   RunElisionTest(testcases);""}<_**next**_>{""sha"": ""522cb4576fc3fd45800effb5c5951d8914ef5a3a"", ""filename"": ""components/url_formatter/url_formatter_unittest.cc"", ""status"": ""modified"", ""additions"": 21, ""deletions"": 19, ""changes"": 40, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/components/url_formatter/url_formatter_unittest.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/components/url_formatter/url_formatter_unittest.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/components/url_formatter/url_formatter_unittest.cc?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -762,7 +762,7 @@ TEST(UrlFormatterTest, FormatUrl) {\n \n       {\""With a port number and a reference\"",\n        \""http://www.google.com:8080/#\\xE3\\x82\\xB0\"", default_format_type,\n-       net::UnescapeRule::NORMAL, L\""http://www.google.com:8080/#\\x30B0\"", 7},\n+       net::UnescapeRule::NORMAL, L\""http://www.google.com:8080/#%E3%82%B0\"", 7},\n \n       // -------- IDN tests --------\n       {\""Japanese IDN with ja\"", \""http://xn--l8jvb1ey91xtjb.jp\"",\n@@ -1027,9 +1027,10 @@ TEST(UrlFormatterTest, FormatUrlParsed) {\n                      \""%E3%82%B0/?q=%E3%82%B0#\\xE3\\x82\\xB0\""),\n                 kFormatUrlOmitNothing, net::UnescapeRule::NONE,\n                 &parsed, nullptr, nullptr);\n-  EXPECT_EQ(WideToUTF16(\n-      L\""http://%E3%82%B0:%E3%83%BC@\\x30B0\\x30FC\\x30B0\\x30EB.jp:8080\""\n-      L\""/%E3%82%B0/?q=%E3%82%B0#\\x30B0\""), formatted);\n+  EXPECT_EQ(\n+      WideToUTF16(L\""http://%E3%82%B0:%E3%83%BC@\\x30B0\\x30FC\\x30B0\\x30EB.jp:8080\""\n+                  L\""/%E3%82%B0/?q=%E3%82%B0#%E3%82%B0\""),\n+      formatted);\n   EXPECT_EQ(WideToUTF16(L\""%E3%82%B0\""),\n       formatted.substr(parsed.username.begin, parsed.username.len));\n   EXPECT_EQ(WideToUTF16(L\""%E3%83%BC\""),\n@@ -1042,8 +1043,8 @@ TEST(UrlFormatterTest, FormatUrlParsed) {\n       formatted.substr(parsed.path.begin, parsed.path.len));\n   EXPECT_EQ(WideToUTF16(L\""q=%E3%82%B0\""),\n       formatted.substr(parsed.query.begin, parsed.query.len));\n-  EXPECT_EQ(WideToUTF16(L\""\\x30B0\""),\n-      formatted.substr(parsed.ref.begin, parsed.ref.len));\n+  EXPECT_EQ(WideToUTF16(L\""%E3%82%B0\""),\n+            formatted.substr(parsed.ref.begin, parsed.ref.len));\n \n   // Unescape case.\n   formatted =\n@@ -1052,7 +1053,8 @@ TEST(UrlFormatterTest, FormatUrlParsed) {\n                 kFormatUrlOmitNothing, net::UnescapeRule::NORMAL, &parsed,\n                 nullptr, nullptr);\n   EXPECT_EQ(WideToUTF16(L\""http://\\x30B0:\\x30FC@\\x30B0\\x30FC\\x30B0\\x30EB.jp:8080\""\n-      L\""/\\x30B0/?q=\\x30B0#\\x30B0\""), formatted);\n+                        L\""/\\x30B0/?q=\\x30B0#%E3%82%B0\""),\n+            formatted);\n   EXPECT_EQ(WideToUTF16(L\""\\x30B0\""),\n       formatted.substr(parsed.username.begin, parsed.username.len));\n   EXPECT_EQ(WideToUTF16(L\""\\x30FC\""),\n@@ -1065,8 +1067,8 @@ TEST(UrlFormatterTest, FormatUrlParsed) {\n       formatted.substr(parsed.path.begin, parsed.path.len));\n   EXPECT_EQ(WideToUTF16(L\""q=\\x30B0\""),\n       formatted.substr(parsed.query.begin, parsed.query.len));\n-  EXPECT_EQ(WideToUTF16(L\""\\x30B0\""),\n-      formatted.substr(parsed.ref.begin, parsed.ref.len));\n+  EXPECT_EQ(WideToUTF16(L\""%E3%82%B0\""),\n+            formatted.substr(parsed.ref.begin, parsed.ref.len));\n \n   // Omit_username_password + unescape case.\n   formatted =\n@@ -1075,7 +1077,8 @@ TEST(UrlFormatterTest, FormatUrlParsed) {\n                 kFormatUrlOmitUsernamePassword, net::UnescapeRule::NORMAL,\n                 &parsed, nullptr, nullptr);\n   EXPECT_EQ(WideToUTF16(L\""http://\\x30B0\\x30FC\\x30B0\\x30EB.jp:8080\""\n-      L\""/\\x30B0/?q=\\x30B0#\\x30B0\""), formatted);\n+                        L\""/\\x30B0/?q=\\x30B0#%E3%82%B0\""),\n+            formatted);\n   EXPECT_FALSE(parsed.username.is_valid());\n   EXPECT_FALSE(parsed.password.is_valid());\n   EXPECT_EQ(WideToUTF16(L\""\\x30B0\\x30FC\\x30B0\\x30EB.jp\""),\n@@ -1086,8 +1089,8 @@ TEST(UrlFormatterTest, FormatUrlParsed) {\n       formatted.substr(parsed.path.begin, parsed.path.len));\n   EXPECT_EQ(WideToUTF16(L\""q=\\x30B0\""),\n       formatted.substr(parsed.query.begin, parsed.query.len));\n-  EXPECT_EQ(WideToUTF16(L\""\\x30B0\""),\n-      formatted.substr(parsed.ref.begin, parsed.ref.len));\n+  EXPECT_EQ(WideToUTF16(L\""%E3%82%B0\""),\n+            formatted.substr(parsed.ref.begin, parsed.ref.len));\n \n   // View-source case.\n   formatted =\n@@ -1320,14 +1323,13 @@ TEST(UrlFormatterTest, FormatUrlWithOffsets) {\n       kFormatUrlOmitNothing, net::UnescapeRule::SPACES, unescape_offsets);\n \n   const size_t ref_offsets[] = {\n-    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n-    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, kNpos, kNpos, 32, kNpos, kNpos,\n-    33\n-  };\n+      0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16,\n+      17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n+      34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49};\n   // Unescape to \""http://www.google.com/foo.html#\\x30B0\\x30B0z\"".\n-  CheckAdjustedOffsets(\n-      \""http://www.google.com/foo.html#\\xE3\\x82\\xB0\\xE3\\x82\\xB0z\"",\n-      kFormatUrlOmitNothing, net::UnescapeRule::NORMAL, ref_offsets);\n+  CheckAdjustedOffsets(\""http://www.google.com/foo.html#%E3%82%B0%E3%82%B0z\"",\n+                       kFormatUrlOmitNothing, net::UnescapeRule::NORMAL,\n+                       ref_offsets);\n \n   const size_t omit_http_offsets[] = {\n     0, kNpos, kNpos, kNpos, kNpos, kNpos, kNpos, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,""}<_**next**_>{""sha"": ""7672b12a6db0bdccdb4ea8940cda31afe9969a87"", ""filename"": ""components/url_matcher/url_matcher_unittest.cc"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/components/url_matcher/url_matcher_unittest.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/components/url_matcher/url_matcher_unittest.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/components/url_matcher/url_matcher_unittest.cc?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -168,7 +168,7 @@ TEST(URLMatcherConditionFactoryTest, GURLCharacterSet) {\n   EXPECT_TRUE(base::IsStringASCII(url.host()));\n   EXPECT_TRUE(base::IsStringASCII(url.path()));\n   EXPECT_TRUE(base::IsStringASCII(url.query()));\n-  EXPECT_FALSE(base::IsStringASCII(url.ref()));\n+  EXPECT_TRUE(base::IsStringASCII(url.ref()));\n }\n \n TEST(URLMatcherConditionFactoryTest, Criteria) {""}<_**next**_>{""sha"": ""46aa9d9fba31d9c3fec30db76a89ac7516a52dbc"", ""filename"": ""third_party/WebKit/LayoutTests/external/wpt/url/url-setters-expected.txt"", ""status"": ""renamed"", ""additions"": 7, ""deletions"": 7, ""changes"": 14, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/external/wpt/url/url-setters-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/external/wpt/url/url-setters-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/external/wpt/url/url-setters-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 574 tests; 248 PASS, 326 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 574 tests; 251 PASS, 323 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n FAIL URL: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged. assert_equals: expected \""a://example.net\"" but got \""file:///A://example.net\""\n FAIL <a>: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged. assert_equals: expected \""a://example.net\"" but got \""file:///A://example.net\""\n@@ -565,12 +565,12 @@ FAIL <area>: Setting <https://example.net?lang=en-US#nav>.hash = '#' assert_equa\n PASS URL: Setting <https://example.net?lang=en-US#nav>.hash = ''\n PASS <a>: Setting <https://example.net?lang=en-US#nav>.hash = ''\n PASS <area>: Setting <https://example.net?lang=en-US#nav>.hash = ''\n-FAIL URL: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""file:///A:/#%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9\""\n-FAIL <a>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""file:///A:/#%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9\""\n-FAIL <area>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""file:///A:/#%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9\""\n-FAIL URL: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n-FAIL <a>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n-FAIL <area>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n+FAIL URL: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""file:///A:/#%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n+FAIL <a>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""file:///A:/#%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n+FAIL <area>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""file:///A:/#%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n+PASS URL: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n+PASS <a>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n+PASS <area>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n PASS URL: Setting <javascript:alert(1)>.hash = 'castle'\n PASS <a>: Setting <javascript:alert(1)>.hash = 'castle'\n PASS <area>: Setting <javascript:alert(1)>.hash = 'castle'"", ""previous_filename"": ""third_party/WebKit/LayoutTests/platform/win/external/wpt/url/url-setters-expected.txt""}<_**next**_>{""sha"": ""5422190a3d98f83155961158319fe379a4c4c8b3"", ""filename"": ""third_party/WebKit/LayoutTests/fast/domurl/url-hash.html"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/domurl/url-hash.html"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/domurl/url-hash.html"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/domurl/url-hash.html?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -55,7 +55,7 @@\n     assert_equals(url.hash, '');\n \n     url.hash = '\\udc01\\ud802a';\n-    assert_equals(url.hash, '#\\ufffd\\ufffda');\n+    assert_equals(url.hash, '#%EF%BF%BD%EF%BF%BDa');\n }, 'hash with unmatched surrogates');\n \n </script>""}<_**next**_>{""sha"": ""6fe9c1b320ef5f270baf8b8ea1b45fed616bbcb9"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/anchor-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/anchor-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/anchor-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/anchor-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -4,11 +4,11 @@ On success, you will see a series of \""PASS\"" messages, followed by \""TEST COMPLETE\n \n \n PASS canonicalize('http://www.example.com/#hello, world') is 'http://www.example.com/#hello, world'\n-PASS canonicalize('http://www.example.com/#\u00c2\u00a9') is 'http://www.example.com/#\u00c2\u00a9'\n-PASS canonicalize('http://www.example.com/#\ud800\udf00ss') is 'http://www.example.com/#\ud800\udf00ss'\n+PASS canonicalize('http://www.example.com/#\u00c2\u00a9') is 'http://www.example.com/#%C3%82%C2%A9'\n+PASS canonicalize('http://www.example.com/#\ud800\udf00ss') is 'http://www.example.com/#%F0%90%8C%80ss'\n PASS canonicalize('http://www.example.com/#%41%a') is 'http://www.example.com/#%41%a'\n-PASS canonicalize('http://www.example.com/#\\ud800\\u597d') is 'http://www.example.com/#\\uFFFD\\u597D'\n-FAIL canonicalize('http://www.example.com/#a\\uFDD0') should be http://www.example.com/#a\ufdd0. Was http://www.example.com/#a\ufffd.\n+PASS canonicalize('http://www.example.com/#\\ud800\\u597d') is 'http://www.example.com/#%EF%BF%BD%E5%A5%BD'\n+PASS canonicalize('http://www.example.com/#a\\uFDD0') is 'http://www.example.com/#a%EF%BF%BD'\n PASS canonicalize('http://www.example.com/#asdf#qwer') is 'http://www.example.com/#asdf#qwer'\n PASS canonicalize('http://www.example.com/##asdf') is 'http://www.example.com/##asdf'\n PASS canonicalize('http://www.example.com/#a\\nb\\rc\\td') is 'http://www.example.com/#abcd'""}<_**next**_>{""sha"": ""08654b3fe5287df8683769c414c2b741081d29aa"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/file-http-base-expected.txt"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/file-http-base-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/file-http-base-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/file-http-base-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -20,8 +20,8 @@ PASS canonicalize('file:///foo/bar.txt') is 'file:///foo/bar.txt'\n FAIL canonicalize('FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html') should be file://7:////foo/bar.html. Was file:///7:////foo/bar.html.\n FAIL canonicalize('file:filer/home\\\\me') should be file://filer/home/me. Was file:///filer/home/me.\n FAIL canonicalize('file:///C:/foo/../../../bar.html') should be file:///C:/bar.html. Was file:///bar.html.\n-PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#\\xc2'\n-PASS canonicalize('file:///C:/asdf#\u00c2') is 'file:///C:/asdf#\u00c2'\n+PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#%C3%82'\n+PASS canonicalize('file:///C:/asdf#\u00c2') is 'file:///C:/asdf#%C3%82'\n PASS canonicalize('file:///home/me') is 'file:///home/me'\n PASS canonicalize('file:c:\\\\foo\\\\bar.html') is 'file:///c:/foo/bar.html'\n PASS canonicalize('file:c|//foo\\\\bar.html') is 'file:///c%7C//foo/bar.html'""}<_**next**_>{""sha"": ""2ad64ae1134a8b1bc2c2d40b9a0b3c9aa86ae481"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/script-tests/anchor.js"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/anchor.js"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/anchor.js"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/script-tests/anchor.js?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -2,11 +2,11 @@ description(\""Test URLs that have an anchor.\"");\n \n cases = [ \n   [\""hello, world\"", \""hello, world\""],\n-  [\""\\xc2\\xa9\"", \""\\xc2\\xa9\""],\n-  [\""\\ud800\\udf00ss\"", \""\\ud800\\udf00ss\""],\n+  [\""\\xc2\\xa9\"", \""%C3%82%C2%A9\""],\n+  [\""\\ud800\\udf00ss\"", \""%F0%90%8C%80ss\""],\n   [\""%41%a\"", \""%41%a\""],\n-  [\""\\\\ud800\\\\u597d\"", \""\\\\uFFFD\\\\u597D\""],\n-  [\""a\\\\uFDD0\"", \""a\\\\uFDD0\""],\n+  [\""\\\\ud800\\\\u597d\"", \""%EF%BF%BD%E5%A5%BD\""],\n+  [\""a\\\\uFDD0\"", \""a%EF%BF%BD\""],\n   [\""asdf#qwer\"", \""asdf#qwer\""],\n   [\""#asdf\"", \""#asdf\""],\n   [\""a\\\\nb\\\\rc\\\\td\"", \""abcd\""],""}<_**next**_>{""sha"": ""db9386372bec5d3ed93d777839f8eb630b282b86"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/script-tests/file-http-base.js"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/file-http-base.js"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/file-http-base.js"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/script-tests/file-http-base.js?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -36,8 +36,8 @@ cases = [\n     // Make sure relative paths can't go above the \""C:\""\n     [\""file:///C:/foo/../../../bar.html\"", \""file:///C:/bar.html\""],\n     // Busted refs shouldn't make the whole thing fail.\n-    [\""file:///C:/asdf#\\\\xc2\"", \""file:///C:/asdf#\\\\xc2\""],\n-    [\""file:///C:/asdf#\\xc2\"", \""file:///C:/asdf#\\xc2\""],\n+    [\""file:///C:/asdf#\\\\xc2\"", \""file:///C:/asdf#%C3%82\""],\n+    [\""file:///C:/asdf#\\xc2\"", \""file:///C:/asdf#%C3%82\""],\n \n     // Unix-style paths\n     [\""file:///home/me\"", \""file:///home/me\""],""}<_**next**_>{""sha"": ""0fc34b79acb7eb8b99cf001b750ef13f12f5f3b5"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/script-tests/file.js"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/file.js"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/file.js"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/script-tests/file.js?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -36,7 +36,7 @@ cases = [\n     // Make sure relative paths can't go above the \""C:\""\n     [\""file:///C:/foo/../../../bar.html\"", \""file:///C:/bar.html\""],\n     // Busted refs shouldn't make the whole thing fail.\n-    [\""file:///C:/asdf#\\\\xc2\"", \""file:///C:/asdf#\\\\xef\\\\xbf\\\\xbd\""],\n+    [\""file:///C:/asdf#\\\\xc2\"", \""file:///C:/asdf#%C3%82\""],\n \n     // Unix-style paths\n     [\""file:///home/me\"", \""file:///home/me\""],""}<_**next**_>{""sha"": ""af075a5c2c7ed601137bf0086f8efec691b7e3a7"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/script-tests/segments.js"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/segments.js"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/segments.js"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/script-tests/segments.js?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -98,7 +98,7 @@ cases = [\n   [\""/a%2fc\"",                                  [\""http:\"",\""example.org\"",\""\"",\""/a%2fc\"",\""\"",\""\""]],\n   [\""/a/%2f/c\"",                                [\""http:\"",\""example.org\"",\""\"",\""/a/%2f/c\"",\""\"",\""\""]],\n \n-  [\""#\\u03B2\"",                                 [\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#\\u03B2\""]],\n+  [\""#\\u03B2\"",                                 [\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#%CE%B2\""]],\n ];\n \n var originalBaseURL = canonicalize(\"".\"");""}<_**next**_>{""sha"": ""75e2422895ceeec756f849b049d4af98ab2b9f4c"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/script-tests/standard-url.js"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/standard-url.js"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/script-tests/standard-url.js"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/script-tests/standard-url.js?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -2,7 +2,7 @@ description(\""Canonicalization of standard URLs\"");\n \n cases = [\n   [\""http://www.google.com/foo?bar=baz#\"", \""http://www.google.com/foo?bar=baz#\""],\n-  [\""http://www.google.com/foo?bar=baz# \\u00bb\"", \""http://www.google.com/foo?bar=baz# \\u00bb\""],\n+  [\""http://www.google.com/foo?bar=baz# \\u00bb\"", \""http://www.google.com/foo?bar=baz# %C2%BB\""],\n   [\""http://[www.google.com]/\"", \""http://[www.google.com]/\""],\n   [\""http://www.google.com\"", \""http://www.google.com/\""],\n   // Disabled because whitespace gets treated different in this API.\n@@ -17,7 +17,7 @@ cases = [\n   // Backslashes should get converted to forward slashes.\n   [\""http:\\\\\\\\\\\\\\\\www.google.com\\\\\\\\foo\"", \""http://www.google.com/foo\""],\n   // Busted refs shouldn't make the whole thing fail.\n-  [\""http://www.google.com/asdf#\\\\ud800\"", \""http://www.google.com/asdf#\\\\uFFFD\""],\n+  [\""http://www.google.com/asdf#\\\\ud800\"", \""http://www.google.com/asdf#%EF%BF%BD\""],\n   // Basic port tests.\n   [\""http://foo:80/\"", \""http://foo/\""],\n   [\""http://foo:81/\"", \""http://foo:81/\""],""}<_**next**_>{""sha"": ""94e75e111e55c8e1bee9fd228b004991651df549"", ""filename"": ""third_party/WebKit/LayoutTests/fast/url/segments-expected.txt"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/segments-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/fast/url/segments-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/fast/url/segments-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -97,7 +97,7 @@ PASS segments('/a/b/c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/b/c\"",\""\"",\""\""]'\n PASS segments('/a/ /c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/%20/c\"",\""\"",\""\""]'\n PASS segments('/a%2fc') is '[\""http:\"",\""example.org\"",\""\"",\""/a%2fc\"",\""\"",\""\""]'\n PASS segments('/a/%2f/c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/%2f/c\"",\""\"",\""\""]'\n-PASS segments('#\u03b2') is '[\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#\u03b2\""]'\n+PASS segments('#\u03b2') is '[\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#%CE%B2\""]'\n PASS successfullyParsed is true\n \n TEST COMPLETE""}<_**next**_>{""sha"": ""03c416b46404d8384da523031ab83e060ba769ef"", ""filename"": ""third_party/WebKit/LayoutTests/http/tests/uri/resolve-encoding-relative-expected.txt"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/http/tests/uri/resolve-encoding-relative-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/http/tests/uri/resolve-encoding-relative-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/http/tests/uri/resolve-encoding-relative-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -2,8 +2,8 @@ Test how non-ASCII characters are encoded in relative URLs.\n \n 1 2 3 4 5\n 1. PASS\n-2. FAIL: http://127.0.0.1:8000/uri/resolve-encoding-relative.html#\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\n+2. PASS\n 3. PASS\n 4. PASS\n-5. FAIL: http://127.0.0.1:8000/%D0%BF%D1%83%D1%82%D1%8C?%E7%E0%EF%F0%EE%F1#\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\n+5. PASS\n ""}<_**next**_>{""sha"": ""cc508032946f6bab21f5e3371e4af78bc7646bbb"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 509 tests; 328 PASS, 181 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 509 tests; 331 PASS, 178 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS Parsing: <http://example\t.\\norg> against <http://example.org/foo/bar>\n PASS Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>\n@@ -103,7 +103,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///tmp/mock/c:/foo/bar.html\""\n@@ -162,7 +162,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -268,7 +268,7 @@ FAIL Parsing: <http://\ufdd0zyx.com> against <http://other.com/> assert_equals: fai\n FAIL Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/> assert_equals: failure should set href to input expected \""http://%ef%b7%90zyx.com\"" but got \""http://%EF%BF%BDzyx.com/\""\n FAIL Parsing: <https://\ufffd> against <about:blank> assert_equals: failure should set href to input expected \""https://\\ufffd\"" but got \""https://%EF%BF%BD/\""\n FAIL Parsing: <https://%EF%BF%BD> against <about:blank> assert_equals: failure should set href to input expected \""https://%EF%BF%BD\"" but got \""https://%EF%BF%BD/\""\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code""}<_**next**_>{""sha"": ""cc508032946f6bab21f5e3371e4af78bc7646bbb"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-xhtml-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-xhtml-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-xhtml-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/a-element-xhtml-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 509 tests; 328 PASS, 181 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 509 tests; 331 PASS, 178 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS Parsing: <http://example\t.\\norg> against <http://example.org/foo/bar>\n PASS Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>\n@@ -103,7 +103,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///tmp/mock/c:/foo/bar.html\""\n@@ -162,7 +162,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -268,7 +268,7 @@ FAIL Parsing: <http://\ufdd0zyx.com> against <http://other.com/> assert_equals: fai\n FAIL Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/> assert_equals: failure should set href to input expected \""http://%ef%b7%90zyx.com\"" but got \""http://%EF%BF%BDzyx.com/\""\n FAIL Parsing: <https://\ufffd> against <about:blank> assert_equals: failure should set href to input expected \""https://\\ufffd\"" but got \""https://%EF%BF%BD/\""\n FAIL Parsing: <https://%EF%BF%BD> against <about:blank> assert_equals: failure should set href to input expected \""https://%EF%BF%BD\"" but got \""https://%EF%BF%BD/\""\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code""}<_**next**_>{""sha"": ""6296888f4bb5fe59945fb2d94fa2af24b9a5ed05"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-constructor-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-constructor-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-constructor-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-constructor-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 513 tests; 398 PASS, 115 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 513 tests; 401 PASS, 112 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS URL.searchParams getter\n PASS URL.searchParams updating, clearing\n PASS URL.searchParams setter, invalid values\n@@ -107,7 +107,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///tmp/mock/c:/foo/bar.html\""\n@@ -166,7 +166,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -272,7 +272,7 @@ PASS Parsing: <http://\ufdd0zyx.com> against <http://other.com/>\n PASS Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/>\n PASS Parsing: <https://\ufffd> against <about:blank>\n PASS Parsing: <https://%EF%BF%BD> against <about:blank>\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_throws: function \""function () {\\n          bURL(expected.input, expected.base)\\n        }\"" did not throw\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_throws: function \""function () {\\n          bURL(expected.input, expected.base)\\n        }\"" did not throw""}<_**next**_>{""sha"": ""964048981fb6ae1cdc1bcd5734e523684b3b5c67"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-setters-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-setters-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-setters-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/external/wpt/url/url-setters-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 574 tests; 275 PASS, 299 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 574 tests; 278 PASS, 296 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS URL: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged.\n PASS <a>: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged.\n@@ -568,9 +568,9 @@ PASS <area>: Setting <https://example.net?lang=en-US#nav>.hash = ''\n FAIL URL: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""a:/#%00%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n FAIL <a>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""a:/#%00%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n FAIL <area>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""a:/#%00%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n-FAIL URL: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n-FAIL <a>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n-FAIL <area>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n+PASS URL: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n+PASS <a>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n+PASS <area>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n PASS URL: Setting <javascript:alert(1)>.hash = 'castle'\n PASS <a>: Setting <javascript:alert(1)>.hash = 'castle'\n PASS <area>: Setting <javascript:alert(1)>.hash = 'castle'""}<_**next**_>{""sha"": ""3a61cfad77f97af1358a7a05eb5fe31abeeece0b"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/fast/url/file-expected.txt"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/file-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/file-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/fast/url/file-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -20,7 +20,7 @@ PASS canonicalize('file:///foo/bar.txt') is 'file:///foo/bar.txt'\n FAIL canonicalize('FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html') should be file://7:////foo/bar.html. Was file:///7:////foo/bar.html.\n FAIL canonicalize('file:filer/home\\\\me') should be file://filer/home/me. Was file:///tmp/mock/filer/home/me.\n FAIL canonicalize('file:///C:/foo/../../../bar.html') should be file:///C:/bar.html. Was file:///bar.html.\n-FAIL canonicalize('file:///C:/asdf#\\xc2') should be file:///C:/asdf#\u00ef\u00bf\u00bd. Was file:///C:/asdf#\u00c2.\n+PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#%C3%82'\n PASS canonicalize('file:///home/me') is 'file:///home/me'\n FAIL canonicalize('file:c:\\\\foo\\\\bar.html') should be file:///c:/foo/bar.html. Was file:///tmp/mock/c:/foo/bar.html.\n FAIL canonicalize('file:c|//foo\\\\bar.html') should be file:///c%7C//foo/bar.html. Was file:///tmp/mock/c%7C//foo/bar.html.""}<_**next**_>{""sha"": ""08654b3fe5287df8683769c414c2b741081d29aa"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/fast/url/file-http-base-expected.txt"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/file-http-base-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/file-http-base-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/fast/url/file-http-base-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -20,8 +20,8 @@ PASS canonicalize('file:///foo/bar.txt') is 'file:///foo/bar.txt'\n FAIL canonicalize('FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html') should be file://7:////foo/bar.html. Was file:///7:////foo/bar.html.\n FAIL canonicalize('file:filer/home\\\\me') should be file://filer/home/me. Was file:///filer/home/me.\n FAIL canonicalize('file:///C:/foo/../../../bar.html') should be file:///C:/bar.html. Was file:///bar.html.\n-PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#\\xc2'\n-PASS canonicalize('file:///C:/asdf#\u00c2') is 'file:///C:/asdf#\u00c2'\n+PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#%C3%82'\n+PASS canonicalize('file:///C:/asdf#\u00c2') is 'file:///C:/asdf#%C3%82'\n PASS canonicalize('file:///home/me') is 'file:///home/me'\n PASS canonicalize('file:c:\\\\foo\\\\bar.html') is 'file:///c:/foo/bar.html'\n PASS canonicalize('file:c|//foo\\\\bar.html') is 'file:///c%7C//foo/bar.html'""}<_**next**_>{""sha"": ""94e75e111e55c8e1bee9fd228b004991651df549"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/fast/url/segments-expected.txt"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/segments-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/segments-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/fast/url/segments-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -97,7 +97,7 @@ PASS segments('/a/b/c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/b/c\"",\""\"",\""\""]'\n PASS segments('/a/ /c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/%20/c\"",\""\"",\""\""]'\n PASS segments('/a%2fc') is '[\""http:\"",\""example.org\"",\""\"",\""/a%2fc\"",\""\"",\""\""]'\n PASS segments('/a/%2f/c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/%2f/c\"",\""\"",\""\""]'\n-PASS segments('#\u03b2') is '[\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#\u03b2\""]'\n+PASS segments('#\u03b2') is '[\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#%CE%B2\""]'\n PASS successfullyParsed is true\n \n TEST COMPLETE""}<_**next**_>{""sha"": ""483f690834c953f23acf32886c9ac9fce8778ab5"", ""filename"": ""third_party/WebKit/LayoutTests/platform/linux/fast/url/standard-url-expected.txt"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/standard-url-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/linux/fast/url/standard-url-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/linux/fast/url/standard-url-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -4,7 +4,7 @@ On success, you will see a series of \""PASS\"" messages, followed by \""TEST COMPLETE\n \n \n PASS canonicalize('http://www.google.com/foo?bar=baz#') is 'http://www.google.com/foo?bar=baz#'\n-PASS canonicalize('http://www.google.com/foo?bar=baz# \u00bb') is 'http://www.google.com/foo?bar=baz# \u00bb'\n+PASS canonicalize('http://www.google.com/foo?bar=baz# \u00bb') is 'http://www.google.com/foo?bar=baz# %C2%BB'\n PASS canonicalize('http://[www.google.com]/') is 'http://[www.google.com]/'\n PASS canonicalize('http://www.google.com') is 'http://www.google.com/'\n PASS canonicalize('http:////////user:@google.com:99?foo') is 'http://user@google.com:99/?foo'\n@@ -13,7 +13,7 @@ PASS canonicalize('http://www/foo%2Ehtml') is 'http://www/foo.html'\n PASS canonicalize('http://user:pass@/') is 'http://user:pass@/'\n PASS canonicalize('http://%25DOMAIN:foobar@foodomain.com/') is 'http://%25DOMAIN:foobar@foodomain.com/'\n PASS canonicalize('http:\\\\\\\\www.google.com\\\\foo') is 'http://www.google.com/foo'\n-PASS canonicalize('http://www.google.com/asdf#\\ud800') is 'http://www.google.com/asdf#\\uFFFD'\n+PASS canonicalize('http://www.google.com/asdf#\\ud800') is 'http://www.google.com/asdf#%EF%BF%BD'\n PASS canonicalize('http://foo:80/') is 'http://foo/'\n PASS canonicalize('http://foo:81/') is 'http://foo:81/'\n PASS canonicalize('httpa://foo:80/') is 'httpa://foo:80/'""}<_**next**_>{""sha"": ""cc508032946f6bab21f5e3371e4af78bc7646bbb"", ""filename"": ""third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 509 tests; 328 PASS, 181 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 509 tests; 331 PASS, 178 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS Parsing: <http://example\t.\\norg> against <http://example.org/foo/bar>\n PASS Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>\n@@ -103,7 +103,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///tmp/mock/c:/foo/bar.html\""\n@@ -162,7 +162,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -268,7 +268,7 @@ FAIL Parsing: <http://\ufdd0zyx.com> against <http://other.com/> assert_equals: fai\n FAIL Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/> assert_equals: failure should set href to input expected \""http://%ef%b7%90zyx.com\"" but got \""http://%EF%BF%BDzyx.com/\""\n FAIL Parsing: <https://\ufffd> against <about:blank> assert_equals: failure should set href to input expected \""https://\\ufffd\"" but got \""https://%EF%BF%BD/\""\n FAIL Parsing: <https://%EF%BF%BD> against <about:blank> assert_equals: failure should set href to input expected \""https://%EF%BF%BD\"" but got \""https://%EF%BF%BD/\""\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code""}<_**next**_>{""sha"": ""cc508032946f6bab21f5e3371e4af78bc7646bbb"", ""filename"": ""third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-xhtml-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-xhtml-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-xhtml-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/a-element-xhtml-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 509 tests; 328 PASS, 181 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 509 tests; 331 PASS, 178 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS Parsing: <http://example\t.\\norg> against <http://example.org/foo/bar>\n PASS Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>\n@@ -103,7 +103,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///tmp/mock/c:/foo/bar.html\""\n@@ -162,7 +162,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -268,7 +268,7 @@ FAIL Parsing: <http://\ufdd0zyx.com> against <http://other.com/> assert_equals: fai\n FAIL Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/> assert_equals: failure should set href to input expected \""http://%ef%b7%90zyx.com\"" but got \""http://%EF%BF%BDzyx.com/\""\n FAIL Parsing: <https://\ufffd> against <about:blank> assert_equals: failure should set href to input expected \""https://\\ufffd\"" but got \""https://%EF%BF%BD/\""\n FAIL Parsing: <https://%EF%BF%BD> against <about:blank> assert_equals: failure should set href to input expected \""https://%EF%BF%BD\"" but got \""https://%EF%BF%BD/\""\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code""}<_**next**_>{""sha"": ""6296888f4bb5fe59945fb2d94fa2af24b9a5ed05"", ""filename"": ""third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-constructor-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-constructor-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-constructor-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-constructor-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 513 tests; 398 PASS, 115 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 513 tests; 401 PASS, 112 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS URL.searchParams getter\n PASS URL.searchParams updating, clearing\n PASS URL.searchParams setter, invalid values\n@@ -107,7 +107,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///tmp/mock/c:/foo/bar.html\""\n@@ -166,7 +166,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -272,7 +272,7 @@ PASS Parsing: <http://\ufdd0zyx.com> against <http://other.com/>\n PASS Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/>\n PASS Parsing: <https://\ufffd> against <about:blank>\n PASS Parsing: <https://%EF%BF%BD> against <about:blank>\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_throws: function \""function () {\\n          bURL(expected.input, expected.base)\\n        }\"" did not throw\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_throws: function \""function () {\\n          bURL(expected.input, expected.base)\\n        }\"" did not throw""}<_**next**_>{""sha"": ""964048981fb6ae1cdc1bcd5734e523684b3b5c67"", ""filename"": ""third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-setters-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-setters-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-setters-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/mac/external/wpt/url/url-setters-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 574 tests; 275 PASS, 299 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 574 tests; 278 PASS, 296 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS URL: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged.\n PASS <a>: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged.\n@@ -568,9 +568,9 @@ PASS <area>: Setting <https://example.net?lang=en-US#nav>.hash = ''\n FAIL URL: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""a:/#%00%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n FAIL <a>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""a:/#%00%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n FAIL <area>: Setting <a:/>.hash = '\\0\u0001\t\\n\\r\u001f !\""#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~\u007f\u0080\u0081\u00c9\u00e9' Simple percent-encoding; nuls, tabs, and newlines are removed assert_equals: expected \""a:/#%01%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~%7F%C2%80%C2%81%C3%89%C3%A9\"" but got \""a:/#%00%01%09%0A%0D%1F !\\\""#$%&'()*+,-./09:;<=>?@AZ[\\\\]^_`az{|}~\u007f%C2%80%C2%81%C3%89%C3%A9\""\n-FAIL URL: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n-FAIL <a>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n-FAIL <area>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is assert_equals: expected \""http://example.net/#%c3%89t%C3%A9\"" but got \""http://example.net/#%c3%89t\u00e9\""\n+PASS URL: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n+PASS <a>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n+PASS <area>: Setting <http://example.net>.hash = '%c3%89t\u00e9' Bytes already percent-encoded are left as-is\n PASS URL: Setting <javascript:alert(1)>.hash = 'castle'\n PASS <a>: Setting <javascript:alert(1)>.hash = 'castle'\n PASS <area>: Setting <javascript:alert(1)>.hash = 'castle'""}<_**next**_>{""sha"": ""3a61cfad77f97af1358a7a05eb5fe31abeeece0b"", ""filename"": ""third_party/WebKit/LayoutTests/platform/mac/fast/url/file-expected.txt"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/fast/url/file-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/fast/url/file-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/mac/fast/url/file-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -20,7 +20,7 @@ PASS canonicalize('file:///foo/bar.txt') is 'file:///foo/bar.txt'\n FAIL canonicalize('FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html') should be file://7:////foo/bar.html. Was file:///7:////foo/bar.html.\n FAIL canonicalize('file:filer/home\\\\me') should be file://filer/home/me. Was file:///tmp/mock/filer/home/me.\n FAIL canonicalize('file:///C:/foo/../../../bar.html') should be file:///C:/bar.html. Was file:///bar.html.\n-FAIL canonicalize('file:///C:/asdf#\\xc2') should be file:///C:/asdf#\u00ef\u00bf\u00bd. Was file:///C:/asdf#\u00c2.\n+PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#%C3%82'\n PASS canonicalize('file:///home/me') is 'file:///home/me'\n FAIL canonicalize('file:c:\\\\foo\\\\bar.html') should be file:///c:/foo/bar.html. Was file:///tmp/mock/c:/foo/bar.html.\n FAIL canonicalize('file:c|//foo\\\\bar.html') should be file:///c%7C//foo/bar.html. Was file:///tmp/mock/c%7C//foo/bar.html.""}<_**next**_>{""sha"": ""483f690834c953f23acf32886c9ac9fce8778ab5"", ""filename"": ""third_party/WebKit/LayoutTests/platform/mac/fast/url/standard-url-expected.txt"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/fast/url/standard-url-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/mac/fast/url/standard-url-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/mac/fast/url/standard-url-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -4,7 +4,7 @@ On success, you will see a series of \""PASS\"" messages, followed by \""TEST COMPLETE\n \n \n PASS canonicalize('http://www.google.com/foo?bar=baz#') is 'http://www.google.com/foo?bar=baz#'\n-PASS canonicalize('http://www.google.com/foo?bar=baz# \u00bb') is 'http://www.google.com/foo?bar=baz# \u00bb'\n+PASS canonicalize('http://www.google.com/foo?bar=baz# \u00bb') is 'http://www.google.com/foo?bar=baz# %C2%BB'\n PASS canonicalize('http://[www.google.com]/') is 'http://[www.google.com]/'\n PASS canonicalize('http://www.google.com') is 'http://www.google.com/'\n PASS canonicalize('http:////////user:@google.com:99?foo') is 'http://user@google.com:99/?foo'\n@@ -13,7 +13,7 @@ PASS canonicalize('http://www/foo%2Ehtml') is 'http://www/foo.html'\n PASS canonicalize('http://user:pass@/') is 'http://user:pass@/'\n PASS canonicalize('http://%25DOMAIN:foobar@foodomain.com/') is 'http://%25DOMAIN:foobar@foodomain.com/'\n PASS canonicalize('http:\\\\\\\\www.google.com\\\\foo') is 'http://www.google.com/foo'\n-PASS canonicalize('http://www.google.com/asdf#\\ud800') is 'http://www.google.com/asdf#\\uFFFD'\n+PASS canonicalize('http://www.google.com/asdf#\\ud800') is 'http://www.google.com/asdf#%EF%BF%BD'\n PASS canonicalize('http://foo:80/') is 'http://foo/'\n PASS canonicalize('http://foo:81/') is 'http://foo:81/'\n PASS canonicalize('httpa://foo:80/') is 'httpa://foo:80/'""}<_**next**_>{""sha"": ""e966f7357806b26bd6eb3e5d09b1bd46c52402fa"", ""filename"": ""third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 509 tests; 324 PASS, 185 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 509 tests; 327 PASS, 182 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS Parsing: <http://example\t.\\norg> against <http://example.org/foo/bar>\n PASS Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>\n@@ -103,7 +103,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///C:/foo/bar.html\""\n@@ -162,7 +162,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -268,7 +268,7 @@ FAIL Parsing: <http://\ufdd0zyx.com> against <http://other.com/> assert_equals: fai\n FAIL Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/> assert_equals: failure should set href to input expected \""http://%ef%b7%90zyx.com\"" but got \""http://%EF%BF%BDzyx.com/\""\n FAIL Parsing: <https://\ufffd> against <about:blank> assert_equals: failure should set href to input expected \""https://\\ufffd\"" but got \""https://%EF%BF%BD/\""\n FAIL Parsing: <https://%EF%BF%BD> against <about:blank> assert_equals: failure should set href to input expected \""https://%EF%BF%BD\"" but got \""https://%EF%BF%BD/\""\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code""}<_**next**_>{""sha"": ""e966f7357806b26bd6eb3e5d09b1bd46c52402fa"", ""filename"": ""third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-xhtml-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-xhtml-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-xhtml-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/a-element-xhtml-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 509 tests; 324 PASS, 185 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 509 tests; 327 PASS, 182 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS Loading data\u2026\n PASS Parsing: <http://example\t.\\norg> against <http://example.org/foo/bar>\n PASS Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>\n@@ -103,7 +103,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///C:/foo/bar.html\""\n@@ -162,7 +162,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -268,7 +268,7 @@ FAIL Parsing: <http://\ufdd0zyx.com> against <http://other.com/> assert_equals: fai\n FAIL Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/> assert_equals: failure should set href to input expected \""http://%ef%b7%90zyx.com\"" but got \""http://%EF%BF%BDzyx.com/\""\n FAIL Parsing: <https://\ufffd> against <about:blank> assert_equals: failure should set href to input expected \""https://\\ufffd\"" but got \""https://%EF%BF%BD/\""\n FAIL Parsing: <https://%EF%BF%BD> against <about:blank> assert_equals: failure should set href to input expected \""https://%EF%BF%BD\"" but got \""https://%EF%BF%BD/\""\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_unreached: Expected URL to fail parsing Reached unreachable code""}<_**next**_>{""sha"": ""1b7414e269228933412bab601cbb152ec66e4200"", ""filename"": ""third_party/WebKit/LayoutTests/platform/win/external/wpt/url/url-constructor-expected.txt"", ""status"": ""modified"", ""additions"": 4, ""deletions"": 4, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/url-constructor-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/url-constructor-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/win/external/wpt/url/url-constructor-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1,5 +1,5 @@\n This is a testharness.js-based test.\n-Found 513 tests; 392 PASS, 121 FAIL, 0 TIMEOUT, 0 NOTRUN.\n+Found 513 tests; 395 PASS, 118 FAIL, 0 TIMEOUT, 0 NOTRUN.\n PASS URL.searchParams getter\n PASS URL.searchParams updating, clearing\n PASS URL.searchParams setter, invalid values\n@@ -107,7 +107,7 @@ PASS Parsing: </a/b/c> against <http://example.org/foo/bar>\n PASS Parsing: </a/ /c> against <http://example.org/foo/bar>\n PASS Parsing: </a%2fc> against <http://example.org/foo/bar>\n PASS Parsing: </a/%2f/c> against <http://example.org/foo/bar>\n-FAIL Parsing: <#\u03b2> against <http://example.org/foo/bar> assert_equals: href expected \""http://example.org/foo/bar#%CE%B2\"" but got \""http://example.org/foo/bar#\u03b2\""\n+PASS Parsing: <#\u03b2> against <http://example.org/foo/bar>\n PASS Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>\n PASS Parsing: <tel:1234567890> against <http://example.org/foo/bar>\n FAIL Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path> assert_equals: href expected \""file:///c:/foo/bar.html\"" but got \""file:///C:/foo/bar.html\""\n@@ -166,7 +166,7 @@ PASS Parsing: <http://example.com/\u2025/foo> against <about:blank>\n PASS Parsing: <http://example.com/\ufeff/foo> against <about:blank>\n PASS Parsing: <http://example.com/\u202e/foo/\u202d/bar> against <about:blank>\n PASS Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>\n-FAIL Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank> assert_equals: href expected \""http://www.google.com/foo?bar=baz# %C2%BB\"" but got \""http://www.google.com/foo?bar=baz# \u00bb\""\n+PASS Parsing: <http://www.google.com/foo?bar=baz# \u00bb> against <about:blank>\n PASS Parsing: <data:test# \u00bb> against <about:blank>\n PASS Parsing: <http://www.google.com> against <about:blank>\n PASS Parsing: <http://192.0x00A80001> against <about:blank>\n@@ -272,7 +272,7 @@ PASS Parsing: <http://\ufdd0zyx.com> against <http://other.com/>\n PASS Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/>\n PASS Parsing: <https://\ufffd> against <about:blank>\n PASS Parsing: <https://%EF%BF%BD> against <about:blank>\n-FAIL Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank> assert_equals: href expected \""https://x/%EF%BF%BD?%EF%BF%BD#%EF%BF%BD\"" but got \""https://x/%EF%BF%BD?%EF%BF%BD#\\ufffd\""\n+PASS Parsing: <https://x/\ufffd?\ufffd#\ufffd> against <about:blank>\n PASS Parsing: <http://\uff27\uff4f.com> against <http://other.com/>\n FAIL Parsing: <http://\uff05\uff14\uff11.com> against <http://other.com/> assert_throws: function \""function () {\\n          bURL(expected.input, expected.base)\\n        }\"" did not throw\n FAIL Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/> assert_throws: function \""function () {\\n          bURL(expected.input, expected.base)\\n        }\"" did not throw""}<_**next**_>{""sha"": ""6c8cd6b4b4443053d60525e36956fee495b7b6f7"", ""filename"": ""third_party/WebKit/LayoutTests/platform/win/fast/url/file-expected.txt"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/file-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/file-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/win/fast/url/file-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -20,7 +20,7 @@ PASS canonicalize('file:///foo/bar.txt') is 'file:///foo/bar.txt'\n PASS canonicalize('FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html') is 'file://7:////foo/bar.html'\n FAIL canonicalize('file:filer/home\\\\me') should be file://filer/home/me. Was file:///tmp/mock/filer/home/me.\n PASS canonicalize('file:///C:/foo/../../../bar.html') is 'file:///C:/bar.html'\n-FAIL canonicalize('file:///C:/asdf#\\xc2') should be file:///C:/asdf#\u00ef\u00bf\u00bd. Was file:///C:/asdf#\u00c2.\n+PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#%C3%82'\n PASS canonicalize('file:///home/me') is 'file:///home/me'\n FAIL canonicalize('file:c:\\\\foo\\\\bar.html') should be file:///c:/foo/bar.html. Was file:///C:/foo/bar.html.\n FAIL canonicalize('file:c|//foo\\\\bar.html') should be file:///c%7C//foo/bar.html. Was file:///C://foo/bar.html.""}<_**next**_>{""sha"": ""e331b5e2c7ad2956b78a496e1ae3723e6f7e358a"", ""filename"": ""third_party/WebKit/LayoutTests/platform/win/fast/url/file-http-base-expected.txt"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/file-http-base-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/file-http-base-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/win/fast/url/file-http-base-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -20,8 +20,8 @@ PASS canonicalize('file:///foo/bar.txt') is 'file:///foo/bar.txt'\n PASS canonicalize('FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html') is 'file://7:////foo/bar.html'\n PASS canonicalize('file:filer/home\\\\me') is 'file://filer/home/me'\n PASS canonicalize('file:///C:/foo/../../../bar.html') is 'file:///C:/bar.html'\n-PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#\\xc2'\n-PASS canonicalize('file:///C:/asdf#\u00c2') is 'file:///C:/asdf#\u00c2'\n+PASS canonicalize('file:///C:/asdf#\\xc2') is 'file:///C:/asdf#%C3%82'\n+PASS canonicalize('file:///C:/asdf#\u00c2') is 'file:///C:/asdf#%C3%82'\n PASS canonicalize('file:///home/me') is 'file:///home/me'\n FAIL canonicalize('file:c:\\\\foo\\\\bar.html') should be file:///c:/foo/bar.html. Was file:///C:/foo/bar.html.\n FAIL canonicalize('file:c|//foo\\\\bar.html') should be file:///c%7C//foo/bar.html. Was file:///C://foo/bar.html.""}<_**next**_>{""sha"": ""0fb1a0301f109feb9e6dd386dbf83a00c0343f05"", ""filename"": ""third_party/WebKit/LayoutTests/platform/win/fast/url/segments-expected.txt"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/segments-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/segments-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/win/fast/url/segments-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -97,7 +97,7 @@ PASS segments('/a/b/c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/b/c\"",\""\"",\""\""]'\n PASS segments('/a/ /c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/%20/c\"",\""\"",\""\""]'\n PASS segments('/a%2fc') is '[\""http:\"",\""example.org\"",\""\"",\""/a%2fc\"",\""\"",\""\""]'\n PASS segments('/a/%2f/c') is '[\""http:\"",\""example.org\"",\""\"",\""/a/%2f/c\"",\""\"",\""\""]'\n-PASS segments('#\u03b2') is '[\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#\u03b2\""]'\n+PASS segments('#\u03b2') is '[\""http:\"",\""example.org\"",\""\"",\""/foo/bar\"",\""\"",\""#%CE%B2\""]'\n PASS successfullyParsed is true\n \n TEST COMPLETE""}<_**next**_>{""sha"": ""9373dcc8dfa2032009e78c8871ce6ddd45a5cbec"", ""filename"": ""third_party/WebKit/LayoutTests/platform/win/fast/url/standard-url-expected.txt"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 2, ""changes"": 4, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/standard-url-expected.txt"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/LayoutTests/platform/win/fast/url/standard-url-expected.txt"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/LayoutTests/platform/win/fast/url/standard-url-expected.txt?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -4,7 +4,7 @@ On success, you will see a series of \""PASS\"" messages, followed by \""TEST COMPLETE\n \n \n PASS canonicalize('http://www.google.com/foo?bar=baz#') is 'http://www.google.com/foo?bar=baz#'\n-PASS canonicalize('http://www.google.com/foo?bar=baz# \u00bb') is 'http://www.google.com/foo?bar=baz# \u00bb'\n+PASS canonicalize('http://www.google.com/foo?bar=baz# \u00bb') is 'http://www.google.com/foo?bar=baz# %C2%BB'\n PASS canonicalize('http://[www.google.com]/') is 'http://[www.google.com]/'\n PASS canonicalize('http://www.google.com') is 'http://www.google.com/'\n PASS canonicalize('http:////////user:@google.com:99?foo') is 'http://user@google.com:99/?foo'\n@@ -13,7 +13,7 @@ PASS canonicalize('http://www/foo%2Ehtml') is 'http://www/foo.html'\n PASS canonicalize('http://user:pass@/') is 'http://user:pass@/'\n PASS canonicalize('http://%25DOMAIN:foobar@foodomain.com/') is 'http://%25DOMAIN:foobar@foodomain.com/'\n PASS canonicalize('http:\\\\\\\\www.google.com\\\\foo') is 'http://www.google.com/foo'\n-PASS canonicalize('http://www.google.com/asdf#\\ud800') is 'http://www.google.com/asdf#\\uFFFD'\n+PASS canonicalize('http://www.google.com/asdf#\\ud800') is 'http://www.google.com/asdf#%EF%BF%BD'\n PASS canonicalize('http://foo:80/') is 'http://foo/'\n PASS canonicalize('http://foo:81/') is 'http://foo:81/'\n PASS canonicalize('httpa://foo:80/') is 'httpa://foo:80/'""}<_**next**_>{""sha"": ""dc386c57ab5f3083b1b77947dd1116c7612a248d"", ""filename"": ""third_party/WebKit/Source/platform/weborigin/KURLTest.cpp"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 1, ""changes"": 2, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/Source/platform/weborigin/KURLTest.cpp"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/third_party/WebKit/Source/platform/weborigin/KURLTest.cpp"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/third_party/WebKit/Source/platform/weborigin/KURLTest.cpp?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -61,7 +61,7 @@ TEST(KURLTest, Getters) {\n        // shouldn't return it in percent-encoded form.\n        \""http://www.google.com/foo/blah?bar=baz#\\xce\\xb1\\xce\\xb2\"", \""http\"",\n        \""www.google.com\"", 0, \""\"", 0, \""/foo/blah\"", \""blah\"", \""bar=baz\"",\n-       \""\\xce\\xb1\\xce\\xb2\"", true},\n+       \""%CE%B1%CE%B2\"", true},\n       {\""http://foo.com:1234/foo/bar/\"", \""http\"", \""foo.com\"", 1234, \""\"", 0,\n        \""/foo/bar/\"", \""bar\"", 0, 0, false},\n       {\""http://www.google.com?#\"", \""http\"", \""www.google.com\"", 0, \""\"", 0, \""/\"", 0,""}<_**next**_>{""sha"": ""5dc81052311965a922f571c59f9be0064328dc82"", ""filename"": ""url/url_canon_etc.cc"", ""status"": ""modified"", ""additions"": 1, ""deletions"": 7, ""changes"": 8, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/url/url_canon_etc.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/url/url_canon_etc.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/url/url_canon_etc.cc?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -275,13 +275,7 @@ void DoCanonicalizeRef(const CHAR* spec,\n       // Normal ASCII characters are just appended.\n       output->push_back(static_cast<char>(spec[i]));\n     } else {\n-      // Non-ASCII characters are appended unescaped, but only when they are\n-      // valid. Invalid Unicode characters are replaced with the \""invalid\n-      // character\"" as IE seems to (ReadUTFChar puts the unicode replacement\n-      // character in the output on failure for us).\n-      unsigned code_point;\n-      ReadUTFChar(spec, &i, end, &code_point);\n-      AppendUTF8Value(code_point, output);\n+      AppendUTF8EscapedChar(spec, &i, end, output);\n     }\n   }\n ""}<_**next**_>{""sha"": ""feac82c44b350d5be2be6ff8730ea7c9352c422a"", ""filename"": ""url/url_canon_unittest.cc"", ""status"": ""modified"", ""additions"": 83, ""deletions"": 58, ""changes"": 141, ""blob_url"": ""https://github.com/chromium/chromium/blob/f8f6ed59949be4451ee2f5443d8a313f102fde60/url/url_canon_unittest.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/f8f6ed59949be4451ee2f5443d8a313f102fde60/url/url_canon_unittest.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/url/url_canon_unittest.cc?ref=f8f6ed59949be4451ee2f5443d8a313f102fde60"", ""patch"": ""@@ -1274,21 +1274,23 @@ TEST(URLCanonTest, Ref) {\n   // Refs are trivial, it just checks the encoding.\n   DualComponentCase ref_cases[] = {\n       // Regular one, we shouldn't escape spaces, et al.\n-    {\""hello, world\"", L\""hello, world\"", \""#hello, world\"", Component(1, 12), true},\n+      {\""hello, world\"", L\""hello, world\"", \""#hello, world\"", Component(1, 12),\n+       true},\n       // UTF-8/wide input should be preserved\n-    {\""\\xc2\\xa9\"", L\""\\xa9\"", \""#\\xc2\\xa9\"", Component(1, 2), true},\n+      {\""\\xc2\\xa9\"", L\""\\xa9\"", \""#%C2%A9\"", Component(1, 6), true},\n       // Test a characer that takes > 16 bits (U+10300 = old italic letter A)\n-    {\""\\xF0\\x90\\x8C\\x80ss\"", L\""\\xd800\\xdf00ss\"", \""#\\xF0\\x90\\x8C\\x80ss\"", Component(1, 6), true},\n+      {\""\\xF0\\x90\\x8C\\x80ss\"", L\""\\xd800\\xdf00ss\"", \""#%F0%90%8C%80ss\"",\n+       Component(1, 14), true},\n       // Escaping should be preserved unchanged, even invalid ones\n-    {\""%41%a\"", L\""%41%a\"", \""#%41%a\"", Component(1, 5), true},\n+      {\""%41%a\"", L\""%41%a\"", \""#%41%a\"", Component(1, 5), true},\n       // Invalid UTF-8/16 input should be flagged and the input made valid\n-    {\""\\xc2\"", NULL, \""#\\xef\\xbf\\xbd\"", Component(1, 3), true},\n-    {NULL, L\""\\xd800\\x597d\"", \""#\\xef\\xbf\\xbd\\xe5\\xa5\\xbd\"", Component(1, 6), true},\n+      {\""\\xc2\"", NULL, \""#%EF%BF%BD\"", Component(1, 9), true},\n+      {NULL, L\""\\xd800\\x597d\"", \""#%EF%BF%BD%E5%A5%BD\"", Component(1, 18), true},\n       // Test a Unicode invalid character.\n-    {\""a\\xef\\xb7\\x90\"", L\""a\\xfdd0\"", \""#a\\xef\\xbf\\xbd\"", Component(1, 4), true},\n+      {\""a\\xef\\xb7\\x90\"", L\""a\\xfdd0\"", \""#a%EF%BF%BD\"", Component(1, 10), true},\n       // Refs can have # signs and we should preserve them.\n-    {\""asdf#qwer\"", L\""asdf#qwer\"", \""#asdf#qwer\"", Component(1, 9), true},\n-    {\""#asdf\"", L\""#asdf\"", \""##asdf\"", Component(1, 5), true},\n+      {\""asdf#qwer\"", L\""asdf#qwer\"", \""#asdf#qwer\"", Component(1, 9), true},\n+      {\""#asdf\"", L\""#asdf\"", \""##asdf\"", Component(1, 5), true},\n   };\n \n   for (size_t i = 0; i < arraysize(ref_cases); i++) {\n@@ -1351,49 +1353,56 @@ TEST(URLCanonTest, CanonicalizeStandardURL) {\n     const char* expected;\n     bool expected_success;\n   } cases[] = {\n-    {\""http://www.google.com/foo?bar=baz#\"", \""http://www.google.com/foo?bar=baz#\"", true},\n-    {\""http://[www.google.com]/\"", \""http://[www.google.com]/\"", false},\n-    {\""ht\\ttp:@www.google.com:80/;p?#\"", \""ht%09tp://www.google.com:80/;p?#\"", false},\n-    {\""http:////////user:@google.com:99?foo\"", \""http://user@google.com:99/?foo\"", true},\n-    {\""www.google.com\"", \"":www.google.com/\"", false},\n-    {\""http://192.0x00A80001\"", \""http://192.168.0.1/\"", true},\n-    {\""http://www/foo%2Ehtml\"", \""http://www/foo.html\"", true},\n-    {\""http://user:pass@/\"", \""http://user:pass@/\"", false},\n-    {\""http://%25DOMAIN:foobar@foodomain.com/\"", \""http://%25DOMAIN:foobar@foodomain.com/\"", true},\n+      {\""http://www.google.com/foo?bar=baz#\"",\n+       \""http://www.google.com/foo?bar=baz#\"", true},\n+      {\""http://[www.google.com]/\"", \""http://[www.google.com]/\"", false},\n+      {\""ht\\ttp:@www.google.com:80/;p?#\"", \""ht%09tp://www.google.com:80/;p?#\"",\n+       false},\n+      {\""http:////////user:@google.com:99?foo\"", \""http://user@google.com:99/?foo\"",\n+       true},\n+      {\""www.google.com\"", \"":www.google.com/\"", false},\n+      {\""http://192.0x00A80001\"", \""http://192.168.0.1/\"", true},\n+      {\""http://www/foo%2Ehtml\"", \""http://www/foo.html\"", true},\n+      {\""http://user:pass@/\"", \""http://user:pass@/\"", false},\n+      {\""http://%25DOMAIN:foobar@foodomain.com/\"",\n+       \""http://%25DOMAIN:foobar@foodomain.com/\"", true},\n \n       // Backslashes should get converted to forward slashes.\n-    {\""http:\\\\\\\\www.google.com\\\\foo\"", \""http://www.google.com/foo\"", true},\n+      {\""http:\\\\\\\\www.google.com\\\\foo\"", \""http://www.google.com/foo\"", true},\n \n       // Busted refs shouldn't make the whole thing fail.\n-    {\""http://www.google.com/asdf#\\xc2\"", \""http://www.google.com/asdf#\\xef\\xbf\\xbd\"", true},\n+      {\""http://www.google.com/asdf#\\xc2\"",\n+       \""http://www.google.com/asdf#%EF%BF%BD\"", true},\n \n       // Basic port tests.\n-    {\""http://foo:80/\"", \""http://foo/\"", true},\n-    {\""http://foo:81/\"", \""http://foo:81/\"", true},\n-    {\""httpa://foo:80/\"", \""httpa://foo:80/\"", true},\n-    {\""http://foo:-80/\"", \""http://foo:-80/\"", false},\n-\n-    {\""https://foo:443/\"", \""https://foo/\"", true},\n-    {\""https://foo:80/\"", \""https://foo:80/\"", true},\n-    {\""ftp://foo:21/\"", \""ftp://foo/\"", true},\n-    {\""ftp://foo:80/\"", \""ftp://foo:80/\"", true},\n-    {\""gopher://foo:70/\"", \""gopher://foo/\"", true},\n-    {\""gopher://foo:443/\"", \""gopher://foo:443/\"", true},\n-    {\""ws://foo:80/\"", \""ws://foo/\"", true},\n-    {\""ws://foo:81/\"", \""ws://foo:81/\"", true},\n-    {\""ws://foo:443/\"", \""ws://foo:443/\"", true},\n-    {\""ws://foo:815/\"", \""ws://foo:815/\"", true},\n-    {\""wss://foo:80/\"", \""wss://foo:80/\"", true},\n-    {\""wss://foo:81/\"", \""wss://foo:81/\"", true},\n-    {\""wss://foo:443/\"", \""wss://foo/\"", true},\n-    {\""wss://foo:815/\"", \""wss://foo:815/\"", true},\n+      {\""http://foo:80/\"", \""http://foo/\"", true},\n+      {\""http://foo:81/\"", \""http://foo:81/\"", true},\n+      {\""httpa://foo:80/\"", \""httpa://foo:80/\"", true},\n+      {\""http://foo:-80/\"", \""http://foo:-80/\"", false},\n+\n+      {\""https://foo:443/\"", \""https://foo/\"", true},\n+      {\""https://foo:80/\"", \""https://foo:80/\"", true},\n+      {\""ftp://foo:21/\"", \""ftp://foo/\"", true},\n+      {\""ftp://foo:80/\"", \""ftp://foo:80/\"", true},\n+      {\""gopher://foo:70/\"", \""gopher://foo/\"", true},\n+      {\""gopher://foo:443/\"", \""gopher://foo:443/\"", true},\n+      {\""ws://foo:80/\"", \""ws://foo/\"", true},\n+      {\""ws://foo:81/\"", \""ws://foo:81/\"", true},\n+      {\""ws://foo:443/\"", \""ws://foo:443/\"", true},\n+      {\""ws://foo:815/\"", \""ws://foo:815/\"", true},\n+      {\""wss://foo:80/\"", \""wss://foo:80/\"", true},\n+      {\""wss://foo:81/\"", \""wss://foo:81/\"", true},\n+      {\""wss://foo:443/\"", \""wss://foo/\"", true},\n+      {\""wss://foo:815/\"", \""wss://foo:815/\"", true},\n \n       // This particular code path ends up \""backing up\"" to replace an invalid\n       // host ICU generated with an escaped version. Test that in the context\n       // of a full URL to make sure the backing up doesn't mess up the non-host\n       // parts of the URL. \""EF B9 AA\"" is U+FE6A which is a type of percent that\n       // ICU will convert to an ASCII one, generating \""%81\"".\n-    {\""ws:)W\\x1eW\\xef\\xb9\\xaa\""\""81:80/\"", \""ws://%29w%1ew%81/\"", false},\n+      {\""ws:)W\\x1eW\\xef\\xb9\\xaa\""\n+       \""81:80/\"",\n+       \""ws://%29w%1ew%81/\"", false},\n   };\n \n   for (size_t i = 0; i < arraysize(cases); i++) {\n@@ -1683,41 +1692,57 @@ TEST(URLCanonTest, CanonicalizeFileURL) {\n   } cases[] = {\n #ifdef _WIN32\n       // Windows-style paths\n-    {\""file:c:\\\\foo\\\\bar.html\"", \""file:///C:/foo/bar.html\"", true, Component(), Component(7, 16)},\n-    {\""  File:c|////foo\\\\bar.html\"", \""file:///C:////foo/bar.html\"", true, Component(), Component(7, 19)},\n-    {\""file:\"", \""file:///\"", true, Component(), Component(7, 1)},\n-    {\""file:UNChost/path\"", \""file://unchost/path\"", true, Component(7, 7), Component(14, 5)},\n+      {\""file:c:\\\\foo\\\\bar.html\"", \""file:///C:/foo/bar.html\"", true, Component(),\n+       Component(7, 16)},\n+      {\""  File:c|////foo\\\\bar.html\"", \""file:///C:////foo/bar.html\"", true,\n+       Component(), Component(7, 19)},\n+      {\""file:\"", \""file:///\"", true, Component(), Component(7, 1)},\n+      {\""file:UNChost/path\"", \""file://unchost/path\"", true, Component(7, 7),\n+       Component(14, 5)},\n       // CanonicalizeFileURL supports absolute Windows style paths for IE\n       // compatibility. Note that the caller must decide that this is a file\n       // URL itself so it can call the file canonicalizer. This is usually\n       // done automatically as part of relative URL resolving.\n-    {\""c:\\\\foo\\\\bar\"", \""file:///C:/foo/bar\"", true, Component(), Component(7, 11)},\n-    {\""C|/foo/bar\"", \""file:///C:/foo/bar\"", true, Component(), Component(7, 11)},\n-    {\""/C|\\\\foo\\\\bar\"", \""file:///C:/foo/bar\"", true, Component(), Component(7, 11)},\n-    {\""//C|/foo/bar\"", \""file:///C:/foo/bar\"", true, Component(), Component(7, 11)},\n-    {\""//server/file\"", \""file://server/file\"", true, Component(7, 6), Component(13, 5)},\n-    {\""\\\\\\\\server\\\\file\"", \""file://server/file\"", true, Component(7, 6), Component(13, 5)},\n-    {\""/\\\\server/file\"", \""file://server/file\"", true, Component(7, 6), Component(13, 5)},\n+      {\""c:\\\\foo\\\\bar\"", \""file:///C:/foo/bar\"", true, Component(),\n+       Component(7, 11)},\n+      {\""C|/foo/bar\"", \""file:///C:/foo/bar\"", true, Component(), Component(7, 11)},\n+      {\""/C|\\\\foo\\\\bar\"", \""file:///C:/foo/bar\"", true, Component(),\n+       Component(7, 11)},\n+      {\""//C|/foo/bar\"", \""file:///C:/foo/bar\"", true, Component(),\n+       Component(7, 11)},\n+      {\""//server/file\"", \""file://server/file\"", true, Component(7, 6),\n+       Component(13, 5)},\n+      {\""\\\\\\\\server\\\\file\"", \""file://server/file\"", true, Component(7, 6),\n+       Component(13, 5)},\n+      {\""/\\\\server/file\"", \""file://server/file\"", true, Component(7, 6),\n+       Component(13, 5)},\n       // We should preserve the number of slashes after the colon for IE\n       // compatibility, except when there is none, in which case we should\n       // add one.\n-    {\""file:c:foo/bar.html\"", \""file:///C:/foo/bar.html\"", true, Component(), Component(7, 16)},\n-    {\""file:/\\\\/\\\\C:\\\\\\\\//foo\\\\bar.html\"", \""file:///C:////foo/bar.html\"", true, Component(), Component(7, 19)},\n+      {\""file:c:foo/bar.html\"", \""file:///C:/foo/bar.html\"", true, Component(),\n+       Component(7, 16)},\n+      {\""file:/\\\\/\\\\C:\\\\\\\\//foo\\\\bar.html\"", \""file:///C:////foo/bar.html\"", true,\n+       Component(), Component(7, 19)},\n       // Three slashes should be non-UNC, even if there is no drive spec (IE\n       // does this, which makes the resulting request invalid).\n-    {\""file:///foo/bar.txt\"", \""file:///foo/bar.txt\"", true, Component(), Component(7, 12)},\n+      {\""file:///foo/bar.txt\"", \""file:///foo/bar.txt\"", true, Component(),\n+       Component(7, 12)},\n       // TODO(brettw) we should probably fail for invalid host names, which\n       // would change the expected result on this test. We also currently allow\n       // colon even though it's probably invalid, because its currently the\n       // \""natural\"" result of the way the canonicalizer is written. There doesn't\n       // seem to be a strong argument for why allowing it here would be bad, so\n       // we just tolerate it and the load will fail later.\n-    {\""FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html\"", \""file://7:////foo/bar.html\"", false, Component(7, 2), Component(9, 16)},\n-    {\""file:filer/home\\\\me\"", \""file://filer/home/me\"", true, Component(7, 5), Component(12, 8)},\n+      {\""FILE:/\\\\/\\\\7:\\\\\\\\//foo\\\\bar.html\"", \""file://7:////foo/bar.html\"", false,\n+       Component(7, 2), Component(9, 16)},\n+      {\""file:filer/home\\\\me\"", \""file://filer/home/me\"", true, Component(7, 5),\n+       Component(12, 8)},\n       // Make sure relative paths can't go above the \""C:\""\n-    {\""file:///C:/foo/../../../bar.html\"", \""file:///C:/bar.html\"", true, Component(), Component(7, 12)},\n+      {\""file:///C:/foo/../../../bar.html\"", \""file:///C:/bar.html\"", true,\n+       Component(), Component(7, 12)},\n       // Busted refs shouldn't make the whole thing fail.\n-    {\""file:///C:/asdf#\\xc2\"", \""file:///C:/asdf#\\xef\\xbf\\xbd\"", true, Component(), Component(7, 8)},\n+      {\""file:///C:/asdf#\\xc2\"", \""file:///C:/asdf#%EF%BF%BD\"", true, Component(),\n+       Component(7, 8)},\n #else\n       // Unix-style paths\n     {\""file:///home/me\"", \""file:///home/me\"", true, Component(), Component(7, 8)},""}","void DoCanonicalizeRef(const CHAR* spec,
                       const Component& ref,
                       CanonOutput* output,
                       Component* out_ref) {
  if (ref.len < 0) {
    *out_ref = Component();
    return;
  }

  output->push_back('#');
  out_ref->begin = output->length();

  int end = ref.end();
  for (int i = ref.begin; i < end; i++) {
    if (spec[i] == 0) {
      continue;
    } else if (static_cast<UCHAR>(spec[i]) < 0x20) {
      AppendEscapedChar(static_cast<unsigned char>(spec[i]), output);
    } else if (static_cast<UCHAR>(spec[i]) < 0x80) {
       output->push_back(static_cast<char>(spec[i]));
     } else {
      AppendUTF8EscapedChar(spec, &i, end, output);
     }
   }
 
  out_ref->len = output->length() - out_ref->begin;
}
","void DoCanonicalizeRef(const CHAR* spec,
                       const Component& ref,
                       CanonOutput* output,
                       Component* out_ref) {
  if (ref.len < 0) {
    *out_ref = Component();
    return;
  }

  output->push_back('#');
  out_ref->begin = output->length();

  int end = ref.end();
  for (int i = ref.begin; i < end; i++) {
    if (spec[i] == 0) {
      continue;
    } else if (static_cast<UCHAR>(spec[i]) < 0x20) {
      AppendEscapedChar(static_cast<unsigned char>(spec[i]), output);
    } else if (static_cast<UCHAR>(spec[i]) < 0x80) {
       output->push_back(static_cast<char>(spec[i]));
     } else {
      unsigned code_point;
      ReadUTFChar(spec, &i, end, &code_point);
      AppendUTF8Value(code_point, output);
     }
   }
 
  out_ref->len = output->length() - out_ref->begin;
}
",C,"      AppendUTF8EscapedChar(spec, &i, end, output);
","      unsigned code_point;
      ReadUTFChar(spec, &i, end, &code_point);
      AppendUTF8Value(code_point, output);
",,"@@ -275,13 +275,7 @@ void DoCanonicalizeRef(const CHAR* spec,
       // Normal ASCII characters are just appended.
       output->push_back(static_cast<char>(spec[i]));
     } else {
-      // Non-ASCII characters are appended unescaped, but only when they are
-      // valid. Invalid Unicode characters are replaced with the ""invalid
-      // character"" as IE seems to (ReadUTFChar puts the unicode replacement
-      // character in the output on failure for us).
-      unsigned code_point;
-      ReadUTFChar(spec, &i, end, &code_point);
-      AppendUTF8Value(code_point, output);
+      AppendUTF8EscapedChar(spec, &i, end, output);
     }
   }
 ",Chrome,f8f6ed59949be4451ee2f5443d8a313f102fde60,0a918e900a759b04f177cc5b8bca668140751136,1,"void DoCanonicalizeRef(const CHAR* spec,
                       const Component& ref,
                       CanonOutput* output,
                       Component* out_ref) {
  if (ref.len < 0) {
    // Common case of no ref.
    *out_ref = Component();
    return;
  }

  // Append the ref separator. Note that we need to do this even when the ref
  // is empty but present.
  output->push_back('#');
  out_ref->begin = output->length();

  // Now iterate through all the characters, converting to UTF-8 and validating.
  int end = ref.end();
  for (int i = ref.begin; i < end; i++) {
    if (spec[i] == 0) {
      // IE just strips NULLs, so we do too.
      continue;
    } else if (static_cast<UCHAR>(spec[i]) < 0x20) {
      // Unline IE seems to, we escape control characters. This will probably
      // make the reference fragment unusable on a web page, but people
      // shouldn't be using control characters in their anchor names.
      AppendEscapedChar(static_cast<unsigned char>(spec[i]), output);
    } else if (static_cast<UCHAR>(spec[i]) < 0x80) {
       // Normal ASCII characters are just appended.
       output->push_back(static_cast<char>(spec[i]));
     } else {
//flaw_line_below:
      // Non-ASCII characters are appended unescaped, but only when they are
//flaw_line_below:
      // valid. Invalid Unicode characters are replaced with the ""invalid
//flaw_line_below:
      // character"" as IE seems to (ReadUTFChar puts the unicode replacement
//flaw_line_below:
      // character in the output on failure for us).
//flaw_line_below:
      unsigned code_point;
//flaw_line_below:
      ReadUTFChar(spec, &i, end, &code_point);
//flaw_line_below:
      AppendUTF8Value(code_point, output);
//fix_flaw_line_below:
//      AppendUTF8EscapedChar(spec, &i, end, output);
     }
   }
 
  out_ref->len = output->length() - out_ref->begin;
}
",186880,"void DoCanonicalizeRef(const CHAR* spec,
                       const Component& ref,
                       CanonOutput* output,
                       Component* out_ref) {
  if (ref.len < 0) {
    *out_ref = Component();
    return;
  }

  output->push_back('#');
  out_ref->begin = output->length();

  int end = ref.end();
  for (int i = ref.begin; i < end; i++) {
    if (spec[i] == 0) {
      continue;
    } else if (static_cast<UCHAR>(spec[i]) < 0x20) {
      AppendEscapedChar(static_cast<unsigned char>(spec[i]), output);
    } else if (static_cast<UCHAR>(spec[i]) < 0x80) {
       output->push_back(static_cast<char>(spec[i]));
     } else {
      unsigned code_point;
      ReadUTFChar(spec, &i, end, &code_point);
      AppendUTF8Value(code_point, output);
     }
   }
 
  out_ref->len = output->length() - out_ref->begin;
}
","void DoCanonicalizeRef(const CHAR* spec,
                       const Component& ref,
                       CanonOutput* output,
                       Component* out_ref) {
  if (ref.len < 0) {
    *out_ref = Component();
    return;
  }

  output->push_back('#');
  out_ref->begin = output->length();

  int end = ref.end();
  for (int i = ref.begin; i < end; i++) {
    if (spec[i] == 0) {
      continue;
    } else if (static_cast<UCHAR>(spec[i]) < 0x20) {
      AppendEscapedChar(static_cast<unsigned char>(spec[i]), output);
    } else if (static_cast<UCHAR>(spec[i]) < 0x80) {
       output->push_back(static_cast<char>(spec[i]));
     } else {
      AppendUTF8EscapedChar(spec, &i, end, output);
     }
   }
 
  out_ref->len = output->length() - out_ref->begin;
}
","The `DoCanonicalizeRef` function processes a given character specification (`spec`) and a reference component (`ref`) to generate a canonicalized output while handling special characters. If the length of `ref` is negative, it initializes `out_ref` to an empty component and exits. The function begins by appending a '#' character to the output and records the starting position of the reference. It then iterates through the characters in `spec`, escaping non-printable characters, directly appending printable ASCII characters, and converting UTF-8 characters as needed. Finally, it calculates and sets the length of the processed reference in `out_ref`.","The provided code defines a function that processes a character specification and a reference component to create a canonicalized output. It first checks if the reference length is valid; if not, it initializes an output reference and exits. The function then appends a specific character to the output and records the starting position of the reference. It iterates through the characters in the specification, handling non-printable characters by escaping them, appending printable ASCII characters directly, and converting UTF-8 characters as necessary. Finally, it calculates and updates the length of the processed reference in the output.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, arises from the handling of special characters in the original code. Specifically, the original implementation processed UTF-8 characters without proper escaping, which could allow for the injection of malicious scripts if the input contained characters that could be interpreted as HTML or JavaScript. The fixed code addresses this issue by replacing the `AppendUTF8Value` function with `AppendUTF8EscapedChar`, ensuring that any potentially dangerous characters are properly escaped before being added to the output. This change mitigates the risk of cross-site scripting (XSS) attacks by sanitizing user input.","The vulnerability identified as CWE-79, which pertains to improper neutralization of input during web page generation, arises from the inadequate handling of special characters in the original code. This oversight allowed potentially harmful input, such as script tags, to be processed without proper escaping, creating a risk for cross-site scripting (XSS) attacks. The fix involved implementing a more robust escaping mechanism for UTF-8 characters, ensuring that any special characters are sanitized before being included in the output. This change effectively mitigates the risk of malicious code execution by preventing untrusted input from being rendered as executable content.","The vulnerability was fixed by replacing the function that handled UTF-8 character processing. In the original code, the function used `AppendUTF8Value`, which did not adequately escape potentially dangerous characters, leaving the application vulnerable to cross-site scripting (XSS) attacks. The updated code introduced `AppendUTF8EscapedChar`, which ensures that any special characters are properly escaped before being added to the output. This change enhances the security of the application by sanitizing user input, thereby preventing malicious scripts from being executed when the output is rendered in a web context.","The vulnerability was fixed by implementing a more secure method for handling special characters in the input. The original approach allowed potentially harmful characters to be processed without proper escaping, which could lead to cross-site scripting (XSS) attacks. The revised code introduced a new mechanism that ensures all special characters are adequately escaped before being included in the output. This enhancement effectively sanitizes user input, preventing any malicious scripts from being executed when the output is rendered in a web environment, thereby significantly improving the overall security of the application.","4,4","5,5","4,4","4,4"
10,10,186914,186914,,Remote,Not required,,CVE-2017-15427,https://www.cvedetails.com/cve/CVE-2017-15427/,CWE-79,Medium,,Partial,,2018-08-28,4.3,Insufficient policy enforcement in Omnibox in Google Chrome prior to 63.0.3239.84 allowed a socially engineered user to XSS themselves by dragging and dropping a javascript: URL into the URL bar.,2018-11-02,XSS ,2,https://github.com/chromium/chromium/commit/16c719e0e275d2ee5d5c69e4962b744bcaf0fe40,16c719e0e275d2ee5d5c69e4962b744bcaf0fe40,"Strip JavaScript schemas on Linux text drop

When dropping text onto the Omnibox, any leading JavaScript schemes
should be stripped to avoid a ""self-XSS"" attack. This stripping already
occurs in all cases except when plaintext is dropped on Linux. This CL
corrects that oversight.

Bug: 768910
Change-Id: I43af24ace4a13cf61d15a32eb9382dcdd498a062
Reviewed-on: https://chromium-review.googlesource.com/685638
Reviewed-by: Justin Donnelly <jdonnelly@chromium.org>
Commit-Queue: Eric Lawrence <elawrence@chromium.org>
Cr-Commit-Position: refs/heads/master@{#504695}",1,chrome/browser/ui/views/omnibox/omnibox_view_views.cc,"{""sha"": ""98a8ac9c38531ee785f98f7ce297dde52f5ad7fa"", ""filename"": ""chrome/browser/ui/views/omnibox/omnibox_view_views.cc"", ""status"": ""modified"", ""additions"": 2, ""deletions"": 1, ""changes"": 3, ""blob_url"": ""https://github.com/chromium/chromium/blob/16c719e0e275d2ee5d5c69e4962b744bcaf0fe40/chrome/browser/ui/views/omnibox/omnibox_view_views.cc"", ""raw_url"": ""https://github.com/chromium/chromium/raw/16c719e0e275d2ee5d5c69e4962b744bcaf0fe40/chrome/browser/ui/views/omnibox/omnibox_view_views.cc"", ""contents_url"": ""https://api.github.com/repos/chromium/chromium/contents/chrome/browser/ui/views/omnibox/omnibox_view_views.cc?ref=16c719e0e275d2ee5d5c69e4962b744bcaf0fe40"", ""patch"": ""@@ -1098,7 +1098,8 @@ int OmniboxViewViews::OnDrop(const ui::OSExchangeData& data) {\n   } else if (data.HasString()) {\n     base::string16 text;\n     if (data.GetString(&text)) {\n-      base::string16 collapsed_text(base::CollapseWhitespace(text, true));\n+      base::string16 collapsed_text(\n+          StripJavascriptSchemas(base::CollapseWhitespace(text, true)));\n       if (model()->CanPasteAndGo(collapsed_text))\n         model()->PasteAndGo(collapsed_text);\n       return ui::DragDropTypes::DRAG_COPY;""}","int OmniboxViewViews::OnDrop(const ui::OSExchangeData& data) {
  if (HasTextBeingDragged())
    return ui::DragDropTypes::DRAG_NONE;

  if (data.HasURL(ui::OSExchangeData::CONVERT_FILENAMES)) {
    GURL url;
    base::string16 title;
    if (data.GetURLAndTitle(
            ui::OSExchangeData::CONVERT_FILENAMES, &url, &title)) {
      base::string16 text(
          StripJavascriptSchemas(base::UTF8ToUTF16(url.spec())));
      if (model()->CanPasteAndGo(text)) {
        model()->PasteAndGo(text);
        return ui::DragDropTypes::DRAG_COPY;
      }
    }
   } else if (data.HasString()) {
     base::string16 text;
     if (data.GetString(&text)) {
      base::string16 collapsed_text(
          StripJavascriptSchemas(base::CollapseWhitespace(text, true)));
       if (model()->CanPasteAndGo(collapsed_text))
         model()->PasteAndGo(collapsed_text);
       return ui::DragDropTypes::DRAG_COPY;
    }
  }

  return ui::DragDropTypes::DRAG_NONE;
}
","int OmniboxViewViews::OnDrop(const ui::OSExchangeData& data) {
  if (HasTextBeingDragged())
    return ui::DragDropTypes::DRAG_NONE;

  if (data.HasURL(ui::OSExchangeData::CONVERT_FILENAMES)) {
    GURL url;
    base::string16 title;
    if (data.GetURLAndTitle(
            ui::OSExchangeData::CONVERT_FILENAMES, &url, &title)) {
      base::string16 text(
          StripJavascriptSchemas(base::UTF8ToUTF16(url.spec())));
      if (model()->CanPasteAndGo(text)) {
        model()->PasteAndGo(text);
        return ui::DragDropTypes::DRAG_COPY;
      }
    }
   } else if (data.HasString()) {
     base::string16 text;
     if (data.GetString(&text)) {
      base::string16 collapsed_text(base::CollapseWhitespace(text, true));
       if (model()->CanPasteAndGo(collapsed_text))
         model()->PasteAndGo(collapsed_text);
       return ui::DragDropTypes::DRAG_COPY;
    }
  }

  return ui::DragDropTypes::DRAG_NONE;
}
",C,"      base::string16 collapsed_text(
          StripJavascriptSchemas(base::CollapseWhitespace(text, true)));
","      base::string16 collapsed_text(base::CollapseWhitespace(text, true));
",,"@@ -1098,7 +1098,8 @@ int OmniboxViewViews::OnDrop(const ui::OSExchangeData& data) {
   } else if (data.HasString()) {
     base::string16 text;
     if (data.GetString(&text)) {
-      base::string16 collapsed_text(base::CollapseWhitespace(text, true));
+      base::string16 collapsed_text(
+          StripJavascriptSchemas(base::CollapseWhitespace(text, true)));
       if (model()->CanPasteAndGo(collapsed_text))
         model()->PasteAndGo(collapsed_text);
       return ui::DragDropTypes::DRAG_COPY;",Chrome,16c719e0e275d2ee5d5c69e4962b744bcaf0fe40,4a165e1b93e099fceb38de3ade51e368ce949075,1,"int OmniboxViewViews::OnDrop(const ui::OSExchangeData& data) {
  if (HasTextBeingDragged())
    return ui::DragDropTypes::DRAG_NONE;

  if (data.HasURL(ui::OSExchangeData::CONVERT_FILENAMES)) {
    GURL url;
    base::string16 title;
    if (data.GetURLAndTitle(
            ui::OSExchangeData::CONVERT_FILENAMES, &url, &title)) {
      base::string16 text(
          StripJavascriptSchemas(base::UTF8ToUTF16(url.spec())));
      if (model()->CanPasteAndGo(text)) {
        model()->PasteAndGo(text);
        return ui::DragDropTypes::DRAG_COPY;
      }
    }
   } else if (data.HasString()) {
     base::string16 text;
     if (data.GetString(&text)) {
//flaw_line_below:
      base::string16 collapsed_text(base::CollapseWhitespace(text, true));
//fix_flaw_line_below:
//      base::string16 collapsed_text(
//fix_flaw_line_below:
//          StripJavascriptSchemas(base::CollapseWhitespace(text, true)));
       if (model()->CanPasteAndGo(collapsed_text))
         model()->PasteAndGo(collapsed_text);
       return ui::DragDropTypes::DRAG_COPY;
    }
  }

  return ui::DragDropTypes::DRAG_NONE;
}
",186914,"int OmniboxViewViews::OnDrop(const ui::OSExchangeData& data) {
  if (HasTextBeingDragged())
    return ui::DragDropTypes::DRAG_NONE;

  if (data.HasURL(ui::OSExchangeData::CONVERT_FILENAMES)) {
    GURL url;
    base::string16 title;
    if (data.GetURLAndTitle(
            ui::OSExchangeData::CONVERT_FILENAMES, &url, &title)) {
      base::string16 text(
          StripJavascriptSchemas(base::UTF8ToUTF16(url.spec())));
      if (model()->CanPasteAndGo(text)) {
        model()->PasteAndGo(text);
        return ui::DragDropTypes::DRAG_COPY;
      }
    }
   } else if (data.HasString()) {
     base::string16 text;
     if (data.GetString(&text)) {
      base::string16 collapsed_text(base::CollapseWhitespace(text, true));
       if (model()->CanPasteAndGo(collapsed_text))
         model()->PasteAndGo(collapsed_text);
       return ui::DragDropTypes::DRAG_COPY;
    }
  }

  return ui::DragDropTypes::DRAG_NONE;
}
","int OmniboxViewViews::OnDrop(const ui::OSExchangeData& data) {
  if (HasTextBeingDragged())
    return ui::DragDropTypes::DRAG_NONE;

  if (data.HasURL(ui::OSExchangeData::CONVERT_FILENAMES)) {
    GURL url;
    base::string16 title;
    if (data.GetURLAndTitle(
            ui::OSExchangeData::CONVERT_FILENAMES, &url, &title)) {
      base::string16 text(
          StripJavascriptSchemas(base::UTF8ToUTF16(url.spec())));
      if (model()->CanPasteAndGo(text)) {
        model()->PasteAndGo(text);
        return ui::DragDropTypes::DRAG_COPY;
      }
    }
   } else if (data.HasString()) {
     base::string16 text;
     if (data.GetString(&text)) {
      base::string16 collapsed_text(
          StripJavascriptSchemas(base::CollapseWhitespace(text, true)));
       if (model()->CanPasteAndGo(collapsed_text))
         model()->PasteAndGo(collapsed_text);
       return ui::DragDropTypes::DRAG_COPY;
    }
  }

  return ui::DragDropTypes::DRAG_NONE;
}
","The `OnDrop` function in the `OmniboxViewViews` class handles drag-and-drop operations for URLs and text within a user interface. It first checks if any text is currently being dragged; if so, it cancels the drop action. If the dropped data contains a URL, it retrieves the URL and its title, processes the URL to remove any JavaScript schemas, and checks if it can be pasted and navigated to. If valid, it executes the paste-and-go action. Similarly, if the data contains a string, it collapses whitespace and performs the same checks and actions. If neither condition is met, it returns a ""no drop"" status.","The provided code defines a function that manages the behavior of drag-and-drop actions within a user interface. It first checks if any text is currently being dragged; if so, it prevents the drop. If the dropped data includes a URL, the function processes it to remove specific schemas and verifies if it can be navigated to. If valid, it initiates a navigation action. Similarly, if the data contains a plain text string, it collapses any extra whitespace and performs the same checks and actions. If neither condition is satisfied, it indicates that the drop is not allowed.","The vulnerability identified as CWE-79, or improper neutralization of input during web page generation, arises from the potential for untrusted input to be executed as code in a web context. In the vulnerable code, user-provided URLs or strings could be processed without adequate sanitization, allowing for the injection of malicious scripts. The fix involved using the `StripJavascriptSchemas` function to sanitize the URL and text inputs before they are processed by the `PasteAndGo` function. This ensures that any harmful scripts are removed, thereby preventing the execution of unintended code and enhancing the security of the application.","The vulnerability identified as CWE-79, which pertains to improper neutralization of input during web page generation, allows untrusted input to be executed as code, potentially leading to cross-site scripting attacks. In the vulnerable code, user-provided URLs or text could be processed without sufficient sanitization, enabling the injection of malicious scripts. The fix involved implementing a sanitization step to remove any harmful elements from the input before it was processed further. This enhancement ensures that any potentially dangerous scripts are eliminated, thereby preventing their execution and significantly improving the security of the application.","The vulnerability was fixed by incorporating the `StripJavascriptSchemas` function to sanitize user inputs before they are processed. In the updated code, both the URL and the text strings are passed through this function, which removes any potentially harmful JavaScript schemas or scripts. This sanitization occurs after retrieving the URL and title or the plain text, ensuring that any malicious content is stripped away before the `PasteAndGo` function is called. By implementing this additional layer of input validation, the code effectively mitigates the risk of cross-site scripting attacks and enhances overall security.","The vulnerability was addressed by adding a sanitization step to clean user inputs before they are processed. This involved implementing a function that removes any potentially harmful elements, such as JavaScript schemas or scripts, from the URLs and text strings provided by users. By ensuring that all input is thoroughly sanitized before being used in navigation actions, the code effectively prevents the execution of malicious scripts. This enhancement significantly reduces the risk of cross-site scripting attacks, thereby improving the overall security of the application and protecting users from potential threats.","5,4","5, 5","4, 4","4,4"
